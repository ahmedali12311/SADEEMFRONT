{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oG_Ju\\\\OneDrive\\\\Desktop\\\\SadeemVendors-master\\\\frontend\\\\src\\\\components\\\\edituser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport '../css/editprofile.css';\nimport defaultImage from '../css/vendor.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditUser() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n  const [image, setImage] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [phone, setPhone] = useState('');\n  const [role, setRole] = useState(''); // Add state for role\n  const [errorMessages, setErrorMessages] = useState({\n    name: '',\n    email: '',\n    password: '',\n    phone: '',\n    role: '',\n    // Add error message for role\n    image: '',\n    general: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [success, setSuccess] = useState(null);\n  const [successColor, setSuccessColor] = useState('');\n  const imageRef = useRef(null);\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      setLoading(true);\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          throw new Error('No token found');\n        }\n        const response = await fetch(`http://localhost:8080/users/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          var _errorData$error, _errorData$error2, _errorData$error3, _errorData$error4;\n          const errorData = await response.json();\n          console.error('Backend errors:', errorData);\n          const newErrors = {\n            name: ((_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.name) || '',\n            email: ((_errorData$error2 = errorData.error) === null || _errorData$error2 === void 0 ? void 0 : _errorData$error2.email) || '',\n            password: ((_errorData$error3 = errorData.error) === null || _errorData$error3 === void 0 ? void 0 : _errorData$error3.password) || '',\n            phone: ((_errorData$error4 = errorData.error) === null || _errorData$error4 === void 0 ? void 0 : _errorData$error4.phone) || '',\n            role: '',\n            // Add role error message\n            image: '',\n            general: ''\n          };\n          if (response.status === 409 && errorData.error === 'Email already exists, try something else') {\n            newErrors.email = 'Email already exists, try something else.';\n          }\n          setErrorMessages(newErrors);\n          throw new Error('Failed to update profile');\n        }\n        const data = await response.json();\n        console.log('Fetched user data:', data);\n        if (data.user) {\n          const {\n            name,\n            email,\n            phone,\n            img,\n            role\n          } = data.user;\n          setName(name || '');\n          setEmail(email || '');\n          setPhone(phone || '');\n          setRole(role || ''); // Set role if available\n          setPreview(img || defaultImage);\n        } else {\n          console.error('No user data in response:', data);\n          setErrorMessages(prev => ({\n            ...prev,\n            general: 'User data is missing in response'\n          }));\n        }\n      } catch (error) {\n        console.error('Error fetching user details:', error);\n        setErrorMessages(prev => ({\n          ...prev,\n          general: 'Failed to load user details'\n        }));\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserDetails();\n  }, [userId]);\n  const handleImageClick = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\n      if (!validTypes.includes(file.type)) {\n        setErrorMessages(prev => ({\n          ...prev,\n          image: 'Invalid image type. Please upload a JPEG, PNG, GIF, or WEBP image.'\n        }));\n        setImage(null);\n        setPreview(prev => prev || defaultImage);\n        setTimeout(() => {\n          setErrorMessages(prev => ({\n            ...prev,\n            image: ''\n          }));\n        }, 10000);\n        return;\n      }\n      if (file.size > 2000000) {\n        // 2MB\n        setErrorMessages(prev => ({\n          ...prev,\n          image: 'Image size must be less than 2MB.'\n        }));\n        setImage(null);\n        setPreview(prev => prev || defaultImage);\n        setTimeout(() => {\n          setErrorMessages(prev => ({\n            ...prev,\n            image: ''\n          }));\n        }, 3000);\n        return;\n      }\n      setErrorMessages(prev => ({\n        ...prev,\n        image: ''\n      }));\n      setImage(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSave = async event => {\n    event.preventDefault();\n    setErrorMessages({\n      name: '',\n      email: '',\n      password: '',\n      phone: '',\n      role: '',\n      // Clear role error\n      image: '',\n      general: ''\n    });\n    let hasErrors = false;\n\n    // Validate Name\n    if (!name.trim()) {\n      setErrorMessages(prev => ({\n        ...prev,\n        name: 'Name is required.'\n      }));\n      hasErrors = true;\n    }\n\n    // Validate Email\n    if (!email.trim()) {\n      setErrorMessages(prev => ({\n        ...prev,\n        email: 'Email is required.'\n      }));\n      hasErrors = true;\n    }\n\n    // Validate Phone\n    if (!phone.trim()) {\n      setErrorMessages(prev => ({\n        ...prev,\n        phone: 'Phone number is required.'\n      }));\n      hasErrors = true;\n    }\n\n    // Validate Role\n    if (!role.trim()) {\n      setErrorMessages(prev => ({\n        ...prev,\n        role: 'Role is required.'\n      }));\n      hasErrors = true;\n    }\n\n    // Validate if image has errors\n    if (errorMessages.image) {\n      hasErrors = true;\n    }\n    if (hasErrors) {\n      setSuccess(null);\n      return;\n    }\n\n    // Create FormData object\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('phone', phone);\n    formData.append('role', role); // Append role\n\n    // Only append password if it's not empty\n    if (password.trim()) {\n      formData.append('password', password);\n    }\n\n    // Append image if the user selected one\n    if (image) {\n      formData.append('img', image);\n    }\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/users/${userId}`, {\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        body: formData\n      });\n      if (!response.ok) {\n        var _errorData$error5, _errorData$error6, _errorData$error7, _errorData$error8;\n        const errorData = await response.json();\n        console.error('Backend errors:', errorData);\n        const newErrors = {\n          name: ((_errorData$error5 = errorData.error) === null || _errorData$error5 === void 0 ? void 0 : _errorData$error5.name) || '',\n          email: ((_errorData$error6 = errorData.error) === null || _errorData$error6 === void 0 ? void 0 : _errorData$error6.email) || '',\n          password: ((_errorData$error7 = errorData.error) === null || _errorData$error7 === void 0 ? void 0 : _errorData$error7.password) || '',\n          phone: ((_errorData$error8 = errorData.error) === null || _errorData$error8 === void 0 ? void 0 : _errorData$error8.phone) || '',\n          role: '',\n          // Add role error message\n          image: '',\n          general: ''\n        };\n        if (response.status === 409 && errorData.error === 'Email already exists, try something else') {\n          newErrors.email = 'Email already exists, try something else.';\n        }\n        setErrorMessages(newErrors);\n        throw new Error('Failed to update profile');\n      }\n      setSuccess('Profile updated successfully');\n      setSuccessColor('green'); // Set success color to green\n      setTimeout(() => setSuccess(null), 2000); // Hide success message after 2 seconds\n      setTimeout(() => navigate(`/users`), 2000); // Optional: redirect after a short delay\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      setErrorMessages(prev => ({\n        ...prev,\n        general: 'Failed to update profile'\n      }));\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDelete = async () => {\n    if (window.confirm('Are you sure you want to delete this user?')) {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`http://localhost:8080/users/${userId}`, {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          console.error('Backend errors:', errorData);\n          setErrorMessages(prev => ({\n            ...prev,\n            general: 'Failed to delete user'\n          }));\n          return;\n        }\n        setSuccess('User deleted successfully');\n        setSuccessColor('red'); // Set success color to red\n        setTimeout(() => {\n          setSuccess(null);\n          navigate('/users'); // Redirect to users list after deletion\n        }, 2000); // Optional: redirect after a short delay\n      } catch (error) {\n        console.error('Error deleting user:', error);\n        setErrorMessages(prev => ({\n          ...prev,\n          general: 'Failed to delete user'\n        }));\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 12\n    }, this);\n  }\n  const handleImageError = e => {\n    e.target.src = defaultImage;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: preview || defaultImage,\n        alt: \"Profile\",\n        onError: handleImageError,\n        className: \"profile-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageClick,\n        ref: imageRef,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSave,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), errorMessages.name && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errorMessages.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), errorMessages.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errorMessages.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phone\",\n          children: \"Phone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"phone\",\n          value: phone,\n          onChange: e => setPhone(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), errorMessages.phone && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errorMessages.phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"role\",\n          children: \"Role:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"role\",\n          value: role,\n          onChange: e => setRole(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), errorMessages.role && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errorMessages.role\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), errorMessages.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errorMessages.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), errorMessages.general && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error general-error\",\n        children: errorMessages.general\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 35\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `success ${successColor}`,\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-save\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn-delete\",\n        onClick: handleDelete,\n        children: \"Delete User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n}\n_s(EditUser, \"ymy/dlnEwdIOgneb1RpmtaXcJ5Y=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditUser;\nexport default EditUser;\nvar _c;\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useParams","defaultImage","jsxDEV","_jsxDEV","EditUser","_s","userId","navigate","image","setImage","preview","setPreview","name","setName","email","setEmail","password","setPassword","phone","setPhone","role","setRole","errorMessages","setErrorMessages","general","loading","setLoading","success","setSuccess","successColor","setSuccessColor","imageRef","fetchUserDetails","token","localStorage","getItem","Error","response","fetch","headers","Authorization","ok","_errorData$error","_errorData$error2","_errorData$error3","_errorData$error4","errorData","json","console","error","newErrors","status","data","log","user","img","prev","handleImageClick","event","file","target","files","validTypes","includes","type","setTimeout","size","reader","FileReader","onloadend","result","readAsDataURL","handleSave","preventDefault","hasErrors","trim","formData","FormData","append","method","body","_errorData$error5","_errorData$error6","_errorData$error7","_errorData$error8","handleDelete","window","confirm","className","fileName","_jsxFileName","lineNumber","columnNumber","handleImageError","e","src","children","alt","onError","accept","onChange","ref","style","display","onSubmit","htmlFor","id","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/oG_Ju/OneDrive/Desktop/SadeemVendors-master/frontend/src/components/edituser.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport '../css/editprofile.css';\nimport defaultImage from '../css/vendor.jpg';\n\nfunction EditUser() {\n  const { userId } = useParams();\n  const navigate = useNavigate();\n  const [image, setImage] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [phone, setPhone] = useState('');\n  const [role, setRole] = useState(''); // Add state for role\n  const [errorMessages, setErrorMessages] = useState({\n    name: '',\n    email: '',\n    password: '',\n    phone: '',\n    role: '', // Add error message for role\n    image: '',\n    general: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [success, setSuccess] = useState(null);\n  const [successColor, setSuccessColor] = useState('');\n  const imageRef = useRef(null);\n\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      setLoading(true);\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          throw new Error('No token found');\n        }\n\n        const response = await fetch(`http://localhost:8080/users/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          console.error('Backend errors:', errorData);\n      \n          const newErrors = {\n            name: errorData.error?.name || '',\n            email: errorData.error?.email || '',\n            password: errorData.error?.password || '',\n            phone: errorData.error?.phone || '',\n            role: '', // Add role error message\n            image: '',\n            general: '',\n          };\n      \n          if (response.status === 409 && errorData.error === 'Email already exists, try something else') {\n            newErrors.email = 'Email already exists, try something else.';\n          }\n      \n          setErrorMessages(newErrors);\n      \n          throw new Error('Failed to update profile');\n        }\n\n        const data = await response.json();\n        console.log('Fetched user data:', data);\n\n        if (data.user) {\n          const { name, email, phone, img, role } = data.user;\n          setName(name || '');\n          setEmail(email || '');\n          setPhone(phone || '');\n          setRole(role || ''); // Set role if available\n          setPreview(img || defaultImage);\n        } else {\n          console.error('No user data in response:', data);\n          setErrorMessages(prev => ({ ...prev, general: 'User data is missing in response' }));\n        }\n      } catch (error) {\n        console.error('Error fetching user details:', error);\n        setErrorMessages(prev => ({ ...prev, general: 'Failed to load user details' }));\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUserDetails();\n  }, [userId]);\n\n  const handleImageClick = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\n      if (!validTypes.includes(file.type)) {\n        setErrorMessages(prev => ({\n          ...prev,\n          image: 'Invalid image type. Please upload a JPEG, PNG, GIF, or WEBP image.'\n        }));\n        \n        setImage(null);\n        setPreview(prev => prev || defaultImage);\n\n        setTimeout(() => {\n          setErrorMessages(prev => ({ ...prev, image: '' }));\n        }, 10000);\n\n        return;\n      }\n\n      if (file.size > 2000000) { // 2MB\n        setErrorMessages(prev => ({\n          ...prev,\n          image: 'Image size must be less than 2MB.'\n        }));\n\n        setImage(null);\n        setPreview(prev => prev || defaultImage);\n\n        setTimeout(() => {\n          setErrorMessages(prev => ({ ...prev, image: '' }));\n        }, 3000);\n\n        return;\n      }\n\n      setErrorMessages(prev => ({ ...prev, image: '' }));\n      setImage(file);\n\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleSave = async (event) => {\n    event.preventDefault();\n    \n    setErrorMessages({\n      name: '',\n      email: '',\n      password: '',\n      phone: '',\n      role: '', // Clear role error\n      image: '',\n      general: '',\n    });\n  \n    let hasErrors = false;\n  \n    // Validate Name\n    if (!name.trim()) {\n      setErrorMessages(prev => ({ ...prev, name: 'Name is required.' }));\n      hasErrors = true;\n    }\n  \n    // Validate Email\n    if (!email.trim()) {\n      setErrorMessages(prev => ({ ...prev, email: 'Email is required.' }));\n      hasErrors = true;\n    }\n  \n    // Validate Phone\n    if (!phone.trim()) {\n      setErrorMessages(prev => ({ ...prev, phone: 'Phone number is required.' }));\n      hasErrors = true;\n    }\n\n    // Validate Role\n    if (!role.trim()) {\n      setErrorMessages(prev => ({ ...prev, role: 'Role is required.' }));\n      hasErrors = true;\n    }\n  \n    // Validate if image has errors\n    if (errorMessages.image) {\n      hasErrors = true;\n    }\n  \n    if (hasErrors) {\n      setSuccess(null);\n      return;\n    }\n  \n    // Create FormData object\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('phone', phone);\n    formData.append('role', role); // Append role\n    \n    // Only append password if it's not empty\n    if (password.trim()) {\n      formData.append('password', password);\n    }\n  \n    // Append image if the user selected one\n    if (image) {\n      formData.append('img', image);\n    }\n  \n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/users/${userId}`, {\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        body: formData,\n      });\n  \n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Backend errors:', errorData);\n  \n        const newErrors = {\n          name: errorData.error?.name || '',\n          email: errorData.error?.email || '',\n          password: errorData.error?.password || '',\n          phone: errorData.error?.phone || '',\n          role: '', // Add role error message\n          image: '',\n          general: '',\n        };\n  \n        if (response.status === 409 && errorData.error === 'Email already exists, try something else') {\n          newErrors.email = 'Email already exists, try something else.';\n        }\n  \n        setErrorMessages(newErrors);\n        throw new Error('Failed to update profile');\n      }\n  \n      setSuccess('Profile updated successfully');\n      setSuccessColor('green'); // Set success color to green\n      setTimeout(() => setSuccess(null), 2000); // Hide success message after 2 seconds\n      setTimeout(() => navigate(`/users`), 2000); // Optional: redirect after a short delay\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      setErrorMessages(prev => ({ ...prev, general: 'Failed to update profile' }));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async () => {\n    if (window.confirm('Are you sure you want to delete this user?')) {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`http://localhost:8080/users/${userId}`, {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          console.error('Backend errors:', errorData);\n          setErrorMessages(prev => ({ ...prev, general: 'Failed to delete user' }));\n          return;\n        }\n\n        setSuccess('User deleted successfully');\n        setSuccessColor('red'); // Set success color to red\n        setTimeout(() => {\n          setSuccess(null);\n          navigate('/users'); // Redirect to users list after deletion\n        }, 2000); // Optional: redirect after a short delay\n      } catch (error) {\n        console.error('Error deleting user:', error);\n        setErrorMessages(prev => ({ ...prev, general: 'Failed to delete user' }));\n      }\n    }\n  };\n\n  if (loading) {\n    return <div className=\"spinner\"></div>;\n  }\n\n  const handleImageError = (e) => {\n    e.target.src = defaultImage;\n  };\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-image\">\n        <img\n          src={preview || defaultImage}\n          alt=\"Profile\"\n          onError={handleImageError}\n          className=\"profile-img\"\n        />\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={handleImageClick}\n          ref={imageRef}\n          style={{ display: 'none' }}\n        />\n      </div>\n      <form onSubmit={handleSave}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          {errorMessages.name && <p className=\"error\">{errorMessages.name}</p>}\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          {errorMessages.email && <p className=\"error\">{errorMessages.email}</p>}\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"phone\">Phone:</label>\n          <input\n            type=\"text\"\n            id=\"phone\"\n            value={phone}\n            onChange={(e) => setPhone(e.target.value)}\n          />\n          {errorMessages.phone && <p className=\"error\">{errorMessages.phone}</p>}\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"role\">Role:</label>\n          <input\n            type=\"text\"\n            id=\"role\"\n            value={role}\n            onChange={(e) => setRole(e.target.value)}\n          />\n          {errorMessages.role && <p className=\"error\">{errorMessages.role}</p>}\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          {errorMessages.password && <p className=\"error\">{errorMessages.password}</p>}\n        </div>\n        {errorMessages.general && <p className=\"error general-error\">{errorMessages.general}</p>}\n        {success && <p className={`success ${successColor}`}>{success}</p>}\n        <button type=\"submit\" className=\"btn-save\">Save</button>\n        <button type=\"button\" className=\"btn-delete\" onClick={handleDelete}>Delete User</button>\n      </form>\n    </div>\n  );\n}\n\nexport default EditUser;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}