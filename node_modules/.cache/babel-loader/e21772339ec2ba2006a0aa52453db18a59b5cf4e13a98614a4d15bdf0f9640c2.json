{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oG_Ju\\\\OneDrive\\\\Desktop\\\\SadeemVendors-master\\\\frontend\\\\src\\\\components\\\\edituser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport '../css/editprofile.css';\nimport defaultImage from '../css/vendor.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditUser() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n  const [image, setImage] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [phone, setPhone] = useState('');\n  const [vendorId, setVendorId] = useState(''); // New state for vendor ID\n  const [role, setRole] = useState(''); // New state for role\n  const [errorMessages, setErrorMessages] = useState({\n    name: '',\n    email: '',\n    password: '',\n    phone: '',\n    vendorId: '',\n    // New error state for vendor ID\n    role: '',\n    // New error state for role\n    image: '',\n    general: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [success, setSuccess] = useState(null);\n  const [successColor, setSuccessColor] = useState(''); // Add state for success message color\n  const imageRef = useRef(null);\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      setLoading(true);\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          throw new Error('No token found');\n        }\n        const response = await fetch(`http://localhost:8080/users/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          var _errorData$error, _errorData$error2, _errorData$error3, _errorData$error4;\n          const errorData = await response.json();\n          console.error('Backend errors:', errorData);\n          const newErrors = {\n            name: ((_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.name) || '',\n            email: ((_errorData$error2 = errorData.error) === null || _errorData$error2 === void 0 ? void 0 : _errorData$error2.email) || '',\n            password: ((_errorData$error3 = errorData.error) === null || _errorData$error3 === void 0 ? void 0 : _errorData$error3.password) || '',\n            phone: ((_errorData$error4 = errorData.error) === null || _errorData$error4 === void 0 ? void 0 : _errorData$error4.phone) || '',\n            vendorId: '',\n            role: '',\n            image: '',\n            general: ''\n          };\n          if (response.status === 409 && errorData.error === 'Email already exists, try something else') {\n            newErrors.email = 'Email already exists, try something else.';\n          }\n          setErrorMessages(newErrors);\n          throw new Error('Failed to update profile');\n        }\n        const data = await response.json();\n        console.log('Fetched user data:', data);\n        if (data.user) {\n          const {\n            name,\n            email,\n            phone,\n            img,\n            vendorId,\n            role\n          } = data.user;\n          setName(name || '');\n          setEmail(email || '');\n          setPhone(phone || '');\n          setVendorId(vendorId || ''); // Initialize vendorId\n          setRole(role || ''); // Initialize role\n          setPreview(img || defaultImage);\n        } else {\n          console.error('No user data in response:', data);\n          setErrorMessages(prev => ({\n            ...prev,\n            general: 'User data is missing in response'\n          }));\n        }\n      } catch (error) {\n        console.error('Error fetching user details:', error);\n        setErrorMessages(prev => ({\n          ...prev,\n          general: 'Failed to load user details'\n        }));\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserDetails();\n  }, [userId]);\n  const handleImageClick = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\n      if (!validTypes.includes(file.type)) {\n        setErrorMessages(prev => ({\n          ...prev,\n          image: 'Invalid image type. Please upload a JPEG, PNG, GIF, or WEBP image.'\n        }));\n        setImage(null);\n        setPreview(prev => prev || defaultImage);\n        setTimeout(() => {\n          setErrorMessages(prev => ({\n            ...prev,\n            image: ''\n          }));\n        }, 10000);\n        return;\n      }\n      if (file.size > 2000000) {\n        // 2MB\n        setErrorMessages(prev => ({\n          ...prev,\n          image: 'Image size must be less than 2MB.'\n        }));\n        setImage(null);\n        setPreview(prev => prev || defaultImage);\n        setTimeout(() => {\n          setErrorMessages(prev => ({\n            ...prev,\n            image: ''\n          }));\n        }, 3000);\n        return;\n      }\n      setErrorMessages(prev => ({\n        ...prev,\n        image: ''\n      }));\n      setImage(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSave = async event => {\n    event.preventDefault();\n    setErrorMessages({\n      name: '',\n      email: '',\n      password: '',\n      phone: '',\n      vendorId: '',\n      role: '',\n      image: '',\n      general: ''\n    });\n    let hasErrors = false;\n\n    // Validate Name\n    if (!name.trim()) {\n      setErrorMessages(prev => ({\n        ...prev,\n        name: 'Name is required.'\n      }));\n      hasErrors = true;\n    }\n\n    // Validate Email\n    if (!email.trim()) {\n      setErrorMessages(prev => ({\n        ...prev,\n        email: 'Email is required.'\n      }));\n      hasErrors = true;\n    }\n\n    // Validate Phone\n    if (!phone.trim()) {\n      setErrorMessages(prev => ({\n        ...prev,\n        phone: 'Phone number is required.'\n      }));\n      hasErrors = true;\n    }\n\n    // Validate Vendor ID\n    if (!vendorId.trim()) {\n      setErrorMessages(prev => ({\n        ...prev,\n        vendorId: 'Vendor ID is required.'\n      }));\n      hasErrors = true;\n    }\n\n    // Validate Role\n    if (!role.trim()) {\n      setErrorMessages(prev => ({\n        ...prev,\n        role: 'Role is required.'\n      }));\n      hasErrors = true;\n    }\n\n    // Validate if image has errors\n    if (errorMessages.image) {\n      hasErrors = true;\n    }\n    if (hasErrors) {\n      setSuccess(null);\n      return;\n    }\n\n    // Create FormData object\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('phone', phone);\n    formData.append('vendorId', vendorId); // Append vendorId\n    formData.append('role', role); // Append role\n\n    // Only append password if it's not empty\n    if (password.trim()) {\n      formData.append('password', password);\n    }\n\n    // Append image if the user selected one\n    if (image) {\n      formData.append('img', image);\n    }\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/users/${userId}`, {\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        body: formData\n      });\n      if (!response.ok) {\n        var _errorData$error5, _errorData$error6, _errorData$error7, _errorData$error8;\n        const errorData = await response.json();\n        console.error('Backend errors:', errorData);\n        const newErrors = {\n          name: ((_errorData$error5 = errorData.error) === null || _errorData$error5 === void 0 ? void 0 : _errorData$error5.name) || '',\n          email: ((_errorData$error6 = errorData.error) === null || _errorData$error6 === void 0 ? void 0 : _errorData$error6.email) || '',\n          password: ((_errorData$error7 = errorData.error) === null || _errorData$error7 === void 0 ? void 0 : _errorData$error7.password) || '',\n          phone: ((_errorData$error8 = errorData.error) === null || _errorData$error8 === void 0 ? void 0 : _errorData$error8.phone) || '',\n          vendorId: '',\n          role: '',\n          image: '',\n          general: ''\n        };\n        if (response.status === 409 && errorData.error === 'Email already exists, try something else') {\n          newErrors.email = 'Email already exists, try something else.';\n        }\n        setErrorMessages(newErrors);\n        throw new Error('Failed to update profile');\n      }\n      setSuccess('Profile updated successfully');\n      setSuccessColor('green'); // Set success color to green\n      setTimeout(() => setSuccess(null), 2000); // Hide success message after 2 seconds\n      setTimeout(() => navigate('/users'), 2000); // Optional: redirect after a short delay\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      setErrorMessages(prev => ({\n        ...prev,\n        general: 'Failed to update profile'\n      }));\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDelete = async () => {\n    if (window.confirm('Are you sure you want to delete this user?')) {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`http://localhost:8080/users/${userId}`, {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          console.error('Backend errors:', errorData);\n          setErrorMessages(prev => ({\n            ...prev,\n            general: 'Failed to delete user'\n          }));\n          return;\n        }\n        setSuccess('User deleted successfully');\n        setSuccessColor('red'); // Set success color to red\n        setTimeout(() => navigate('/users'), 2000); // Redirect after deletion\n      } catch (error) {\n        console.error('Error deleting user:', error);\n        setErrorMessages(prev => ({\n          ...prev,\n          general: 'Failed to delete user'\n        }));\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-profile-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-form\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSave,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-image-container\",\n            onClick: () => imageRef.current.click(),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: preview || defaultImage,\n              alt: \"Profile\",\n              className: \"profile-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/jpeg, image/png, image/gif, image/webp\",\n              ref: imageRef,\n              style: {\n                display: 'none'\n              },\n              onChange: handleImageClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `form-group ${errorMessages.name ? 'error' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: errorMessages.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `form-group ${errorMessages.email ? 'error' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), errorMessages.email && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: errorMessages.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `form-group ${errorMessages.password ? 'error' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this), errorMessages.password && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: errorMessages.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `form-group ${errorMessages.phone ? 'error' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"phone\",\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"phone\",\n              value: phone,\n              onChange: e => setPhone(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this), errorMessages.phone && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: errorMessages.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"save-button\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), errorMessages.general && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errorMessages.general\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 15\n        }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          style: {\n            color: successColor\n          },\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          className: \"delete-button\",\n          children: \"Delete User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 5\n  }, this);\n}\n_s(EditUser, \"Q4C700oZ4iENX/zJW+JkSCP/N2I=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditUser;\nexport default EditUser;\nvar _c;\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useParams","defaultImage","jsxDEV","_jsxDEV","EditUser","_s","userId","navigate","image","setImage","preview","setPreview","name","setName","email","setEmail","password","setPassword","phone","setPhone","vendorId","setVendorId","role","setRole","errorMessages","setErrorMessages","general","loading","setLoading","success","setSuccess","successColor","setSuccessColor","imageRef","fetchUserDetails","token","localStorage","getItem","Error","response","fetch","headers","Authorization","ok","_errorData$error","_errorData$error2","_errorData$error3","_errorData$error4","errorData","json","console","error","newErrors","status","data","log","user","img","prev","handleImageClick","event","file","target","files","validTypes","includes","type","setTimeout","size","reader","FileReader","onloadend","result","readAsDataURL","handleSave","preventDefault","hasErrors","trim","formData","FormData","append","method","body","_errorData$error5","_errorData$error6","_errorData$error7","_errorData$error8","handleDelete","window","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onClick","current","click","src","alt","accept","ref","style","display","onChange","htmlFor","id","value","e","color","_c","$RefreshReg$"],"sources":["C:/Users/oG_Ju/OneDrive/Desktop/SadeemVendors-master/frontend/src/components/edituser.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport '../css/editprofile.css';\nimport defaultImage from '../css/vendor.jpg';\n\nfunction EditUser() {\n  const { userId } = useParams();\n  const navigate = useNavigate();\n  const [image, setImage] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [phone, setPhone] = useState('');\n  const [vendorId, setVendorId] = useState(''); // New state for vendor ID\n  const [role, setRole] = useState(''); // New state for role\n  const [errorMessages, setErrorMessages] = useState({\n    name: '',\n    email: '',\n    password: '',\n    phone: '',\n    vendorId: '', // New error state for vendor ID\n    role: '', // New error state for role\n    image: '',\n    general: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [success, setSuccess] = useState(null);\n  const [successColor, setSuccessColor] = useState(''); // Add state for success message color\n  const imageRef = useRef(null);\n\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      setLoading(true);\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          throw new Error('No token found');\n        }\n\n        const response = await fetch(`http://localhost:8080/users/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          console.error('Backend errors:', errorData);\n\n          const newErrors = {\n            name: errorData.error?.name || '',\n            email: errorData.error?.email || '',\n            password: errorData.error?.password || '',\n            phone: errorData.error?.phone || '',\n            vendorId: '',\n            role: '',\n            image: '',\n            general: '',\n          };\n\n          if (response.status === 409 && errorData.error === 'Email already exists, try something else') {\n            newErrors.email = 'Email already exists, try something else.';\n          }\n\n          setErrorMessages(newErrors);\n\n          throw new Error('Failed to update profile');\n        }\n\n        const data = await response.json();\n        console.log('Fetched user data:', data);\n\n        if (data.user) {\n          const { name, email, phone, img, vendorId, role } = data.user;\n          setName(name || '');\n          setEmail(email || '');\n          setPhone(phone || '');\n          setVendorId(vendorId || ''); // Initialize vendorId\n          setRole(role || ''); // Initialize role\n          setPreview(img || defaultImage);\n        } else {\n          console.error('No user data in response:', data);\n          setErrorMessages(prev => ({ ...prev, general: 'User data is missing in response' }));\n        }\n      } catch (error) {\n        console.error('Error fetching user details:', error);\n        setErrorMessages(prev => ({ ...prev, general: 'Failed to load user details' }));\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUserDetails();\n  }, [userId]);\n\n  const handleImageClick = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\n      if (!validTypes.includes(file.type)) {\n        setErrorMessages(prev => ({\n          ...prev,\n          image: 'Invalid image type. Please upload a JPEG, PNG, GIF, or WEBP image.'\n        }));\n        \n        setImage(null);\n        setPreview(prev => prev || defaultImage);\n\n        setTimeout(() => {\n          setErrorMessages(prev => ({ ...prev, image: '' }));\n        }, 10000);\n\n        return;\n      }\n\n      if (file.size > 2000000) { // 2MB\n        setErrorMessages(prev => ({\n          ...prev,\n          image: 'Image size must be less than 2MB.'\n        }));\n\n        setImage(null);\n        setPreview(prev => prev || defaultImage);\n\n        setTimeout(() => {\n          setErrorMessages(prev => ({ ...prev, image: '' }));\n        }, 3000);\n\n        return;\n      }\n\n      setErrorMessages(prev => ({ ...prev, image: '' }));\n      setImage(file);\n\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleSave = async (event) => {\n    event.preventDefault();\n    \n    setErrorMessages({\n      name: '',\n      email: '',\n      password: '',\n      phone: '',\n      vendorId: '',\n      role: '',\n      image: '',\n      general: '',\n    });\n  \n    let hasErrors = false;\n  \n    // Validate Name\n    if (!name.trim()) {\n      setErrorMessages(prev => ({ ...prev, name: 'Name is required.' }));\n      hasErrors = true;\n    }\n  \n    // Validate Email\n    if (!email.trim()) {\n      setErrorMessages(prev => ({ ...prev, email: 'Email is required.' }));\n      hasErrors = true;\n    }\n  \n    // Validate Phone\n    if (!phone.trim()) {\n      setErrorMessages(prev => ({ ...prev, phone: 'Phone number is required.' }));\n      hasErrors = true;\n    }\n  \n    // Validate Vendor ID\n    if (!vendorId.trim()) {\n      setErrorMessages(prev => ({ ...prev, vendorId: 'Vendor ID is required.' }));\n      hasErrors = true;\n    }\n  \n    // Validate Role\n    if (!role.trim()) {\n      setErrorMessages(prev => ({ ...prev, role: 'Role is required.' }));\n      hasErrors = true;\n    }\n  \n    // Validate if image has errors\n    if (errorMessages.image) {\n      hasErrors = true;\n    }\n  \n    if (hasErrors) {\n      setSuccess(null);\n      return;\n    }\n  \n    // Create FormData object\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('phone', phone);\n    formData.append('vendorId', vendorId); // Append vendorId\n    formData.append('role', role); // Append role\n  \n    // Only append password if it's not empty\n    if (password.trim()) {\n      formData.append('password', password);\n    }\n  \n    // Append image if the user selected one\n    if (image) {\n      formData.append('img', image);\n    }\n  \n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/users/${userId}`, {\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        body: formData,\n      });\n  \n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Backend errors:', errorData);\n  \n        const newErrors = {\n          name: errorData.error?.name || '',\n          email: errorData.error?.email || '',\n          password: errorData.error?.password || '',\n          phone: errorData.error?.phone || '',\n          vendorId: '',\n          role: '',\n          image: '',\n          general: '',\n        };\n  \n        if (response.status === 409 && errorData.error === 'Email already exists, try something else') {\n          newErrors.email = 'Email already exists, try something else.';\n        }\n  \n        setErrorMessages(newErrors);\n        throw new Error('Failed to update profile');\n      }\n  \n      setSuccess('Profile updated successfully');\n      setSuccessColor('green'); // Set success color to green\n      setTimeout(() => setSuccess(null), 2000); // Hide success message after 2 seconds\n      setTimeout(() => navigate('/users'), 2000); // Optional: redirect after a short delay\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      setErrorMessages(prev => ({ ...prev, general: 'Failed to update profile' }));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async () => {\n    if (window.confirm('Are you sure you want to delete this user?')) {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`http://localhost:8080/users/${userId}`, {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          console.error('Backend errors:', errorData);\n          setErrorMessages(prev => ({ ...prev, general: 'Failed to delete user' }));\n          return;\n        }\n\n        setSuccess('User deleted successfully');\n        setSuccessColor('red'); // Set success color to red\n        setTimeout(() => navigate('/users'), 2000); // Redirect after deletion\n      } catch (error) {\n        console.error('Error deleting user:', error);\n        setErrorMessages(prev => ({ ...prev, general: 'Failed to delete user' }));\n      }\n    }\n  };\n\n  return (\n    <div className=\"edit-profile-container\">\n      <div className=\"profile-form\">\n        {loading ? (\n          <div className=\"loading-spinner\">Loading...</div>\n        ) : (\n          <div>\n            <h2>Edit User</h2>\n            <form onSubmit={handleSave}>\n              <div className=\"profile-image-container\" onClick={() => imageRef.current.click()}>\n                <img src={preview || defaultImage} alt=\"Profile\" className=\"profile-image\" />\n                <input\n                  type=\"file\"\n                  accept=\"image/jpeg, image/png, image/gif, image/webp\"\n                  ref={imageRef}\n                  style={{ display: 'none' }}\n                  onChange={handleImageClick}\n                />\n              </div>\n              <div className={`form-group ${errorMessages.name ? 'error' : ''}`}>\n                <label htmlFor=\"name\">Name:</label>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                />\n                {errorMessages.name && (\n                  <div className=\"error-message\">{errorMessages.name}</div>\n                )}\n              </div>\n              <div className={`form-group ${errorMessages.email ? 'error' : ''}`}>\n                <label htmlFor=\"email\">Email:</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n                {errorMessages.email && (\n                  <div className=\"error-message\">{errorMessages.email}</div>\n                )}\n              </div>\n              <div className={`form-group ${errorMessages.password ? 'error' : ''}`}>\n                <label htmlFor=\"password\">Password:</label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n                {errorMessages.password && (\n                  <div className=\"error-message\">{errorMessages.password}</div>\n                )}\n              </div>\n              <div className={`form-group ${errorMessages.phone ? 'error' : ''}`}>\n                <label htmlFor=\"phone\">Phone:</label>\n                <input\n                  type=\"text\"\n                  id=\"phone\"\n                  value={phone}\n                  onChange={(e) => setPhone(e.target.value)}\n                />\n                {errorMessages.phone && (\n                  <div className=\"error-message\">{errorMessages.phone}</div>\n                )}\n              </div>\n             \n              <button type=\"submit\" className=\"save-button\">Save Changes</button>\n            </form>\n            {errorMessages.general && (\n              <div className=\"error-message\">{errorMessages.general}</div>\n            )}\n            {success && (\n              <div className=\"success-message\" style={{ color: successColor }}>{success}</div>\n            )}\n            <button onClick={handleDelete} className=\"delete-button\">Delete User</button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default EditUser;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}