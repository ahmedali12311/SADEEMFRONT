{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oG_Ju\\\\OneDrive\\\\Desktop\\\\SadeemVendors-master\\\\frontend\\\\src\\\\components\\\\edituser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport '../css/editprofile.css';\nimport defaultImage from '../css/vendor.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditUser() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n  const [image, setImage] = useState(null);\n  const [preview, setPreview] = useState(defaultImage); // Set default image initially\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [phone, setPhone] = useState('');\n  const [errorMessages, setErrorMessages] = useState({\n    name: '',\n    email: '',\n    password: '',\n    phone: '',\n    image: '',\n    general: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [success, setSuccess] = useState(null);\n  const [successColor, setSuccessColor] = useState(''); // State for success message color\n  const [roles, setRoles] = useState([]);\n  const [rolesError, setRolesError] = useState('');\n  const imageRef = useRef(null);\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      setLoading(true);\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          throw new Error('No token found');\n        }\n        const response = await fetch(`http://localhost:8080/users/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          var _errorData$error, _errorData$error2, _errorData$error3, _errorData$error4;\n          const errorData = await response.json();\n          console.error('Backend errors:', errorData);\n          const newErrors = {\n            name: ((_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.name) || '',\n            email: ((_errorData$error2 = errorData.error) === null || _errorData$error2 === void 0 ? void 0 : _errorData$error2.email) || '',\n            password: ((_errorData$error3 = errorData.error) === null || _errorData$error3 === void 0 ? void 0 : _errorData$error3.password) || '',\n            phone: ((_errorData$error4 = errorData.error) === null || _errorData$error4 === void 0 ? void 0 : _errorData$error4.phone) || '',\n            image: '',\n            general: ''\n          };\n          if (response.status === 409 && errorData.error === 'Email already exists, try something else') {\n            newErrors.email = 'Email already exists, try something else.';\n          }\n          setErrorMessages(newErrors);\n          throw new Error('Failed to update profile');\n        }\n        const data = await response.json();\n        console.log('Fetched user data:', data);\n        if (data.user) {\n          const {\n            name,\n            email,\n            phone,\n            img\n          } = data.user;\n          setName(name || '');\n          setEmail(email || '');\n          setPhone(phone || '');\n          setPreview(img || defaultImage);\n        } else {\n          console.error('No user data in response:', data);\n          setErrorMessages(prev => ({\n            ...prev,\n            general: 'User data is missing in response'\n          }));\n        }\n      } catch (error) {\n        console.error('Error fetching user details:', error);\n        setErrorMessages(prev => ({\n          ...prev,\n          general: 'Failed to load user details'\n        }));\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserDetails();\n  }, [userId]);\n  useEffect(() => {\n    const fetchUserRoles = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          throw new Error('No token found');\n        }\n        const response = await fetch(`http://localhost:8080/userroles/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          console.error('Backend errors:', errorData);\n          setRolesError('Failed to load user roles');\n          return;\n        }\n        const data = await response.json();\n        setRoles(data.roles || []);\n      } catch (error) {\n        console.error('Error fetching user roles:', error);\n        setRolesError('Failed to load user roles');\n      }\n    };\n    fetchUserRoles();\n  }, [userId]);\n  const handleImageClick = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\n      if (!validTypes.includes(file.type)) {\n        setErrorMessages(prev => ({\n          ...prev,\n          image: 'Invalid image type. Please upload a JPEG, PNG, GIF, or WEBP image.'\n        }));\n        setImage(null);\n        setPreview(prev => prev || defaultImage);\n        setTimeout(() => {\n          setErrorMessages(prev => ({\n            ...prev,\n            image: ''\n          }));\n        }, 10000);\n        return;\n      }\n      if (file.size > 2000000) {\n        // 2MB\n        setErrorMessages(prev => ({\n          ...prev,\n          image: 'Image size must be less than 2MB.'\n        }));\n        setImage(null);\n        setPreview(prev => prev || defaultImage);\n        setTimeout(() => {\n          setErrorMessages(prev => ({\n            ...prev,\n            image: ''\n          }));\n        }, 3000);\n        return;\n      }\n      setErrorMessages(prev => ({\n        ...prev,\n        image: ''\n      }));\n      setImage(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSave = async event => {\n    event.preventDefault();\n    setErrorMessages({\n      name: '',\n      email: '',\n      password: '',\n      phone: '',\n      image: '',\n      general: ''\n    });\n    let hasErrors = false;\n\n    // Validate Name\n    if (!name.trim()) {\n      setErrorMessages(prev => ({\n        ...prev,\n        name: 'Name is required.'\n      }));\n      hasErrors = true;\n    }\n\n    // Validate Email\n    if (!email.trim()) {\n      setErrorMessages(prev => ({\n        ...prev,\n        email: 'Email is required.'\n      }));\n      hasErrors = true;\n    }\n\n    // Validate Phone\n    if (!phone.trim()) {\n      setErrorMessages(prev => ({\n        ...prev,\n        phone: 'Phone number is required.'\n      }));\n      hasErrors = true;\n    }\n\n    // Validate if image has errors\n    if (errorMessages.image) {\n      hasErrors = true;\n    }\n    if (hasErrors) {\n      setSuccess(null);\n      return;\n    }\n\n    // Create FormData object\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('phone', phone);\n\n    // Only append password if it's not empty\n    if (password.trim()) {\n      formData.append('password', password);\n    }\n\n    // Append image if the user selected one\n    if (image) {\n      formData.append('img', image);\n    }\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/users/${userId}`, {\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        body: formData\n      });\n      if (!response.ok) {\n        var _errorData$error5, _errorData$error6, _errorData$error7, _errorData$error8;\n        const errorData = await response.json();\n        console.error('Backend errors:', errorData);\n        const newErrors = {\n          name: ((_errorData$error5 = errorData.error) === null || _errorData$error5 === void 0 ? void 0 : _errorData$error5.name) || '',\n          email: ((_errorData$error6 = errorData.error) === null || _errorData$error6 === void 0 ? void 0 : _errorData$error6.email) || '',\n          password: ((_errorData$error7 = errorData.error) === null || _errorData$error7 === void 0 ? void 0 : _errorData$error7.password) || '',\n          phone: ((_errorData$error8 = errorData.error) === null || _errorData$error8 === void 0 ? void 0 : _errorData$error8.phone) || '',\n          image: '',\n          general: ''\n        };\n        if (response.status === 409 && errorData.error === 'Email already exists, try something else') {\n          newErrors.email = 'Email already exists, try something else.';\n        }\n        setErrorMessages(newErrors);\n        throw new Error('Failed to update profile');\n      }\n      setSuccess('Profile updated successfully');\n      setSuccessColor('green'); // Set success color to green\n      setTimeout(() => setSuccess(null), 2000); // Hide success message after 2 seconds\n      setTimeout(() => navigate(`/users`), 2000); // Optional: redirect after a short delay\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      setErrorMessages(prev => ({\n        ...prev,\n        general: 'Failed to update profile'\n      }));\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDelete = async () => {\n    if (window.confirm('Are you sure you want to delete this user?')) {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`http://localhost:8080/users/${userId}`, {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          console.error('Backend errors:', errorData);\n          alert('Failed to delete user');\n          return;\n        }\n        alert('User deleted successfully');\n        navigate('/users');\n      } catch (error) {\n        console.error('Error deleting user:', error);\n        alert('Failed to delete user');\n      }\n    }\n  };\n  const handleImageError = () => {\n    setPreview(defaultImage);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-image-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: imageRef,\n        onChange: handleImageClick,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: preview,\n        alt: name,\n        className: `profile-image ${!preview ? 'no-image' : ''}`,\n        onError: handleImageError,\n        onClick: () => {\n          var _imageRef$current;\n          return (_imageRef$current = imageRef.current) === null || _imageRef$current === void 0 ? void 0 : _imageRef$current.click();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), errorMessages.image && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessages.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-info-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSave,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group ${errorMessages.name ? 'error' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errorMessages.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group ${errorMessages.email ? 'error' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), errorMessages.email && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errorMessages.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group ${errorMessages.password ? 'error' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), errorMessages.password && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errorMessages.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group ${errorMessages.phone ? 'error' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"phone\",\n            value: phone,\n            onChange: e => setPhone(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), errorMessages.phone && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errorMessages.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), errorMessages.general && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errorMessages.general\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          style: {\n            color: successColor\n          },\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"my-delete-btn\",\n            className: \"delete-button\",\n            onClick: handleDelete,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-roles-container\",\n      children: [rolesError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: rolesError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"User Roles:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: roles.length > 0 ? roles.map((role, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: role\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No roles found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 5\n  }, this);\n}\n_s(EditUser, \"61cAVd2p3gN4TVR0DuuITpSNloM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditUser;\nexport default EditUser;\nvar _c;\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useParams","defaultImage","jsxDEV","_jsxDEV","EditUser","_s","userId","navigate","image","setImage","preview","setPreview","name","setName","email","setEmail","password","setPassword","phone","setPhone","errorMessages","setErrorMessages","general","loading","setLoading","success","setSuccess","successColor","setSuccessColor","roles","setRoles","rolesError","setRolesError","imageRef","fetchUserDetails","token","localStorage","getItem","Error","response","fetch","headers","Authorization","ok","_errorData$error","_errorData$error2","_errorData$error3","_errorData$error4","errorData","json","console","error","newErrors","status","data","log","user","img","prev","fetchUserRoles","handleImageClick","event","file","target","files","validTypes","includes","type","setTimeout","size","reader","FileReader","onloadend","result","readAsDataURL","handleSave","preventDefault","hasErrors","trim","formData","FormData","append","method","body","_errorData$error5","_errorData$error6","_errorData$error7","_errorData$error8","handleDelete","window","confirm","alert","handleImageError","children","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","onChange","style","display","src","alt","onError","onClick","_imageRef$current","current","click","onSubmit","htmlFor","id","value","e","color","length","map","role","index","_c","$RefreshReg$"],"sources":["C:/Users/oG_Ju/OneDrive/Desktop/SadeemVendors-master/frontend/src/components/edituser.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport '../css/editprofile.css';\nimport defaultImage from '../css/vendor.jpg';\n\nfunction EditUser() {\n  const { userId } = useParams();\n  const navigate = useNavigate();\n  const [image, setImage] = useState(null);\n  const [preview, setPreview] = useState(defaultImage); // Set default image initially\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [phone, setPhone] = useState('');\n  const [errorMessages, setErrorMessages] = useState({\n    name: '',\n    email: '',\n    password: '',\n    phone: '',\n    image: '',\n    general: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [success, setSuccess] = useState(null);\n  const [successColor, setSuccessColor] = useState(''); // State for success message color\n  const [roles, setRoles] = useState([]);\n  const [rolesError, setRolesError] = useState('');\n  const imageRef = useRef(null);\n\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      setLoading(true);\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          throw new Error('No token found');\n        }\n\n        const response = await fetch(`http://localhost:8080/users/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          console.error('Backend errors:', errorData);\n        \n          const newErrors = {\n            name: errorData.error?.name || '',\n            email: errorData.error?.email || '',\n            password: errorData.error?.password || '',\n            phone: errorData.error?.phone || '',\n            image: '',\n            general: '',\n          };\n        \n          if (response.status === 409 && errorData.error === 'Email already exists, try something else') {\n            newErrors.email = 'Email already exists, try something else.';\n          }\n        \n          setErrorMessages(newErrors);\n          throw new Error('Failed to update profile');\n        }\n\n        const data = await response.json();\n        console.log('Fetched user data:', data);\n\n        if (data.user) {\n          const { name, email, phone, img } = data.user;\n          setName(name || '');\n          setEmail(email || '');\n          setPhone(phone || '');\n          setPreview(img || defaultImage);\n        } else {\n          console.error('No user data in response:', data);\n          setErrorMessages(prev => ({ ...prev, general: 'User data is missing in response' }));\n        }\n      } catch (error) {\n        console.error('Error fetching user details:', error);\n        setErrorMessages(prev => ({ ...prev, general: 'Failed to load user details' }));\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUserDetails();\n  }, [userId]);\n\n  useEffect(() => {\n    const fetchUserRoles = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          throw new Error('No token found');\n        }\n\n        const response = await fetch(`http://localhost:8080/userroles/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          console.error('Backend errors:', errorData);\n          setRolesError('Failed to load user roles');\n          return;\n        }\n\n        const data = await response.json();\n        setRoles(data.roles || []);\n      } catch (error) {\n        console.error('Error fetching user roles:', error);\n        setRolesError('Failed to load user roles');\n      }\n    };\n\n    fetchUserRoles();\n  }, [userId]);\n\n  const handleImageClick = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\n      if (!validTypes.includes(file.type)) {\n        setErrorMessages(prev => ({\n          ...prev,\n          image: 'Invalid image type. Please upload a JPEG, PNG, GIF, or WEBP image.'\n        }));\n        \n        setImage(null);\n        setPreview(prev => prev || defaultImage);\n\n        setTimeout(() => {\n          setErrorMessages(prev => ({ ...prev, image: '' }));\n        }, 10000);\n\n        return;\n      }\n\n      if (file.size > 2000000) { // 2MB\n        setErrorMessages(prev => ({\n          ...prev,\n          image: 'Image size must be less than 2MB.'\n        }));\n\n        setImage(null);\n        setPreview(prev => prev || defaultImage);\n\n        setTimeout(() => {\n          setErrorMessages(prev => ({ ...prev, image: '' }));\n        }, 3000);\n\n        return;\n      }\n\n      setErrorMessages(prev => ({ ...prev, image: '' }));\n      setImage(file);\n\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleSave = async (event) => {\n    event.preventDefault();\n    \n    setErrorMessages({\n      name: '',\n      email: '',\n      password: '',\n      phone: '',\n      image: '',\n      general: '',\n    });\n  \n    let hasErrors = false;\n  \n    // Validate Name\n    if (!name.trim()) {\n      setErrorMessages(prev => ({ ...prev, name: 'Name is required.' }));\n      hasErrors = true;\n    }\n  \n    // Validate Email\n    if (!email.trim()) {\n      setErrorMessages(prev => ({ ...prev, email: 'Email is required.' }));\n      hasErrors = true;\n    }\n  \n    // Validate Phone\n    if (!phone.trim()) {\n      setErrorMessages(prev => ({ ...prev, phone: 'Phone number is required.' }));\n      hasErrors = true;\n    }\n  \n    // Validate if image has errors\n    if (errorMessages.image) {\n      hasErrors = true;\n    }\n  \n    if (hasErrors) {\n      setSuccess(null);\n      return;\n    }\n  \n    // Create FormData object\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('phone', phone);\n  \n    // Only append password if it's not empty\n    if (password.trim()) {\n      formData.append('password', password);\n    }\n  \n    // Append image if the user selected one\n    if (image) {\n      formData.append('img', image);\n    }\n  \n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/users/${userId}`, {\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        body: formData,\n      });\n  \n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Backend errors:', errorData);\n  \n        const newErrors = {\n          name: errorData.error?.name || '',\n          email: errorData.error?.email || '',\n          password: errorData.error?.password || '',\n          phone: errorData.error?.phone || '',\n          image: '',\n          general: '',\n        };\n  \n        if (response.status === 409 && errorData.error === 'Email already exists, try something else') {\n          newErrors.email = 'Email already exists, try something else.';\n        }\n  \n        setErrorMessages(newErrors);\n        throw new Error('Failed to update profile');\n      }\n  \n      setSuccess('Profile updated successfully');\n      setSuccessColor('green'); // Set success color to green\n      setTimeout(() => setSuccess(null), 2000); // Hide success message after 2 seconds\n      setTimeout(() => navigate(`/users`), 2000); // Optional: redirect after a short delay\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      setErrorMessages(prev => ({ ...prev, general: 'Failed to update profile' }));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async () => {\n    if (window.confirm('Are you sure you want to delete this user?')) {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`http://localhost:8080/users/${userId}`, {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          console.error('Backend errors:', errorData);\n          alert('Failed to delete user');\n          return;\n        }\n\n        alert('User deleted successfully');\n        navigate('/users');\n      } catch (error) {\n        console.error('Error deleting user:', error);\n        alert('Failed to delete user');\n      }\n    }\n  };\n\n  const handleImageError = () => {\n    setPreview(defaultImage);\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-image-container\">\n        <input\n          type=\"file\"\n          ref={imageRef}\n          onChange={handleImageClick}\n          style={{ display: 'none' }}\n        />\n        <img\n          src={preview}\n          alt={name}\n          className={`profile-image ${!preview ? 'no-image' : ''}`}\n          onError={handleImageError}\n          onClick={() => imageRef.current?.click()}\n        />\n        {errorMessages.image && (\n          <div className=\"error-message\">{errorMessages.image}</div>\n        )}\n      </div>\n      <div className=\"profile-info-container\">\n        <form onSubmit={handleSave}>\n          <div className={`form-group ${errorMessages.name ? 'error' : ''}`}>\n            <label htmlFor=\"name\">Name:</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n            {errorMessages.name && (\n              <div className=\"error-message\">{errorMessages.name}</div>\n            )}\n          </div>\n          <div className={`form-group ${errorMessages.email ? 'error' : ''}`}>\n            <label htmlFor=\"email\">Email:</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            {errorMessages.email && (\n              <div className=\"error-message\">{errorMessages.email}</div>\n            )}\n          </div>\n          <div className={`form-group ${errorMessages.password ? 'error' : ''}`}>\n            <label htmlFor=\"password\">Password:</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            {errorMessages.password && (\n              <div className=\"error-message\">{errorMessages.password}</div>\n            )}\n          </div>\n          <div className={`form-group ${errorMessages.phone ? 'error' : ''}`}>\n            <label htmlFor=\"phone\">Phone:</label>\n            <input\n              type=\"text\"\n              id=\"phone\"\n              value={phone}\n              onChange={(e) => setPhone(e.target.value)}\n            />\n            {errorMessages.phone && (\n              <div className=\"error-message\">{errorMessages.phone}</div>\n            )}\n          </div>\n          {errorMessages.general && (\n            <div className=\"error-message\">{errorMessages.general}</div>\n          )}\n          {success && (\n            <div className=\"success-message\" style={{ color: successColor }}>\n              {success}\n            </div>\n          )}\n          <div className=\"form-buttons\">\n            <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n            <button type=\"button\" id=\"my-delete-btn\" className=\"delete-button\" onClick={handleDelete}>Delete</button>\n          </div>\n        </form>\n      </div>\n      <div className=\"user-roles-container\">\n        {rolesError && <div className=\"error-message\">{rolesError}</div>}\n        <h3>User Roles:</h3>\n        <ul>\n          {roles.length > 0 ? (\n            roles.map((role, index) => (\n              <li key={index}>{role}</li>\n            ))\n          ) : (\n            <li>No roles found</li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default EditUser;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}