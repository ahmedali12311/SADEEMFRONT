{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oG_Ju\\\\OneDrive\\\\Desktop\\\\SadeemVendorapp\\\\frontend\\\\src\\\\components\\\\vendorDetailsSection\\\\AdminList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminList({\n  admins,\n  fetchVendorAdmins\n}) {\n  _s();\n  const [newAdminEmail, setNewAdminEmail] = useState('');\n  const handleAddAdmin = async () => {\n    if (!newAdminEmail) return;\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/vendors/admins`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          Authorization: `Bearer ${token}`\n        },\n        body: new URLSearchParams({\n          Email: newAdminEmail\n        })\n      });\n      if (response.ok) {\n        setNewAdminEmail('');\n        fetchVendorAdmins(); // Refresh admin list\n      }\n    } catch (error) {\n      console.error('Error adding admin:', error);\n    }\n  };\n  const handleRemoveAdmin = async adminId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/vendors/admins/${adminId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        fetchVendorAdmins();\n      }\n    } catch (error) {\n      console.error('Error removing admin:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Admins\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: admins.map(admin => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [admin.email, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveAdmin(admin.id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 27\n        }, this)]\n      }, admin.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: newAdminEmail,\n      onChange: e => setNewAdminEmail(e.target.value),\n      placeholder: \"New Admin Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddAdmin,\n      children: \"Add Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminList, \"Fj1qWOTCv1ZIJB4C7gAYicmHWFs=\");\n_c = AdminList;\nexport default AdminList;\nvar _c;\n$RefreshReg$(_c, \"AdminList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AdminList","admins","fetchVendorAdmins","_s","newAdminEmail","setNewAdminEmail","handleAddAdmin","token","localStorage","getItem","response","fetch","method","headers","Authorization","body","URLSearchParams","Email","ok","error","console","handleRemoveAdmin","adminId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","admin","email","onClick","id","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/oG_Ju/OneDrive/Desktop/SadeemVendorapp/frontend/src/components/vendorDetailsSection/AdminList.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction AdminList({ admins, fetchVendorAdmins }) {\r\n  const [newAdminEmail, setNewAdminEmail] = useState('');\r\n\r\n  const handleAddAdmin = async () => {\r\n    if (!newAdminEmail) return;\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`http://localhost:8080/vendors/admins`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: new URLSearchParams({ Email: newAdminEmail }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setNewAdminEmail('');\r\n        fetchVendorAdmins(); // Refresh admin list\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding admin:', error);\r\n    }\r\n  };\r\n\r\n  const handleRemoveAdmin = async (adminId) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`http://localhost:8080/vendors/admins/${adminId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        fetchVendorAdmins();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error removing admin:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-list\">\r\n      <h3>Admins</h3>\r\n      <ul>\r\n        {admins.map(admin => (\r\n          <li key={admin.id}>\r\n            {admin.email} <button onClick={() => handleRemoveAdmin(admin.id)}>Remove</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <input\r\n        type=\"email\"\r\n        value={newAdminEmail}\r\n        onChange={(e) => setNewAdminEmail(e.target.value)}\r\n        placeholder=\"New Admin Email\"\r\n      />\r\n      <button onClick={handleAddAdmin}>Add Admin</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}