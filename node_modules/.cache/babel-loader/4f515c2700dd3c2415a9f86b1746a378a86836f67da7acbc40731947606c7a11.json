{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oG_Ju\\\\OneDrive\\\\Desktop\\\\SadeemVendorapp\\\\frontend\\\\src\\\\components\\\\navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode'; // Fixed import\nimport '../css/Navbar.css';\nimport logo from '../css/vendor.jpg';\nimport defaultImage from '../css/vendor.jpg';\nimport { useOrderUpdate } from './OrderUpdateContext'; // Import the context\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Navbar = ({\n  initialCartItems = [],\n  onCartItemsChange,\n  refreshCart\n}) => {\n  _s();\n  // Default to empty array\n  const [userRole, setUserRole] = useState(null);\n  const [isTransparent, setIsTransparent] = useState(false);\n  const [cartDropdownVisible, setCartDropdownVisible] = useState(false);\n  const [cartItems, setCartItems] = useState(initialCartItems); // Initial cart items or empty array\n  const [editedCartItems, setEditedCartItems] = useState([]); // Track the edited cart items here\n  const [cart, setCart] = useState({});\n  const [cartDescription, setCartDescription] = useState('');\n  const [initialCartDescription, setInitialCartDescription] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [totalQuantity, setTotalQuantity] = useState(0);\n  const [loadingCartItems, setLoadingCartItems] = useState(false);\n  const [loadingCheckout, setLoadingCheckout] = useState(false);\n  const [isQuantitySaved, setIsQuantitySaved] = useState(true); // State to track if quantity and description are saved\n  const navigate = useNavigate();\n  const dropdownRef = useRef(null);\n  const {\n    setShouldUpdateOrders\n  } = useOrderUpdate(); // Use the context\n  const [isSaving, setIsSaving] = useState(false);\n\n  // Fetch cart items and update state\n  const fetchCartItems = useCallback(async () => {\n    const token = localStorage.getItem('token');\n    if (!token) return;\n    try {\n      var _cartData$cart, _cartData$cart2, _cartData$cart3;\n      setLoadingCartItems(true);\n      const [itemsResponse, cartResponse] = await Promise.all([fetch('http://localhost:8080/cartitems', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), fetch('http://localhost:8080/carts', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })]);\n      if (!itemsResponse.ok || !cartResponse.ok) {\n        throw new Error('You must have a table to checkout!');\n      }\n      const itemsData = await itemsResponse.json();\n      console.log(itemsData.cart);\n      setCartItems(itemsData.cart || []);\n      setEditedCartItems(itemsData.cart || []); // Initialize editedCartItems with the current cart items\n      const cartData = await cartResponse.json();\n      setCart(cartData);\n      setCartDescription(((_cartData$cart = cartData.cart) === null || _cartData$cart === void 0 ? void 0 : _cartData$cart.description) || '');\n      setInitialCartDescription(((_cartData$cart2 = cartData.cart) === null || _cartData$cart2 === void 0 ? void 0 : _cartData$cart2.description) || '');\n      setTotalPrice(((_cartData$cart3 = cartData.cart) === null || _cartData$cart3 === void 0 ? void 0 : _cartData$cart3.total_price) || 0);\n      updateTotalQuantityAndPrice(itemsData.cart); // Update total quantity and price based on items\n      setIsQuantitySaved(true); // Reset quantity saved state\n    } catch (error) {\n      console.error('Error fetching cart items:', error);\n      setErrorMessage('Failed to load cart items.');\n    } finally {\n      setLoadingCartItems(false); // Ensure loading state is reset even on error\n    }\n  }, []); // Empty dependency array since this function doesn't use external variables\n\n  useEffect(() => {\n    fetchCartItems();\n  }, [fetchCartItems, refreshCart]); // Add fetchCartItems to dependency array\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decodedToken = jwtDecode(token);\n        const currentTime = Date.now() / 1000;\n        if (decodedToken.exp < currentTime) {\n          localStorage.removeItem('token');\n          setUserRole(null);\n        } else {\n          setUserRole(decodedToken.userRole);\n          fetchCartItems();\n        }\n      } catch (error) {\n        console.error('Error decoding token:', error);\n        localStorage.removeItem('token');\n        setUserRole(null);\n      }\n    }\n  }, [fetchCartItems]);\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsTransparent(window.scrollY > 50);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setCartDropdownVisible(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  const handleSignOut = () => {\n    localStorage.removeItem('token');\n    setUserRole(null);\n    navigate('/signin');\n  };\n  const toggleCartDropdown = () => {\n    setCartDropdownVisible(prev => !prev);\n  };\n  const handleCartDescriptionChange = e => {\n    const value = e.target.value;\n    if (value.length <= 100) {\n      setCartDescription(value);\n      setIsQuantitySaved(false); // Mark the state as unsaved since the description changed\n      setErrorMessage(null); // Clear error if it's within the limit\n    } else {\n      setErrorMessage('Description cannot exceed 100 characters.');\n    }\n  };\n  const deleteCartItem = async itemId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/cartitems/${itemId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.errors ? JSON.stringify(errorData.errors) : 'Network response was not ok');\n      }\n      console.log('Item deleted successfully');\n      await fetchCartItems();\n    } catch (error) {\n      console.error('Error deleting cart item:', error);\n      setErrorMessage('Error removing item. Please try again.');\n    }\n  };\n  const updateCartItemQuantityLocally = (itemId, newQuantity) => {\n    if (newQuantity < 1) return;\n    const updatedItems = editedCartItems.map(item => item.item_id === itemId ? {\n      ...item,\n      quantity: newQuantity\n    } : item);\n    setEditedCartItems(updatedItems);\n    if (updatedItems.find(item => item.item_id === itemId).quantity === cartItems.find(item => item.item_id === itemId).quantity) {\n      setIsQuantitySaved(true); // Reset quantity saved state if the quantity is returned to its default value\n    } else {\n      setIsQuantitySaved(false); // Indicate that new changes are unsaved\n    }\n    updateTotalQuantityAndPrice(updatedItems); // Update the total quantity and price based on new items\n  };\n  const updateTotalQuantityAndPrice = items => {\n    const total = items.reduce((acc, item) => acc + item.quantity, 0);\n    const price = items.reduce((acc, item) => {\n      const itemPrice = item.price || 0; // Ensure item.price is a valid number or default to 0\n      return acc + item.quantity * parseFloat(itemPrice); // Ensure the price is parsed as a float\n    }, 0);\n    setTotalQuantity(total);\n    setTotalPrice(price);\n  };\n  const checkIfValuesChanged = useCallback(() => {\n    const isDescriptionChanged = cartDescription !== initialCartDescription;\n    const isQuantityChanged = editedCartItems.some((item, index) => {\n      var _initialCartItems$ind;\n      return item.quantity !== ((_initialCartItems$ind = initialCartItems[index]) === null || _initialCartItems$ind === void 0 ? void 0 : _initialCartItems$ind.quantity);\n    });\n    return isDescriptionChanged || isQuantityChanged;\n  }, [cartDescription, initialCartDescription, editedCartItems, initialCartItems]);\n  const saveCartChanges = async () => {\n    setLoadingCartItems(true);\n    setIsSaving(true);\n    try {\n      const token = localStorage.getItem('token');\n\n      // Update item quantities in the backend\n      const quantityPromises = editedCartItems.map(item => fetch(`http://localhost:8080/cartitems/${item.item_id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Authorization': `Bearer ${token}`\n        },\n        body: new URLSearchParams({\n          item_id: item.item_id,\n          quantity: item.quantity\n        }).toString()\n      }));\n      // Update the cart description in the backend\n      const descriptionPromise = fetch(`http://localhost:8080/carts/${cart.cart.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Authorization': `Bearer ${token}`\n        },\n        body: new URLSearchParams({\n          description: cartDescription\n        }).toString()\n      });\n\n      // Wait for all promises to resolve\n      const responses = await Promise.all([...quantityPromises, descriptionPromise]);\n\n      // Check for any errors in the responses\n      for (const response of responses) {\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.errors ? JSON.stringify(errorData.errors) : 'Error while saving cart changes');\n        }\n      }\n\n      // Fetch updated cart after saving\n      await fetchCartItems();\n      setIsQuantitySaved(true); // Mark as saved\n      setSuccessMessage('Cart updated successfully!'); // Show success message\n      setErrorMessage(null); // Clear any error messages\n\n      // Set a timer to clear the success message after 30 seconds\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 30000);\n    } catch (error) {\n      console.error('Error saving cart changes:', error);\n      setErrorMessage(error.message || 'An unknown error occurred');\n      setSuccessMessage(null); // Clear success message if an error occurs\n    } finally {\n      setLoadingCartItems(false); // Ensure loading state is reset even on error\n      setIsSaving(false);\n    }\n  };\n  const handleCheckout = async () => {\n    if (!isQuantitySaved) {\n      setErrorMessage('Please save your changes before checking out.');\n      return;\n    }\n    setLoadingCheckout(true);\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:8080/checkout', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.errors ? JSON.stringify(errorData.errors) : 'Network response was not ok');\n      }\n      console.log('Checkout successful');\n      setCartItems([]);\n      setShouldUpdateOrders(true); // Notify context that orders need to be updated\n      window.location.reload(); // Refresh the page\n    } catch (error) {\n      console.error('Error during checkout:', error);\n      setErrorMessage(error.message);\n      setSuccessMessage(null); // Clear success message if an error occurs\n    } finally {\n      setLoadingCheckout(false); // Ensure loading state is reset even on error\n    }\n  };\n\n  // Reset cart to initial values\n  const handleDiscardChanges = () => {\n    setCartItems([...initialCartItems]); // Reset cart items to the initial ones\n    setEditedCartItems([...initialCartItems]); // Reset edited items\n    setCartDescription(initialCartDescription); // Reset description\n    setIsQuantitySaved(true); // Mark as saved\n    setErrorMessage(null); // Clear any error messages\n    setSuccessMessage('Changes discarded.');\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: `navbar ${isTransparent ? 'transparent' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"center-links\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"end-links\",\n      children: [userRole === \"1\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/add-vendor\",\n            children: \"Add Vendor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/users\",\n            children: \"Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), userRole ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/profile\",\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/orders\",\n            children: \"Orders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleCartDropdown,\n            disabled: loadingCartItems,\n            children: loadingCartItems ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 53\n            }, this) : 'Cart'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 29\n          }, this), cartDropdownVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-dropdown\",\n            ref: dropdownRef,\n            children: [loadingCartItems ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading cart items...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 41\n            }, this) : cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No items in cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"cart-list\",\n                children: editedCartItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"cart-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"cart-item-img\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: item.img || defaultImage,\n                      alt: item.name,\n                      onError: e => e.target.src = defaultImage\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 335,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"cart-item-name\",\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"cart-item-quantity\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => updateCartItemQuantityLocally(item.item_id, item.quantity - 1),\n                      children: \"-\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.quantity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => updateCartItemQuantityLocally(item.item_id, item.quantity + 1),\n                      children: \"+\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 342,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => deleteCartItem(item.item_id),\n                    className: \"removebutton\",\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 57\n                  }, this)]\n                }, item.item_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cart-summary\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Total Quantity: \", totalQuantity]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Total Price: $\", totalPrice.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true), totalQuantity > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-description\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: cartDescription,\n                onChange: handleCartDescriptionChange,\n                placeholder: \"Write a description for your cart...\",\n                rows: \"3\",\n                maxLength: \"100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [cartDescription.length, \"/100\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 45\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 41\n            }, this), checkIfValuesChanged() && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: saveCartChanges,\n                disabled: isSaving,\n                children: isSaving ? 'Saving...' : 'Save'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleDiscardChanges,\n                children: \"Discard Changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true), isQuantitySaved && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCheckout,\n              disabled: loadingCheckout,\n              children: loadingCheckout ? 'Processing Checkout...' : 'Checkout'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 41\n            }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'green'\n              },\n              children: successMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 41\n            }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'red'\n              },\n              children: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSignOut,\n            children: \"Sign Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signin\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 9\n  }, this);\n};\n_s(Navbar, \"5SjQhqkDzCu5GP6o2naRgVNNXH0=\", false, function () {\n  return [useNavigate, useOrderUpdate];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","Link","useNavigate","jwtDecode","logo","defaultImage","useOrderUpdate","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","initialCartItems","onCartItemsChange","refreshCart","_s","userRole","setUserRole","isTransparent","setIsTransparent","cartDropdownVisible","setCartDropdownVisible","cartItems","setCartItems","editedCartItems","setEditedCartItems","cart","setCart","cartDescription","setCartDescription","initialCartDescription","setInitialCartDescription","errorMessage","setErrorMessage","successMessage","setSuccessMessage","totalPrice","setTotalPrice","totalQuantity","setTotalQuantity","loadingCartItems","setLoadingCartItems","loadingCheckout","setLoadingCheckout","isQuantitySaved","setIsQuantitySaved","navigate","dropdownRef","setShouldUpdateOrders","isSaving","setIsSaving","fetchCartItems","token","localStorage","getItem","_cartData$cart","_cartData$cart2","_cartData$cart3","itemsResponse","cartResponse","Promise","all","fetch","headers","Authorization","ok","Error","itemsData","json","console","log","cartData","description","total_price","updateTotalQuantityAndPrice","error","decodedToken","currentTime","Date","now","exp","removeItem","handleScroll","window","scrollY","addEventListener","removeEventListener","handleClickOutside","event","current","contains","target","document","handleSignOut","toggleCartDropdown","prev","handleCartDescriptionChange","e","value","length","deleteCartItem","itemId","response","method","errorData","errors","JSON","stringify","updateCartItemQuantityLocally","newQuantity","updatedItems","map","item","item_id","quantity","find","items","total","reduce","acc","price","itemPrice","parseFloat","checkIfValuesChanged","isDescriptionChanged","isQuantityChanged","some","index","_initialCartItems$ind","saveCartChanges","quantityPromises","body","URLSearchParams","toString","descriptionPromise","id","responses","setTimeout","message","handleCheckout","location","reload","handleDiscardChanges","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","disabled","ref","img","name","onError","toFixed","onChange","placeholder","rows","maxLength","style","color","_c","$RefreshReg$"],"sources":["C:/Users/oG_Ju/OneDrive/Desktop/SadeemVendorapp/frontend/src/components/navbar.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode'; // Fixed import\r\nimport '../css/Navbar.css';\r\nimport logo from '../css/vendor.jpg';\r\nimport defaultImage from '../css/vendor.jpg';\r\nimport { useOrderUpdate } from './OrderUpdateContext'; // Import the context\r\n\r\nconst Navbar = ({ initialCartItems = [], onCartItemsChange, refreshCart }) => { // Default to empty array\r\n    const [userRole, setUserRole] = useState(null);\r\n    const [isTransparent, setIsTransparent] = useState(false);\r\n    const [cartDropdownVisible, setCartDropdownVisible] = useState(false);\r\n    const [cartItems, setCartItems] = useState(initialCartItems); // Initial cart items or empty array\r\n    const [editedCartItems, setEditedCartItems] = useState([]); // Track the edited cart items here\r\n    const [cart, setCart] = useState({});\r\n    const [cartDescription, setCartDescription] = useState('');\r\n    const [initialCartDescription, setInitialCartDescription] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n    const [successMessage, setSuccessMessage] = useState(null);\r\n    const [totalPrice, setTotalPrice] = useState(0);\r\n    const [totalQuantity, setTotalQuantity] = useState(0);\r\n    const [loadingCartItems, setLoadingCartItems] = useState(false);\r\n    const [loadingCheckout, setLoadingCheckout] = useState(false);\r\n    const [isQuantitySaved, setIsQuantitySaved] = useState(true); // State to track if quantity and description are saved\r\n    const navigate = useNavigate();\r\n    const dropdownRef = useRef(null);\r\n    const { setShouldUpdateOrders } = useOrderUpdate(); // Use the context\r\n    const [isSaving, setIsSaving] = useState(false);\r\n\r\n    // Fetch cart items and update state\r\n    const fetchCartItems = useCallback(async () => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) return;\r\n\r\n        try {\r\n            setLoadingCartItems(true);\r\n            const [itemsResponse, cartResponse] = await Promise.all([\r\n                fetch('http://localhost:8080/cartitems', {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                }),\r\n                fetch('http://localhost:8080/carts', {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                })\r\n            ]);\r\n\r\n            if (!itemsResponse.ok || !cartResponse.ok) {\r\n                throw new Error('You must have a table to checkout!');\r\n            }\r\n\r\n            const itemsData = await itemsResponse.json();\r\n            console.log(itemsData.cart)\r\n\r\n            setCartItems(itemsData.cart || []);\r\n            setEditedCartItems(itemsData.cart || []); // Initialize editedCartItems with the current cart items\r\n            const cartData = await cartResponse.json();\r\n            setCart(cartData);\r\n            setCartDescription(cartData.cart?.description || '');\r\n            setInitialCartDescription(cartData.cart?.description || '');\r\n            setTotalPrice(cartData.cart?.total_price || 0);\r\n            updateTotalQuantityAndPrice(itemsData.cart); // Update total quantity and price based on items\r\n            setIsQuantitySaved(true); // Reset quantity saved state\r\n        } catch (error) {\r\n            console.error('Error fetching cart items:', error);\r\n            setErrorMessage('Failed to load cart items.');\r\n        } finally {\r\n            setLoadingCartItems(false); // Ensure loading state is reset even on error\r\n        }\r\n    }, []); // Empty dependency array since this function doesn't use external variables\r\n\r\n    useEffect(() => {\r\n        fetchCartItems();\r\n    }, [fetchCartItems, refreshCart]); // Add fetchCartItems to dependency array\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            try {\r\n                const decodedToken = jwtDecode(token);\r\n                const currentTime = Date.now() / 1000;\r\n                if (decodedToken.exp < currentTime) {\r\n                    localStorage.removeItem('token');\r\n                    setUserRole(null);\r\n                } else {\r\n                    setUserRole(decodedToken.userRole);\r\n                    fetchCartItems();\r\n                }\r\n            } catch (error) {\r\n                console.error('Error decoding token:', error);\r\n                localStorage.removeItem('token');\r\n                setUserRole(null);\r\n            }\r\n        }\r\n    }, [fetchCartItems]);\r\n\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            setIsTransparent(window.scrollY > 50);\r\n        };\r\n\r\n        window.addEventListener('scroll', handleScroll);\r\n        return () => window.removeEventListener('scroll', handleScroll);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n                setCartDropdownVisible(false);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    }, []);\r\n\r\n    const handleSignOut = () => {\r\n        localStorage.removeItem('token');\r\n        setUserRole(null);\r\n        navigate('/signin');\r\n    };\r\n\r\n    const toggleCartDropdown = () => {\r\n        setCartDropdownVisible(prev => !prev);\r\n    };\r\n\r\n    const handleCartDescriptionChange = (e) => {\r\n        const value = e.target.value;\r\n        if (value.length <= 100) {\r\n            setCartDescription(value);\r\n            setIsQuantitySaved(false); // Mark the state as unsaved since the description changed\r\n            setErrorMessage(null); // Clear error if it's within the limit\r\n        } else {\r\n            setErrorMessage('Description cannot exceed 100 characters.');\r\n        }\r\n    };\r\n\r\n    const deleteCartItem = async (itemId) => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await fetch(`http://localhost:8080/cartitems/${itemId}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.errors ? JSON.stringify(errorData.errors) : 'Network response was not ok');\r\n            }\r\n\r\n            console.log('Item deleted successfully');\r\n            await fetchCartItems();\r\n        } catch (error) {\r\n            console.error('Error deleting cart item:', error);\r\n            setErrorMessage('Error removing item. Please try again.');\r\n        }\r\n    };\r\n\r\n    const updateCartItemQuantityLocally = (itemId, newQuantity) => {\r\n        if (newQuantity < 1) return;\r\n\r\n        const updatedItems = editedCartItems.map(item =>\r\n            item.item_id === itemId ? { ...item, quantity: newQuantity } : item\r\n        );\r\n        setEditedCartItems(updatedItems);\r\n        if (updatedItems.find(item => item.item_id === itemId).quantity === cartItems.find(item => item.item_id === itemId).quantity) {\r\n            setIsQuantitySaved(true); // Reset quantity saved state if the quantity is returned to its default value\r\n        } else {\r\n            setIsQuantitySaved(false); // Indicate that new changes are unsaved\r\n        }\r\n        updateTotalQuantityAndPrice(updatedItems); // Update the total quantity and price based on new items\r\n    };\r\n\r\n    const updateTotalQuantityAndPrice = (items) => {\r\n        const total = items.reduce((acc, item) => acc + item.quantity, 0);\r\n        const price = items.reduce((acc, item) => {\r\n            const itemPrice = item.price || 0; // Ensure item.price is a valid number or default to 0\r\n            return acc + item.quantity * parseFloat(itemPrice); // Ensure the price is parsed as a float\r\n        }, 0);\r\n        \r\n        setTotalQuantity(total);\r\n        setTotalPrice(price);\r\n    };\r\n    const checkIfValuesChanged = useCallback(() => {\r\n        const isDescriptionChanged = cartDescription !== initialCartDescription;\r\n        const isQuantityChanged = editedCartItems.some((item, index) => \r\n            item.quantity !== initialCartItems[index]?.quantity\r\n        );\r\n\r\n        return isDescriptionChanged || isQuantityChanged;\r\n    }, [cartDescription, initialCartDescription, editedCartItems, initialCartItems]);\r\n\r\n    const saveCartChanges = async () => {\r\n        setLoadingCartItems(true);\r\n        setIsSaving(true);\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n\r\n            // Update item quantities in the backend\r\n            const quantityPromises = editedCartItems.map(item =>\r\n                fetch(`http://localhost:8080/cartitems/${item.item_id}`, {\r\n                    method: 'PUT',\r\n                    headers: {\r\n                        'Content-Type': 'application/x-www-form-urlencoded',\r\n                        'Authorization': `Bearer ${token}`\r\n                    },\r\n                    body: new URLSearchParams({\r\n                        item_id: item.item_id,\r\n                        quantity: item.quantity\r\n                    }).toString()\r\n                })\r\n            );\r\n            // Update the cart description in the backend\r\n            const descriptionPromise = fetch(`http://localhost:8080/carts/${cart.cart.id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                body: new URLSearchParams({\r\n                    description: cartDescription\r\n                }).toString()\r\n            });\r\n\r\n            // Wait for all promises to resolve\r\n            const responses = await Promise.all([...quantityPromises, descriptionPromise]);\r\n\r\n            // Check for any errors in the responses\r\n            for (const response of responses) {\r\n                if (!response.ok) {\r\n                    const errorData = await response.json();\r\n                    throw new Error(errorData.errors ? JSON.stringify(errorData.errors) : 'Error while saving cart changes');\r\n                }\r\n            }\r\n\r\n            // Fetch updated cart after saving\r\n            await fetchCartItems();\r\n\r\n            setIsQuantitySaved(true); // Mark as saved\r\n            setSuccessMessage('Cart updated successfully!'); // Show success message\r\n            setErrorMessage(null); // Clear any error messages\r\n\r\n            // Set a timer to clear the success message after 30 seconds\r\n            setTimeout(() => {\r\n                setSuccessMessage(null);\r\n            }, 30000);\r\n        } catch (error) {\r\n            console.error('Error saving cart changes:', error);\r\n            setErrorMessage(error.message || 'An unknown error occurred');\r\n            setSuccessMessage(null); // Clear success message if an error occurs\r\n        } finally {\r\n            setLoadingCartItems(false); // Ensure loading state is reset even on error\r\n            setIsSaving(false);\r\n        }\r\n    };\r\n\r\n    const handleCheckout = async () => {\r\n        if (!isQuantitySaved) {\r\n            setErrorMessage('Please save your changes before checking out.');\r\n            return;\r\n        }\r\n\r\n        setLoadingCheckout(true);\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await fetch('http://localhost:8080/checkout', {\r\n                method: 'POST',\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.errors ? JSON.stringify(errorData.errors) : 'Network response was not ok');\r\n            }\r\n\r\n            console.log('Checkout successful');\r\n            setCartItems([]);\r\n            setShouldUpdateOrders(true); // Notify context that orders need to be updated\r\n            window.location.reload(); // Refresh the page\r\n        } catch (error) {\r\n            console.error('Error during checkout:', error);\r\n            setErrorMessage(error.message);\r\n            setSuccessMessage(null); // Clear success message if an error occurs\r\n        } finally {\r\n            setLoadingCheckout(false); // Ensure loading state is reset even on error\r\n        }\r\n    };\r\n\r\n    // Reset cart to initial values\r\n    const handleDiscardChanges = () => {\r\n        setCartItems([...initialCartItems]); // Reset cart items to the initial ones\r\n        setEditedCartItems([...initialCartItems]); // Reset edited items\r\n        setCartDescription(initialCartDescription); // Reset description\r\n        setIsQuantitySaved(true); // Mark as saved\r\n        setErrorMessage(null); // Clear any error messages\r\n        setSuccessMessage('Changes discarded.');\r\n    };\r\n\r\n    return (\r\n        <nav className={`navbar ${isTransparent ? 'transparent' : ''}`}>\r\n            <div className=\"logo\">\r\n                <img src={logo} alt=\"Logo\" />\r\n            </div>\r\n            <ul className=\"center-links\">\r\n                <li><Link to=\"/\">Home</Link></li>\r\n            </ul>\r\n            <ul className=\"end-links\">\r\n                {userRole === \"1\" && (\r\n                    <>\r\n                        <li><Link to=\"/add-vendor\">Add Vendor</Link></li>\r\n                        <li><Link to=\"/users\">Users</Link></li>\r\n                    </>\r\n                )}\r\n                {userRole ? (\r\n                    <>\r\n                        <li><Link to=\"/profile\">Profile</Link></li>\r\n                        <li><Link to=\"/orders\">Orders</Link></li>\r\n                        <li>\r\n                            <button onClick={toggleCartDropdown} disabled={loadingCartItems}>\r\n                                {loadingCartItems ? <div className=\"spinner\"></div> : 'Cart'}\r\n                            </button>\r\n                            {cartDropdownVisible && (\r\n                                <div className=\"cart-dropdown\" ref={dropdownRef}>\r\n                                    {loadingCartItems ? (\r\n                                        <p>Loading cart items...</p>\r\n                                    ) : cartItems.length === 0 ? (\r\n                                        <p>No items in cart</p>\r\n                                    ) : (\r\n                                        <>\r\n                                            <ul className=\"cart-list\">\r\n                                                {editedCartItems.map(item => (\r\n                                                    <li key={item.item_id} className=\"cart-item\">\r\n                                                        <div className=\"cart-item-img\">\r\n                                                            <img src={item.img || defaultImage} alt={item.name}\r\n                                                                onError={(e) => e.target.src = defaultImage} />\r\n                                                        </div>\r\n                                                        <div className=\"cart-item-name\">{item.name}</div>\r\n                                                        <div className=\"cart-item-quantity\">\r\n                                                            <button onClick={() => updateCartItemQuantityLocally(item.item_id, item.quantity - 1)}>-</button>\r\n                                                            <span>{item.quantity}</span>\r\n                                                            <button onClick={() => updateCartItemQuantityLocally(item.item_id, item.quantity + 1)}>+</button>\r\n                                                        </div>\r\n                                                        <button onClick={() => deleteCartItem(item.item_id)} className='removebutton'>Remove</button>\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                            <div className=\"cart-summary\">\r\n                                                <p>Total Quantity: {totalQuantity}</p>\r\n                                                <p>Total Price: ${totalPrice.toFixed(2)}</p>\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n\r\n                                    {totalQuantity > 0 && (\r\n                                        <div className=\"cart-description\">\r\n                                            <textarea\r\n                                                value={cartDescription}\r\n                                                onChange={handleCartDescriptionChange}\r\n                                                placeholder=\"Write a description for your cart...\"\r\n                                                rows=\"3\"\r\n                                                maxLength=\"100\"\r\n                                            />\r\n                                            <p>{cartDescription.length}/100</p> {/* Character count */}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {checkIfValuesChanged() && (\r\n                                        <>\r\n                                            <button onClick={saveCartChanges} disabled={isSaving}>\r\n                                                {isSaving ? 'Saving...' : 'Save'}\r\n                                            </button>\r\n                                            {/* Unsaved button */}\r\n                                            <button onClick={handleDiscardChanges}>\r\n                                                Discard Changes\r\n                                            </button>\r\n                                        </>\r\n                                    )}\r\n\r\n                                    {isQuantitySaved && (\r\n                                        <button onClick={handleCheckout} disabled={loadingCheckout}>\r\n                                            {loadingCheckout ? 'Processing Checkout...' : 'Checkout'}\r\n                                        </button>\r\n                                    )}\r\n                                    {successMessage && (\r\n                                        <p style={{ color: 'green' }}>{successMessage}</p>\r\n                                    )}\r\n                                    {errorMessage && (\r\n                                        <p style={{ color: 'red' }}>{errorMessage}</p>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                        </li>\r\n                        <li><button onClick={handleSignOut}>Sign Out</button></li>\r\n                    </>\r\n                ) : (\r\n                    <li><Link to=\"/signin\">Sign In</Link></li>\r\n                )}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}