{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oG_Ju\\\\OneDrive\\\\Desktop\\\\SadeemVendorapp\\\\frontend\\\\src\\\\components\\\\edituser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport '../css/editprofile.css';\nimport defaultImage from '../css/vendor.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditUser() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n  const [image, setImage] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [phone, setPhone] = useState('');\n  const [vendorId, setVendorId] = useState('');\n  const [role, setRole] = useState('');\n  const [currentRole, setCurrentRole] = useState(''); // Store current role\n  const [errorMessages, setErrorMessages] = useState({\n    name: '',\n    email: '',\n    password: '',\n    phone: '',\n    image: '',\n    general: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [success, setSuccess] = useState(null);\n  const [successColor, setSuccessColor] = useState('');\n  const imageRef = useRef(null);\n  const phonePrefix = '+2189';\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      setLoading(true);\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          throw new Error('No token found');\n        }\n        const [userResponse, roleResponse] = await Promise.all([fetch(`http://localhost:8080/users/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), fetch(`http://localhost:8080/userroles/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        })]);\n        if (!userResponse.ok || !roleResponse.ok) {\n          var _errorData$error, _errorData$error2, _errorData$error3, _errorData$error4;\n          const errorData = (await userResponse.json()) || {};\n          console.error('Backend errors:', errorData);\n          const newErrors = {\n            name: ((_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.name) || '',\n            email: ((_errorData$error2 = errorData.error) === null || _errorData$error2 === void 0 ? void 0 : _errorData$error2.email) || '',\n            password: ((_errorData$error3 = errorData.error) === null || _errorData$error3 === void 0 ? void 0 : _errorData$error3.password) || '',\n            phone: ((_errorData$error4 = errorData.error) === null || _errorData$error4 === void 0 ? void 0 : _errorData$error4.phone) || '',\n            image: '',\n            general: ''\n          };\n          if (userResponse.status === 409 && errorData.error === 'Email already exists, try something else') {\n            newErrors.email = 'Email already exists, try something else.';\n          }\n          setErrorMessages(newErrors);\n          throw new Error('Failed to fetch user details or role information');\n        }\n        const userData = await userResponse.json();\n        const roleData = await roleResponse.json();\n        if (userData.user && roleData.user_roles) {\n          const {\n            name,\n            email,\n            phone,\n            img\n          } = userData.user;\n          const {\n            roleID\n          } = roleData.user_roles;\n          setName(name || '');\n          setEmail(email || '');\n          setPhone(phone || '');\n          setPreview(img || defaultImage);\n          setRole(roleID);\n          setCurrentRole(roleID); // Set current role for comparison\n        } else {\n          console.error('No user or role data in response');\n          setErrorMessages(prev => ({\n            ...prev,\n            general: 'User or role data is missing in response'\n          }));\n        }\n      } catch (error) {\n        console.error('Error fetching user details:', error);\n        setErrorMessages(prev => ({\n          ...prev,\n          general: 'Failed to load user details'\n        }));\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserDetails();\n  }, [userId]);\n  const handleImageClick = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\n      if (!validTypes.includes(file.type)) {\n        setErrorMessages(prev => ({\n          ...prev,\n          image: 'Invalid image type. Please upload a JPEG, PNG, GIF, or WEBP image.'\n        }));\n        setImage(null);\n        setPreview(prev => prev || defaultImage);\n        setTimeout(() => {\n          setErrorMessages(prev => ({\n            ...prev,\n            image: ''\n          }));\n        }, 10000);\n        return;\n      }\n      if (file.size > 2000000) {\n        // 2MB\n        setErrorMessages(prev => ({\n          ...prev,\n          image: 'Image size must be less than 2MB.'\n        }));\n        setImage(null);\n        setPreview(prev => prev || defaultImage);\n        setTimeout(() => {\n          setErrorMessages(prev => ({\n            ...prev,\n            image: ''\n          }));\n        }, 3000);\n        return;\n      }\n      setErrorMessages(prev => ({\n        ...prev,\n        image: ''\n      }));\n      setImage(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSave = async event => {\n    event.preventDefault();\n    setErrorMessages({\n      name: '',\n      email: '',\n      password: '',\n      phone: '',\n      image: '',\n      general: ''\n    });\n    let hasErrors = false;\n    if (!name.trim()) {\n      setErrorMessages(prev => ({\n        ...prev,\n        name: 'Name is required.'\n      }));\n      hasErrors = true;\n    }\n    if (!email.trim()) {\n      setErrorMessages(prev => ({\n        ...prev,\n        email: 'Email is required.'\n      }));\n      hasErrors = true;\n    }\n    if (!phone.trim()) {\n      setErrorMessages(prev => ({\n        ...prev,\n        phone: 'Phone number is required.'\n      }));\n      hasErrors = true;\n    }\n    if (errorMessages.image) {\n      hasErrors = true;\n    }\n    if (hasErrors) {\n      setSuccess(null);\n      return;\n    }\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('phone', phonePrefix + phone);\n    if (password.trim()) {\n      formData.append('password', password);\n    }\n    if (image) {\n      formData.append('img', image);\n    }\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n\n      // First update user details\n      const userResponse = await fetch(`http://localhost:8080/users/${userId}`, {\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        body: formData\n      });\n      if (!userResponse.ok) {\n        const errorResponse = await userResponse.json();\n        setErrorMessages(prev => ({\n          ...prev,\n          general: errorResponse.error || 'Failed to update user details'\n        }));\n        throw new Error(`${errorResponse.error}`);\n      }\n\n      // If role has changed, update the role as well\n      if (role !== currentRole) {\n        const formDataRole = new URLSearchParams();\n        formDataRole.append('role', role);\n        formDataRole.append('vendorID', vendorId);\n        const roleResponse = await fetch(`http://localhost:8080/grantrole/${userId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            Authorization: `Bearer ${token}`\n          },\n          body: formDataRole.toString()\n        });\n        if (!roleResponse.ok) {\n          const errorResponse = await roleResponse.json();\n          setErrorMessages(prev => ({\n            ...prev,\n            general: errorResponse.error || 'Failed to update user role'\n          }));\n          throw new Error(`${errorResponse.error}`);\n        }\n      }\n      setSuccess('Profile updated successfully');\n      setSuccessColor('green');\n      setTimeout(() => setSuccess(null), 2000);\n      setTimeout(() => navigate('/users'), 1000);\n    } catch (error) {\n      console.error('Error updating profile or role:', error);\n      setErrorMessages(prev => ({\n        ...prev,\n        general: error.message\n      }));\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDelete = async () => {\n    if (window.confirm('Are you sure you want to delete this user?')) {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`http://localhost:8080/users/${userId}`, {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          console.error('Backend errors:', errorData);\n          setErrorMessages(prev => ({\n            ...prev,\n            general: 'Failed to delete user'\n          }));\n          return;\n        }\n        setSuccess('User deleted successfully');\n        setSuccessColor('red');\n        setTimeout(() => {\n          setSuccess(null);\n          navigate('/users');\n        }, 2000);\n      } catch (error) {\n        console.error('Error deleting user:', error);\n        setErrorMessages(prev => ({\n          ...prev,\n          general: 'Failed to delete user'\n        }));\n      }\n    }\n  };\n  const handleImageError = e => {\n    e.target.src = defaultImage;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-image-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: imageRef,\n        onChange: handleImageClick,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: preview,\n        alt: name,\n        className: `profile-image ${!preview ? 'no-image' : ''}`,\n        onError: handleImageError,\n        onClick: () => {\n          var _imageRef$current;\n          return (_imageRef$current = imageRef.current) === null || _imageRef$current === void 0 ? void 0 : _imageRef$current.click();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), errorMessages.image && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessages.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSave,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group ${errorMessages.name ? 'error' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errorMessages.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group ${errorMessages.email ? 'error' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), errorMessages.email && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errorMessages.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group ${errorMessages.password ? 'error' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            autoComplete: \"new-password\" // Prevents browsers from autofilling this field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), errorMessages.password && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errorMessages.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group ${errorMessages.phone ? 'error' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"phone-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"phone-prefix\",\n              children: phonePrefix\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Phone Number  21234567..\",\n              value: phone,\n              onChange: event => setPhone(event.target.value),\n              maxLength: 8\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), errorMessages.phone && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errorMessages.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group ${errorMessages.role ? 'error' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"role\",\n            children: \"Role:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"role\",\n            value: role,\n            onChange: e => setRole(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), errorMessages.role && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errorMessages.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), role === '2' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group ${errorMessages.vendorId ? 'error' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"vendorId\",\n            children: \"Vendor ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"vendorId\",\n            value: vendorId,\n            onChange: e => setVendorId(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this), errorMessages.vendorId && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errorMessages.vendorId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"save-button\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        style: {\n          color: successColor\n        },\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        className: \"delete-button\",\n        children: \"Delete User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n}\n_s(EditUser, \"Wt9x2cj1byA8Gjm3tj3wQvQUYzo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditUser;\nexport default EditUser;\nvar _c;\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useParams","defaultImage","jsxDEV","_jsxDEV","EditUser","_s","userId","navigate","image","setImage","preview","setPreview","name","setName","email","setEmail","password","setPassword","phone","setPhone","vendorId","setVendorId","role","setRole","currentRole","setCurrentRole","errorMessages","setErrorMessages","general","loading","setLoading","success","setSuccess","successColor","setSuccessColor","imageRef","phonePrefix","fetchUserDetails","token","localStorage","getItem","Error","userResponse","roleResponse","Promise","all","fetch","headers","Authorization","ok","_errorData$error","_errorData$error2","_errorData$error3","_errorData$error4","errorData","json","console","error","newErrors","status","userData","roleData","user","user_roles","img","roleID","prev","handleImageClick","event","file","target","files","validTypes","includes","type","setTimeout","size","reader","FileReader","onloadend","result","readAsDataURL","handleSave","preventDefault","hasErrors","trim","formData","FormData","append","method","body","errorResponse","formDataRole","URLSearchParams","toString","message","handleDelete","window","confirm","response","handleImageError","e","src","className","children","ref","onChange","style","display","fileName","_jsxFileName","lineNumber","columnNumber","alt","onError","onClick","_imageRef$current","current","click","onSubmit","htmlFor","id","value","autoComplete","placeholder","maxLength","color","_c","$RefreshReg$"],"sources":["C:/Users/oG_Ju/OneDrive/Desktop/SadeemVendorapp/frontend/src/components/edituser.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport '../css/editprofile.css';\r\nimport defaultImage from '../css/vendor.jpg';\r\n\r\nfunction EditUser() {\r\n  const { userId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [image, setImage] = useState(null);\r\n  const [preview, setPreview] = useState(null);\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [vendorId, setVendorId] = useState('');\r\n  const [role, setRole] = useState('');\r\n  const [currentRole, setCurrentRole] = useState(''); // Store current role\r\n  const [errorMessages, setErrorMessages] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    phone: '',\r\n    image: '',\r\n    general: ''\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [success, setSuccess] = useState(null);\r\n  const [successColor, setSuccessColor] = useState('');\r\n  const imageRef = useRef(null);\r\n  const phonePrefix = '+2189';\r\n  useEffect(() => {\r\n    const fetchUserDetails = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          throw new Error('No token found');\r\n        }\r\n\r\n        const [userResponse, roleResponse] = await Promise.all([\r\n          fetch(`http://localhost:8080/users/${userId}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }),\r\n          fetch(`http://localhost:8080/userroles/${userId}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          })\r\n        ]);\r\n\r\n        if (!userResponse.ok || !roleResponse.ok) {\r\n          const errorData = await userResponse.json() || {};\r\n          console.error('Backend errors:', errorData);\r\n\r\n          const newErrors = {\r\n            name: errorData.error?.name || '',\r\n            email: errorData.error?.email || '',\r\n            password: errorData.error?.password || '',\r\n            phone: errorData.error?.phone || '',\r\n            image: '',\r\n            general: '',\r\n          };\r\n\r\n          if (userResponse.status === 409 && errorData.error === 'Email already exists, try something else') {\r\n            newErrors.email = 'Email already exists, try something else.';\r\n          }\r\n\r\n          setErrorMessages(newErrors);\r\n          throw new Error('Failed to fetch user details or role information');\r\n        }\r\n\r\n        const userData = await userResponse.json();\r\n        const roleData = await roleResponse.json();\r\n\r\n        if (userData.user && roleData.user_roles) {\r\n          const { name, email, phone, img } = userData.user;\r\n          const { roleID } = roleData.user_roles;\r\n\r\n          setName(name || '');\r\n          setEmail(email || '');\r\n          setPhone(phone || '');\r\n          setPreview(img || defaultImage);\r\n          setRole(roleID);\r\n          setCurrentRole(roleID); // Set current role for comparison\r\n        } else {\r\n          console.error('No user or role data in response');\r\n          setErrorMessages(prev => ({ ...prev, general: 'User or role data is missing in response' }));\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user details:', error);\r\n        setErrorMessages(prev => ({ ...prev, general: 'Failed to load user details' }));\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserDetails();\r\n  }, [userId]);\r\n\r\n  const handleImageClick = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\r\n      if (!validTypes.includes(file.type)) {\r\n        setErrorMessages(prev => ({\r\n          ...prev,\r\n          image: 'Invalid image type. Please upload a JPEG, PNG, GIF, or WEBP image.'\r\n        }));\r\n        \r\n        setImage(null);\r\n        setPreview(prev => prev || defaultImage);\r\n\r\n        setTimeout(() => {\r\n          setErrorMessages(prev => ({ ...prev, image: '' }));\r\n        }, 10000);\r\n\r\n        return;\r\n      }\r\n\r\n      if (file.size > 2000000) { // 2MB\r\n        setErrorMessages(prev => ({\r\n          ...prev,\r\n          image: 'Image size must be less than 2MB.'\r\n        }));\r\n\r\n        setImage(null);\r\n        setPreview(prev => prev || defaultImage);\r\n\r\n        setTimeout(() => {\r\n          setErrorMessages(prev => ({ ...prev, image: '' }));\r\n        }, 3000);\r\n\r\n        return;\r\n      }\r\n\r\n      setErrorMessages(prev => ({ ...prev, image: '' }));\r\n      setImage(file);\r\n\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setPreview(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n  const handleSave = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    setErrorMessages({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        phone: '',\r\n        image: '',\r\n        general: '',\r\n    });\r\n    \r\n    let hasErrors = false;\r\n    \r\n    if (!name.trim()) {\r\n        setErrorMessages(prev => ({ ...prev, name: 'Name is required.' }));\r\n        hasErrors = true;\r\n    }\r\n    \r\n    if (!email.trim()) {\r\n        setErrorMessages(prev => ({ ...prev, email: 'Email is required.' }));\r\n        hasErrors = true;\r\n    }\r\n    \r\n    if (!phone.trim()) {\r\n        setErrorMessages(prev => ({ ...prev, phone: 'Phone number is required.' }));\r\n        hasErrors = true;\r\n    }\r\n    \r\n    if (errorMessages.image) {\r\n        hasErrors = true;\r\n    }\r\n    \r\n    if (hasErrors) {\r\n        setSuccess(null);\r\n        return;\r\n    }\r\n    \r\n    const formData = new FormData();\r\n    formData.append('name', name);\r\n    formData.append('email', email);\r\n    formData.append('phone', phonePrefix+phone);\r\n    \r\n    if (password.trim()) {\r\n        formData.append('password', password);\r\n    }\r\n    \r\n    if (image) {\r\n        formData.append('img', image);\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n        const token = localStorage.getItem('token');\r\n\r\n        // First update user details\r\n        const userResponse = await fetch(`http://localhost:8080/users/${userId}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n            body: formData,\r\n        });\r\n\r\n        if (!userResponse.ok) {\r\n            const errorResponse = await userResponse.json();\r\n            setErrorMessages(prev => ({ ...prev, general: errorResponse.error || 'Failed to update user details' }));\r\n            throw new Error(`${errorResponse.error}`);\r\n        }\r\n\r\n        // If role has changed, update the role as well\r\n        if (role !== currentRole) {\r\n            const formDataRole = new URLSearchParams();\r\n            formDataRole.append('role', role);\r\n            formDataRole.append('vendorID', vendorId);\r\n    \r\n            const roleResponse = await fetch(`http://localhost:8080/grantrole/${userId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: formDataRole.toString(),\r\n            });\r\n    \r\n            if (!roleResponse.ok) {\r\n                const errorResponse = await roleResponse.json();\r\n                setErrorMessages(prev => ({ ...prev, general: errorResponse.error || 'Failed to update user role' }));\r\n                throw new Error(`${errorResponse.error}`);\r\n            }\r\n        }\r\n\r\n        setSuccess('Profile updated successfully');\r\n        setSuccessColor('green');\r\n        setTimeout(() => setSuccess(null), 2000);\r\n        setTimeout(() => navigate('/users'), 1000);\r\n    } catch (error) {\r\n        console.error('Error updating profile or role:', error);\r\n        setErrorMessages(prev => ({ ...prev, general: error.message }));\r\n    } finally {\r\n        setLoading(false);\r\n    }\r\n};\r\n  const handleDelete = async () => {\r\n    if (window.confirm('Are you sure you want to delete this user?')) {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await fetch(`http://localhost:8080/users/${userId}`, {\r\n          method: 'DELETE',\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const errorData = await response.json();\r\n          console.error('Backend errors:', errorData);\r\n          setErrorMessages(prev => ({ ...prev, general: 'Failed to delete user' }));\r\n          return;\r\n        }\r\n\r\n        setSuccess('User deleted successfully');\r\n        setSuccessColor('red');\r\n        setTimeout(() => {\r\n          setSuccess(null);\r\n          navigate('/users');\r\n        }, 2000);\r\n      } catch (error) {\r\n        console.error('Error deleting user:', error);\r\n        setErrorMessages(prev => ({ ...prev, general: 'Failed to delete user' }));\r\n      }\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  const handleImageError = (e) => {\r\n    e.target.src = defaultImage;\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <div className=\"profile-image-container\">\r\n        <input\r\n          type=\"file\"\r\n          ref={imageRef}\r\n          onChange={handleImageClick}\r\n          style={{ display: 'none' }}\r\n        />\r\n        <img\r\n          src={preview}\r\n          alt={name}\r\n          className={`profile-image ${!preview ? 'no-image' : ''}`}\r\n          onError={handleImageError}\r\n          onClick={() => imageRef.current?.click()}\r\n        />\r\n        {errorMessages.image && (\r\n          <div className=\"error-message\">{errorMessages.image}</div>\r\n        )}\r\n      </div>\r\n      <div className=\"profile-info-container\">\r\n        <form onSubmit={handleSave}>\r\n          <div className={`form-group ${errorMessages.name ? 'error' : ''}`}>\r\n            <label htmlFor=\"name\">Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n            {errorMessages.name && (\r\n              <div className=\"error-message\">{errorMessages.name}</div>\r\n            )}\r\n          </div>\r\n          <div className={`form-group ${errorMessages.email ? 'error' : ''}`}>\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            {errorMessages.email && (\r\n              <div className=\"error-message\">{errorMessages.email}</div>\r\n            )}\r\n          </div>\r\n          <div className={`form-group ${errorMessages.password ? 'error' : ''}`}>\r\n            <label htmlFor=\"password\">Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              autoComplete=\"new-password\" // Prevents browsers from autofilling this field\r\n\r\n            />\r\n            {errorMessages.password && (\r\n              <div className=\"error-message\">{errorMessages.password}</div>\r\n            )}\r\n          </div>\r\n          <div className={`form-group ${errorMessages.phone ? 'error' : ''}`}>\r\n            <label htmlFor=\"phone\">Phone:</label>\r\n            <div className=\"phone-input-container\">\r\n              <span className=\"phone-prefix\">{phonePrefix}</span>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Phone Number  21234567..\"\r\n                value={phone}\r\n                onChange={(event) => setPhone(event.target.value)}\r\n                maxLength={8}\r\n              />\r\n              </div>\r\n            {errorMessages.phone && (\r\n              <div className=\"error-message\">{errorMessages.phone}</div>\r\n            )}\r\n          </div>\r\n\r\n          <div className={`form-group ${errorMessages.role ? 'error' : ''}`}>\r\n            <label htmlFor=\"role\">Role:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"role\"\r\n              value={role}\r\n              onChange={(e) => setRole(e.target.value)}\r\n            />\r\n            {errorMessages.role && (\r\n              <div className=\"error-message\">{errorMessages.role}</div>\r\n            )}\r\n          </div>\r\n          {role === '2' && (\r\n            <div className={`form-group ${errorMessages.vendorId ? 'error' : ''}`}>\r\n              <label htmlFor=\"vendorId\">Vendor ID:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"vendorId\"\r\n                value={vendorId}\r\n                onChange={(e) => setVendorId(e.target.value)}\r\n              />\r\n              {errorMessages.vendorId && (\r\n                <div className=\"error-message\">{errorMessages.vendorId}</div>\r\n              )}\r\n            </div>\r\n          )}\r\n          <button type=\"submit\" className=\"save-button\">Save Changes</button>\r\n                {loading && <div className=\"spinner\"></div>}\r\n\r\n        </form>\r\n       \r\n        {success && (\r\n          <div className=\"success-message\" style={{ color: successColor }}>{success}</div>\r\n        )}\r\n        <button onClick={handleDelete} className=\"delete-button\">Delete User</button>\r\n      </div>\r\n\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default EditUser;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}