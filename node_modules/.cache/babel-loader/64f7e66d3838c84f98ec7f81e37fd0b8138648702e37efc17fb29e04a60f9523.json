{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oG_Ju\\\\OneDrive\\\\Desktop\\\\SadeemVendors-master\\\\frontend\\\\src\\\\components\\\\vendordetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport '../css/vendordetails.css';\nimport defaultimage from './vendor.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VendorDetails() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [vendor, setVendor] = useState(null);\n  const [admins, setAdmins] = useState([]);\n  const [tables, setTables] = useState([]);\n  const [items, setItems] = useState([]);\n  const [newAdminEmail, setNewAdminEmail] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [userRole, setUserRole] = useState(null);\n  const [currentUserId, setCurrentUserId] = useState(null);\n  const [userOccupiedTables, setUserOccupiedTables] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const imageRef = useRef(null);\n  const handleErrorMessageTimeout = () => {\n    setErrorMessage(null);\n    setError(null);\n  };\n  const fetchWithToken = async (url, options = {}) => {\n    const token = localStorage.getItem('token');\n    const response = await fetch(url, {\n      ...options,\n      headers: {\n        ...options.headers,\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      const errorMessage = errorData.error || 'An unexpected error occurred';\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    }\n    return response.json();\n  };\n  const fetchVendorDetails = useCallback(async () => {\n    try {\n      const data = await fetchWithToken(`http://localhost:8080/vendors/${id}`);\n      setVendor(data.vendor);\n    } catch (error) {\n      console.error('Error fetching vendor details:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [id]);\n  const fetchUserRole = useCallback(async () => {\n    try {\n      const data = await fetchWithToken('http://localhost:8080/me');\n      setUserRole(data.me.user_role);\n      setCurrentUserId(data.me.user_info.id);\n    } catch (error) {\n      console.error('Error fetching user role:', error);\n    }\n  }, []);\n  const fetchVendorAdmins = useCallback(async () => {\n    try {\n      const data = await fetchWithToken(`http://localhost:8080/vendors/${id}/admins`);\n      setAdmins(data.vendor_admin || []);\n    } catch (error) {\n      console.error('Error fetching vendor admins:', error);\n    }\n  }, [id]);\n  const fetchVendorTables = useCallback(async () => {\n    try {\n      const data = await fetchWithToken(`http://localhost:8080/vendor/${id}/tables`);\n      setTables(data.tables || []);\n    } catch (error) {\n      console.error('Error fetching vendor tables:', error);\n    }\n  }, [id]);\n  const fetchUserTables = useCallback(async () => {\n    try {\n      const data = await fetchWithToken('http://localhost:8080/usertable');\n      return Array.isArray(data.tables) ? data.tables : [];\n    } catch (error) {\n      setErrorMessage('An unexpected error occurred while fetching user tables');\n      setTimeout(() => setErrorMessage(null), 3000);\n      return [];\n    }\n  }, []);\n  const fetchVendorItems = useCallback(async () => {\n    try {\n      const data = await fetchWithToken(`http://localhost:8080/vendor/${id}/items`);\n      setItems(data.items || []);\n    } catch (error) {\n      console.error('Error fetching vendor items:', error);\n    }\n  }, [id]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        await fetchVendorDetails();\n        await fetchUserRole();\n        await fetchVendorAdmins();\n        await fetchVendorTables();\n        const occupiedTables = await fetchUserTables();\n        setUserOccupiedTables(occupiedTables);\n        setTables(prevTables => prevTables.map(table => occupiedTables.includes(table.id) ? {\n          ...table,\n          customer_id: currentUserId\n        } : table));\n        await fetchVendorItems();\n      } catch (error) {\n        console.error('Error during data fetch:', error);\n      }\n    };\n    fetchData();\n  }, [fetchVendorDetails, fetchUserRole, fetchVendorAdmins, fetchVendorTables, fetchUserTables, fetchVendorItems, currentUserId]);\n  useEffect(() => {\n    if (errorMessage || error) {\n      const timeoutId = setTimeout(handleErrorMessageTimeout, 3000);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [error, errorMessage]);\n  const handleImageHover = () => {\n    if (imageRef.current) {\n      imageRef.current.style.cursor = 'pointer';\n    }\n  };\n  const handleImageLeave = () => {\n    if (imageRef.current) {\n      imageRef.current.style.cursor = 'default';\n    }\n  };\n  const handleImageError = e => {\n    e.target.src = defaultimage;\n  };\n  const handleAddAdmin = async () => {\n    if (!newAdminEmail) return;\n    try {\n      await fetchWithToken(`http://localhost:8080/vendors/${id}/admins`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: new URLSearchParams({\n          Email: newAdminEmail\n        })\n      });\n      setNewAdminEmail('');\n      fetchVendorAdmins(); // Refresh admin list\n    } catch (error) {\n      console.error('Error adding admin:', error);\n    }\n  };\n  const handleRemoveAdmin = async adminId => {\n    try {\n      await fetchWithToken(`http://localhost:8080/vendors/${id}/admins/${adminId}`, {\n        method: 'DELETE'\n      });\n      setAdmins(prevAdmins => prevAdmins.filter(admin => admin.user_id !== adminId));\n    } catch (error) {\n      console.error('Error removing admin:', error);\n    }\n  };\n  const handleRemoveTable = async tableId => {\n    try {\n      await fetchWithToken(`http://localhost:8080/vendor/${id}/tables/${tableId}`, {\n        method: 'DELETE'\n      });\n      setTables(prevTables => prevTables.filter(table => table.id !== tableId));\n    } catch (error) {\n      console.error('Error removing table:', error);\n    }\n  };\n  const handleEditTable = tableId => {\n    navigate(`/vendor/${id}/tables/${tableId}/edit`);\n  };\n  const handleAddTable = () => {\n    navigate(`/vendor/${id}/tables/new`);\n  };\n  const handleAddItem = () => {\n    navigate(`/vendor/${id}/items/new`);\n  };\n  const handleOccupyTable = async tableId => {\n    try {\n      await fetchWithToken(`http://localhost:8080/vendor/${id}/tables/${tableId}/needs-service`, {\n        method: 'PUT'\n      });\n      setTables(prevTables => prevTables.map(table => table.id === tableId ? {\n        ...table,\n        is_available: false,\n        is_needs_service: true,\n        customer_id: currentUserId\n      } : table));\n    } catch (error) {\n      console.error('Error occupying table:', error);\n    }\n  };\n  const handleFreeTable = async tableId => {\n    const table = tables.find(t => t.id === tableId);\n    if (!table || table.customer_id !== currentUserId) {\n      setError('You can only free the table you have assigned.');\n      return;\n    }\n    try {\n      await fetchWithToken(`http://localhost:8080/vendor/${id}/tables/${tableId}/freetable`, {\n        method: 'PUT'\n      });\n      setTables(prevTables => prevTables.map(table => table.id === tableId ? {\n        ...table,\n        is_available: true,\n        is_needs_service: false,\n        customer_id: null\n      } : table));\n    } catch (error) {\n      console.error('Error freeing table:', error);\n    }\n  };\n  const handleUpdateNeedsService = async (tableId, isNeedsService) => {\n    try {\n      await fetchWithToken(`http://localhost:8080/vendor/${id}/tables/${tableId}/needs-service`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: new URLSearchParams({\n          needs_service: isNeedsService\n        })\n      });\n      setTables(prevTables => prevTables.map(table => table.id === tableId ? {\n        ...table,\n        is_needs_service: isNeedsService\n      } : table));\n    } catch (error) {\n      console.error('Error updating needs service:', error);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vendor-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Vendor Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this), vendor && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vendor-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        ref: imageRef,\n        src: vendor.image_url || defaultimage,\n        alt: vendor.name,\n        onMouseEnter: handleImageHover,\n        onMouseLeave: handleImageLeave,\n        onError: handleImageError,\n        style: {\n          width: '100px',\n          height: '100px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: vendor.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: vendor.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 23\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [userRole === 'admin' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddAdmin,\n        children: \"Add Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }, this), userRole === 'admin' && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newAdminEmail,\n        onChange: e => setNewAdminEmail(e.target.value),\n        placeholder: \"New admin email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admins\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this), admins.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: admins.map(admin => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [admin.user_info.email, userRole === 'admin' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveAdmin(admin.user_id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 37\n          }, this)]\n        }, admin.user_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No admins found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tables\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tables\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTable,\n        children: \"Add Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }, this), tables.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tables.map(table => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Table #\", table.number, table.is_available ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleOccupyTable(table.id),\n            children: \"Occupy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleFreeTable(table.id),\n            children: \"Free\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 37\n          }, this), table.is_needs_service && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdateNeedsService(table.id, false),\n            children: \"Mark as Fixed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 37\n          }, this), !table.is_needs_service && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdateNeedsService(table.id, true),\n            children: \"Mark as Needing Service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 37\n          }, this), userRole === 'admin' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditTable(table.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 37\n          }, this), userRole === 'admin' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveTable(table.id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 37\n          }, this)]\n        }, table.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tables found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddItem,\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }, this), items.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.name, \" - $\", item.price]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No items found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 9\n  }, this);\n}\n_s(VendorDetails, \"msovsDVBPrH//AdlvOyczXg2NhY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = VendorDetails;\nexport default VendorDetails;\nvar _c;\n$RefreshReg$(_c, \"VendorDetails\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","useParams","useNavigate","defaultimage","jsxDEV","_jsxDEV","VendorDetails","_s","id","navigate","vendor","setVendor","admins","setAdmins","tables","setTables","items","setItems","newAdminEmail","setNewAdminEmail","error","setError","loading","setLoading","userRole","setUserRole","currentUserId","setCurrentUserId","userOccupiedTables","setUserOccupiedTables","errorMessage","setErrorMessage","imageRef","handleErrorMessageTimeout","fetchWithToken","url","options","token","localStorage","getItem","response","fetch","headers","Authorization","ok","errorData","json","Error","fetchVendorDetails","data","console","fetchUserRole","me","user_role","user_info","fetchVendorAdmins","vendor_admin","fetchVendorTables","fetchUserTables","Array","isArray","setTimeout","fetchVendorItems","fetchData","occupiedTables","prevTables","map","table","includes","customer_id","timeoutId","clearTimeout","handleImageHover","current","style","cursor","handleImageLeave","handleImageError","e","target","src","handleAddAdmin","method","body","URLSearchParams","Email","handleRemoveAdmin","adminId","prevAdmins","filter","admin","user_id","handleRemoveTable","tableId","handleEditTable","handleAddTable","handleAddItem","handleOccupyTable","is_available","is_needs_service","handleFreeTable","find","t","handleUpdateNeedsService","isNeedsService","needs_service","children","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","image_url","alt","name","onMouseEnter","onMouseLeave","onError","width","height","description","onClick","type","value","onChange","placeholder","length","email","number","item","price","_c","$RefreshReg$"],"sources":["C:/Users/oG_Ju/OneDrive/Desktop/SadeemVendors-master/frontend/src/components/vendordetails.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport '../css/vendordetails.css';\nimport defaultimage from './vendor.jpg';\n\nfunction VendorDetails() {\n    const { id } = useParams();\n    const navigate = useNavigate();\n    const [vendor, setVendor] = useState(null);\n    const [admins, setAdmins] = useState([]);\n    const [tables, setTables] = useState([]);\n    const [items, setItems] = useState([]);\n    const [newAdminEmail, setNewAdminEmail] = useState('');\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [userRole, setUserRole] = useState(null);\n    const [currentUserId, setCurrentUserId] = useState(null);\n    const [userOccupiedTables, setUserOccupiedTables] = useState([]);\n    const [errorMessage, setErrorMessage] = useState(null);\n    const imageRef = useRef(null);\n\n    const handleErrorMessageTimeout = () => {\n        setErrorMessage(null);\n        setError(null);\n    };\n\n    const fetchWithToken = async (url, options = {}) => {\n        const token = localStorage.getItem('token');\n        const response = await fetch(url, {\n            ...options,\n            headers: {\n                ...options.headers,\n                Authorization: `Bearer ${token}`,\n            },\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            const errorMessage = errorData.error || 'An unexpected error occurred';\n            setError(errorMessage);\n            throw new Error(errorMessage);\n        }\n        return response.json();\n    };\n\n    const fetchVendorDetails = useCallback(async () => {\n        try {\n            const data = await fetchWithToken(`http://localhost:8080/vendors/${id}`);\n            setVendor(data.vendor);\n        } catch (error) {\n            console.error('Error fetching vendor details:', error);\n        } finally {\n            setLoading(false);\n        }\n    }, [id]);\n\n    const fetchUserRole = useCallback(async () => {\n        try {\n            const data = await fetchWithToken('http://localhost:8080/me');\n            setUserRole(data.me.user_role);\n            setCurrentUserId(data.me.user_info.id);\n        } catch (error) {\n            console.error('Error fetching user role:', error);\n        }\n    }, []);\n\n    const fetchVendorAdmins = useCallback(async () => {\n        try {\n            const data = await fetchWithToken(`http://localhost:8080/vendors/${id}/admins`);\n            setAdmins(data.vendor_admin || []);\n        } catch (error) {\n            console.error('Error fetching vendor admins:', error);\n        }\n    }, [id]);\n\n    const fetchVendorTables = useCallback(async () => {\n        try {\n            const data = await fetchWithToken(`http://localhost:8080/vendor/${id}/tables`);\n            setTables(data.tables || []);\n        } catch (error) {\n            console.error('Error fetching vendor tables:', error);\n        }\n    }, [id]);\n\n    const fetchUserTables = useCallback(async () => {\n        try {\n            const data = await fetchWithToken('http://localhost:8080/usertable');\n            return Array.isArray(data.tables) ? data.tables : [];\n        } catch (error) {\n            setErrorMessage('An unexpected error occurred while fetching user tables');\n            setTimeout(() => setErrorMessage(null), 3000);\n            return [];\n        }\n    }, []);\n\n    const fetchVendorItems = useCallback(async () => {\n        try {\n            const data = await fetchWithToken(`http://localhost:8080/vendor/${id}/items`);\n            setItems(data.items || []);\n        } catch (error) {\n            console.error('Error fetching vendor items:', error);\n        }\n    }, [id]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                await fetchVendorDetails();\n                await fetchUserRole();\n                await fetchVendorAdmins();\n                await fetchVendorTables();\n                const occupiedTables = await fetchUserTables();\n                setUserOccupiedTables(occupiedTables);\n                setTables(prevTables =>\n                    prevTables.map(table =>\n                        occupiedTables.includes(table.id)\n                            ? { ...table, customer_id: currentUserId }\n                            : table\n                    )\n                );\n                await fetchVendorItems();\n            } catch (error) {\n                console.error('Error during data fetch:', error);\n            }\n        };\n        fetchData();\n    }, [fetchVendorDetails, fetchUserRole, fetchVendorAdmins, fetchVendorTables, fetchUserTables, fetchVendorItems, currentUserId]);\n\n    useEffect(() => {\n        if (errorMessage || error) {\n            const timeoutId = setTimeout(handleErrorMessageTimeout, 3000);\n            return () => clearTimeout(timeoutId);\n        }\n    }, [error, errorMessage]);\n\n    const handleImageHover = () => {\n        if (imageRef.current) {\n            imageRef.current.style.cursor = 'pointer';\n        }\n    };\n\n    const handleImageLeave = () => {\n        if (imageRef.current) {\n            imageRef.current.style.cursor = 'default';\n        }\n    };\n\n    const handleImageError = (e) => {\n        e.target.src = defaultimage;\n    };\n\n    const handleAddAdmin = async () => {\n        if (!newAdminEmail) return;\n\n        try {\n            await fetchWithToken(`http://localhost:8080/vendors/${id}/admins`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: new URLSearchParams({ Email: newAdminEmail }),\n            });\n            setNewAdminEmail('');\n            fetchVendorAdmins(); // Refresh admin list\n        } catch (error) {\n            console.error('Error adding admin:', error);\n        }\n    };\n\n    const handleRemoveAdmin = async (adminId) => {\n        try {\n            await fetchWithToken(`http://localhost:8080/vendors/${id}/admins/${adminId}`, { method: 'DELETE' });\n            setAdmins(prevAdmins => prevAdmins.filter(admin => admin.user_id !== adminId));\n        } catch (error) {\n            console.error('Error removing admin:', error);\n        }\n    };\n\n    const handleRemoveTable = async (tableId) => {\n        try {\n            await fetchWithToken(`http://localhost:8080/vendor/${id}/tables/${tableId}`, { method: 'DELETE' });\n            setTables(prevTables => prevTables.filter(table => table.id !== tableId));\n        } catch (error) {\n            console.error('Error removing table:', error);\n        }\n    };\n\n    const handleEditTable = (tableId) => {\n        navigate(`/vendor/${id}/tables/${tableId}/edit`);\n    };\n\n    const handleAddTable = () => {\n        navigate(`/vendor/${id}/tables/new`);\n    };\n\n    const handleAddItem = () => {\n        navigate(`/vendor/${id}/items/new`);\n    };\n\n    const handleOccupyTable = async (tableId) => {\n        try {\n            await fetchWithToken(`http://localhost:8080/vendor/${id}/tables/${tableId}/needs-service`, { method: 'PUT' });\n            setTables(prevTables =>\n                prevTables.map(table =>\n                    table.id === tableId\n                        ? { ...table, is_available: false, is_needs_service: true, customer_id: currentUserId }\n                        : table\n                )\n            );\n        } catch (error) {\n            console.error('Error occupying table:', error);\n        }\n    };\n\n    const handleFreeTable = async (tableId) => {\n        const table = tables.find(t => t.id === tableId);\n        if (!table || table.customer_id !== currentUserId) {\n            setError('You can only free the table you have assigned.');\n            return;\n        }\n\n        try {\n            await fetchWithToken(`http://localhost:8080/vendor/${id}/tables/${tableId}/freetable`, { method: 'PUT' });\n            setTables(prevTables =>\n                prevTables.map(table =>\n                    table.id === tableId\n                        ? { ...table, is_available: true, is_needs_service: false, customer_id: null }\n                        : table\n                )\n            );\n        } catch (error) {\n            console.error('Error freeing table:', error);\n        }\n    };\n\n    const handleUpdateNeedsService = async (tableId, isNeedsService) => {\n        try {\n            await fetchWithToken(`http://localhost:8080/vendor/${id}/tables/${tableId}/needs-service`, {\n                method: 'PUT',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: new URLSearchParams({ needs_service: isNeedsService }),\n            });\n            setTables(prevTables =>\n                prevTables.map(table =>\n                    table.id === tableId ? { ...table, is_needs_service: isNeedsService } : table\n                )\n            );\n        } catch (error) {\n            console.error('Error updating needs service:', error);\n        }\n    };\n\n    if (loading) return <p>Loading...</p>;\n\n    return (\n        <div className=\"vendor-details\">\n            <h1>Vendor Details</h1>\n            {vendor && (\n                <div className=\"vendor-info\">\n                    <img\n                        ref={imageRef}\n                        src={vendor.image_url || defaultimage}\n                        alt={vendor.name}\n                        onMouseEnter={handleImageHover}\n                        onMouseLeave={handleImageLeave}\n                        onError={handleImageError}\n                        style={{ width: '100px', height: '100px' }}\n                    />\n                    <h2>{vendor.name}</h2>\n                    <p>{vendor.description}</p>\n                </div>\n            )}\n\n            {error && <p className=\"error-message\">{error}</p>}\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n            <div className=\"actions\">\n                {userRole === 'admin' && (\n                    <button onClick={handleAddAdmin}>Add Admin</button>\n                )}\n                {userRole === 'admin' && (\n                    <input\n                        type=\"text\"\n                        value={newAdminEmail}\n                        onChange={e => setNewAdminEmail(e.target.value)}\n                        placeholder=\"New admin email\"\n                    />\n                )}\n            </div>\n\n            <div className=\"admins\">\n                <h2>Admins</h2>\n                {admins.length > 0 ? (\n                    <ul>\n                        {admins.map(admin => (\n                            <li key={admin.user_id}>\n                                {admin.user_info.email}\n                                {userRole === 'admin' && (\n                                    <button onClick={() => handleRemoveAdmin(admin.user_id)}>Remove</button>\n                                )}\n                            </li>\n                        ))}\n                    </ul>\n                ) : (\n                    <p>No admins found.</p>\n                )}\n            </div>\n\n            <div className=\"tables\">\n                <h2>Tables</h2>\n                <button onClick={handleAddTable}>Add Table</button>\n                {tables.length > 0 ? (\n                    <ul>\n                        {tables.map(table => (\n                            <li key={table.id}>\n                                Table #{table.number}\n                                {table.is_available ? (\n                                    <button onClick={() => handleOccupyTable(table.id)}>Occupy</button>\n                                ) : (\n                                    <button onClick={() => handleFreeTable(table.id)}>Free</button>\n                                )}\n                                {table.is_needs_service && (\n                                    <button onClick={() => handleUpdateNeedsService(table.id, false)}>Mark as Fixed</button>\n                                )}\n                                {!table.is_needs_service && (\n                                    <button onClick={() => handleUpdateNeedsService(table.id, true)}>Mark as Needing Service</button>\n                                )}\n                                {userRole === 'admin' && (\n                                    <button onClick={() => handleEditTable(table.id)}>Edit</button>\n                                )}\n                                {userRole === 'admin' && (\n                                    <button onClick={() => handleRemoveTable(table.id)}>Remove</button>\n                                )}\n                            </li>\n                        ))}\n                    </ul>\n                ) : (\n                    <p>No tables found.</p>\n                )}\n            </div>\n\n            <div className=\"items\">\n                <h2>Items</h2>\n                <button onClick={handleAddItem}>Add Item</button>\n                {items.length > 0 ? (\n                    <ul>\n                        {items.map(item => (\n                            <li key={item.id}>\n                                {item.name} - ${item.price}\n                            </li>\n                        ))}\n                    </ul>\n                ) : (\n                    <p>No items found.</p>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default VendorDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}