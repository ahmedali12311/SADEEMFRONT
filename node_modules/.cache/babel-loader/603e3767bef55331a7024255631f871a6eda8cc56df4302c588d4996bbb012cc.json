{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oG_Ju\\\\OneDrive\\\\Desktop\\\\SadeemVendorapp\\\\frontend\\\\src\\\\components\\\\vendorDetailsSection\\\\TableSection.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport '../../css/vendordetails.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VendorTables = ({\n  id,\n  currentUserId,\n  admins\n}) => {\n  _s();\n  const [tables, setTables] = useState([]);\n  const [newTableName, setNewTableName] = useState('');\n  const [editingTableId, setEditingTableId] = useState(null);\n  const [editTableName, setEditTableName] = useState('');\n  const [isEditingTable, setIsEditingTable] = useState(false);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [setErrorTimeout, setErrorTimeoutState] = useState(null);\n  const isCurrentUserAdmin = admins.some(admin => admin.user_id === currentUserId);\n  const getAuthHeaders = () => {\n    const token = localStorage.getItem('token');\n    return {\n      Authorization: `Bearer ${token}`\n    };\n  };\n  const handleFetchError = async response => {\n    const errorData = await response.json();\n    return errorData.error || 'An unexpected error occurred';\n  };\n  const fetchVendorTables = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`http://localhost:8080/vendor/${id}/tables`, {\n        headers: getAuthHeaders()\n      });\n      if (!response.ok) {\n        const errorMessage = await handleFetchError(response);\n        setError(errorMessage);\n        return;\n      }\n      const data = await response.json();\n      setTables(data.tables || []);\n    } catch (error) {\n      setError('An unexpected error occurred while fetching vendor tables');\n    } finally {\n      setLoading(false);\n    }\n  }, [id]);\n  const fetchUserTables = useCallback(async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/usertable\", {\n        headers: getAuthHeaders()\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        const errorMessage = errorData.error;\n        if (errorMessage === \"User already have a table\") {\n          setErrorMessage(\"You already have a table!\");\n        } else if (errorMessage !== \"User has no table\") {\n          setError(errorMessage);\n        }\n        return []; // Return an empty array on error\n      }\n      const data = await response.json();\n      return Array.isArray(data.tables) ? data.tables : []; // Ensure this always returns an array\n    } catch (error) {\n      setErrorMessage('An unexpected error occurred while fetching user tables');\n      setErrorTimeoutState(setTimeout(() => {\n        setErrorMessage(null);\n      }, 3000));\n    }\n  }, []);\n  const handleRemoveTable = async tableId => {\n    try {\n      const response = await fetch(`http://localhost:8080/vendor/${id}/tables/${tableId}`, {\n        method: 'DELETE',\n        headers: getAuthHeaders()\n      });\n      if (!response.ok) {\n        const errorMessage = await handleFetchError(response);\n        setError(errorMessage);\n        return;\n      }\n\n      // Remove the table from the list\n      setTables(prevTables => prevTables.filter(table => table.id !== tableId));\n    } catch (error) {\n      setError('An unexpected error occurred while removing table');\n    }\n  };\n  const handleOccupyTable = async tableId => {\n    try {\n      const response = await fetch(`http://localhost:8080/vendor/${id}/tables/${tableId}/needs-service`, {\n        method: 'PUT',\n        headers: getAuthHeaders()\n      });\n      if (!response.ok) {\n        const errorMessage = await handleFetchError(response);\n        setError(errorMessage);\n        return;\n      }\n\n      // Update the local state to reflect that the table is now occupied\n      setTables(prevTables => prevTables.map(table => table.id === tableId ? {\n        ...table,\n        is_available: false,\n        is_needs_service: true,\n        customer_id: currentUserId\n      } : table));\n      console.log('Table occupied successfully');\n    } catch (error) {\n      setError('An unexpected error occurred while occupying the table');\n    }\n  };\n  const handleFreeTable = async tableId => {\n    const table = tables.find(t => t.id === tableId);\n    if (!table || table.customer_id !== currentUserId) {\n      setError('You can only free the table you have assigned.');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8080/vendor/${id}/tables/${tableId}/freetable`, {\n        method: 'PUT',\n        headers: getAuthHeaders()\n      });\n      if (!response.ok) {\n        const errorMessage = await handleFetchError(response);\n        setError(errorMessage);\n        return;\n      }\n\n      // Update the table state to reflect that it is now available\n      setTables(prevTables => prevTables.map(table => table.id === tableId ? {\n        ...table,\n        is_available: true,\n        is_needs_service: false,\n        customer_id: null\n      } : table));\n    } catch (error) {\n      setError('An unexpected error occurred while freeing the table');\n    }\n  };\n  const handleUpdateNeedsService = async (tableId, isNeedsService) => {\n    try {\n      const response = await fetch(`http://localhost:8080/vendor/${id}/table/${tableId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          ...getAuthHeaders()\n        },\n        body: new URLSearchParams({\n          is_needs_service: isNeedsService\n        })\n      });\n      if (!response.ok) {\n        const errorMessage = await handleFetchError(response);\n        setError(errorMessage);\n        return;\n      }\n\n      // Update the local state\n      setTables(prevTables => prevTables.map(table => table.id === tableId ? {\n        ...table,\n        is_needs_service: isNeedsService\n      } : table));\n    } catch (error) {\n      setError('An unexpected error occurred while updating the needs service status');\n    }\n  };\n  const handleAddTable = async () => {\n    if (!newTableName) return;\n    try {\n      const response = await fetch(`http://localhost:8080/vendor/${id}/tables`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          ...getAuthHeaders()\n        },\n        body: new URLSearchParams({\n          name: newTableName\n        })\n      });\n      if (!response.ok) {\n        const errorMessage = await handleFetchError(response);\n        setError(errorMessage);\n        return;\n      }\n      setNewTableName('');\n      fetchVendorTables(); // Refresh table list\n    } catch (error) {\n      setError('An unexpected error occurred while adding the table');\n    }\n  };\n  const handleEditTable = table => {\n    setEditingTableId(table.id);\n    setEditTableName(table.name);\n    setIsEditingTable(true);\n  };\n  const handleUpdateTable = async () => {\n    if (editTableName === undefined) return;\n    try {\n      const response = await fetch(`http://localhost:8080/vendor/${id}/table/${editingTableId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          ...getAuthHeaders()\n        },\n        body: new URLSearchParams({\n          name: editTableName\n        })\n      });\n      if (!response.ok) {\n        const errorMessage = await handleFetchError(response);\n        setError(errorMessage);\n        return;\n      }\n\n      // Refresh the table list\n      fetchVendorTables();\n      setIsEditingTable(false);\n      setEditTableName('');\n    } catch (error) {\n      setError('An unexpected error occurred while updating the table');\n    }\n  };\n  useEffect(() => {\n    fetchVendorTables();\n    return () => {\n      clearTimeout(setErrorTimeout);\n    };\n  }, [fetchVendorTables]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tables-section card\",\n      children: [(userRole === '1' || userRole === '2' && isCurrentUserAdmin) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowAddTableInput(true),\n          children: \"Add Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 15\n      }, this), showAddTableInput && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-table-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-overlay\",\n          onClick: () => setShowAddTableInput(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-table-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add Table\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              handleAddTable();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"new-table-name\",\n                children: \"Table Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"new-table-name\",\n                value: newTableName,\n                onChange: e => setNewTableName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add Table\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setShowAddTableInput(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"Tables\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tables-list\",\n        children: tables.map(table => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"table-name\",\n            children: table.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Available: \", table.is_available ? 'Yes' : 'No']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Needs Service: \", table.is_needs_service ? 'Yes' : 'No']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-actions\",\n            children: [table.customer_id === currentUserId && !table.is_available && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleFreeTable(table.id),\n              children: \"Free Table\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"action-row\",\n              children: table.is_available && table.customer_id !== currentUserId && userRole === '3' && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleOccupyTable(table.id),\n                className: \"occupy-button\",\n                children: \"Occupy Table\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"service-actions\",\n              children: !table.is_available && (userRole === '1' || userRole === '2' && isCurrentUserAdmin) && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleUpdateNeedsService(table.id, !table.is_needs_service),\n                  children: table.is_needs_service ? 'Mark as No Needs Service' : 'Mark as Needs Service'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleVendorFreeTable(table.id),\n                  children: \"Vendor Free Table\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 19\n          }, this), table.customer_id === currentUserId && !table.is_available && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"orders-list\",\n            children: orders.length > 0 ? orders.filter(order => order.table_id === table.id) // Filter orders for the specific table\n            .map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"order-id\",\n                children: [\"Order ID: \", order.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 31\n              }, this), order.item_names.map((itemName, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [itemName, \": \", order.item_quantities[index]]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 33\n              }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Total Price: \", order.total_order_cost]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Status: \", order.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 31\n              }, this)]\n            }, order.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 29\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No orders available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-remove-row\",\n            children: (userRole === '1' || userRole === '2' && isCurrentUserAdmin) && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setEditTableName(table.name);\n                  setIsEditingTable(true);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleRemoveTable(table.id),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 19\n          }, this)]\n        }, table.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }, this), isEditingTable && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-table-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-overlay\",\n          onClick: () => setIsEditingTable(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-table-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Edit Table\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              handleUpdateTable();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"table-name\",\n                children: \"Table Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"table-name\",\n                value: editTableName,\n                onChange: e => setEditTableName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setIsEditingTable(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 15\n      }, this), error && error.includes('table') && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 9\n  }, this);\n};\n_s(VendorTables, \"lVuuKXRW/SDVuG2DWGZUZNOllD4=\");\n_c = VendorTables;\nexport default VendorTables;\nvar _c;\n$RefreshReg$(_c, \"VendorTables\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","VendorTables","id","currentUserId","admins","_s","tables","setTables","newTableName","setNewTableName","editingTableId","setEditingTableId","editTableName","setEditTableName","isEditingTable","setIsEditingTable","error","setError","loading","setLoading","errorMessage","setErrorMessage","setErrorTimeout","setErrorTimeoutState","isCurrentUserAdmin","some","admin","user_id","getAuthHeaders","token","localStorage","getItem","Authorization","handleFetchError","response","errorData","json","fetchVendorTables","fetch","headers","ok","data","fetchUserTables","Array","isArray","setTimeout","handleRemoveTable","tableId","method","prevTables","filter","table","handleOccupyTable","map","is_available","is_needs_service","customer_id","console","log","handleFreeTable","find","t","handleUpdateNeedsService","isNeedsService","body","URLSearchParams","handleAddTable","name","handleEditTable","handleUpdateTable","undefined","clearTimeout","children","className","userRole","onClick","setShowAddTableInput","fileName","_jsxFileName","lineNumber","columnNumber","showAddTableInput","onSubmit","e","preventDefault","htmlFor","type","value","onChange","target","handleVendorFreeTable","orders","length","order","table_id","item_names","itemName","index","item_quantities","total_order_cost","status","includes","_c","$RefreshReg$"],"sources":["C:/Users/oG_Ju/OneDrive/Desktop/SadeemVendorapp/frontend/src/components/vendorDetailsSection/TableSection.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport '../../css/vendordetails.css';\r\n\r\nconst VendorTables = ({ id, currentUserId, admins }) => {\r\n    const [tables, setTables] = useState([]);\r\n    const [newTableName, setNewTableName] = useState('');\r\n    const [editingTableId, setEditingTableId] = useState(null);\r\n    const [editTableName, setEditTableName] = useState('');\r\n    const [isEditingTable, setIsEditingTable] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n    const [setErrorTimeout, setErrorTimeoutState] = useState(null);\r\n    const isCurrentUserAdmin = admins.some(admin => admin.user_id === currentUserId);\r\n\r\n    const getAuthHeaders = () => {\r\n        const token = localStorage.getItem('token');\r\n        return {\r\n            Authorization: `Bearer ${token}`,\r\n        };\r\n    };\r\n\r\n    const handleFetchError = async (response) => {\r\n        const errorData = await response.json();\r\n        return errorData.error || 'An unexpected error occurred';\r\n    };\r\n\r\n    const fetchVendorTables = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/vendor/${id}/tables`, {\r\n                headers: getAuthHeaders(),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorMessage = await handleFetchError(response);\r\n                setError(errorMessage);\r\n                return;\r\n            }\r\n\r\n            const data = await response.json();\r\n            setTables(data.tables || []);\r\n        } catch (error) {\r\n            setError('An unexpected error occurred while fetching vendor tables');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [id]);\r\n\r\n    const fetchUserTables = useCallback(async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/usertable\", {\r\n                headers: getAuthHeaders(),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                const errorMessage = errorData.error;\r\n                if (errorMessage === \"User already have a table\") {\r\n                    setErrorMessage(\"You already have a table!\");\r\n                } else if (errorMessage !== \"User has no table\") {\r\n                    setError(errorMessage);\r\n                }\r\n                return []; // Return an empty array on error\r\n            }\r\n\r\n            const data = await response.json();\r\n            return Array.isArray(data.tables) ? data.tables : []; // Ensure this always returns an array\r\n            \r\n        } catch (error) {\r\n            setErrorMessage('An unexpected error occurred while fetching user tables');\r\n            setErrorTimeoutState(\r\n                setTimeout(() => {\r\n                    setErrorMessage(null);\r\n                }, 3000)\r\n            );\r\n        }\r\n    }, []);\r\n\r\n    const handleRemoveTable = async (tableId) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/vendor/${id}/tables/${tableId}`, {\r\n                method: 'DELETE',\r\n                headers: getAuthHeaders(),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorMessage = await handleFetchError(response);\r\n                setError(errorMessage);\r\n                return;\r\n            }\r\n\r\n            // Remove the table from the list\r\n            setTables((prevTables) => prevTables.filter((table) => table.id !== tableId));\r\n        } catch (error) {\r\n            setError('An unexpected error occurred while removing table');\r\n        }\r\n    };\r\n\r\n    const handleOccupyTable = async (tableId) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/vendor/${id}/tables/${tableId}/needs-service`, {\r\n                method: 'PUT',\r\n                headers: getAuthHeaders(),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorMessage = await handleFetchError(response);\r\n                setError(errorMessage);\r\n                return;\r\n            }\r\n\r\n            // Update the local state to reflect that the table is now occupied\r\n            setTables((prevTables) =>\r\n                prevTables.map((table) =>\r\n                    table.id === tableId ? { ...table, is_available: false, is_needs_service: true, customer_id: currentUserId } : table\r\n                )\r\n            );\r\n\r\n            console.log('Table occupied successfully');\r\n        } catch (error) {\r\n            setError('An unexpected error occurred while occupying the table');\r\n        }\r\n    };\r\n\r\n    const handleFreeTable = async (tableId) => {\r\n        const table = tables.find((t) => t.id === tableId);\r\n        if (!table || table.customer_id !== currentUserId) {\r\n            setError('You can only free the table you have assigned.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/vendor/${id}/tables/${tableId}/freetable`, {\r\n                method: 'PUT',\r\n                headers: getAuthHeaders(),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorMessage = await handleFetchError(response);\r\n                setError(errorMessage);\r\n                return;\r\n            }\r\n\r\n            // Update the table state to reflect that it is now available\r\n            setTables((prevTables) =>\r\n                prevTables.map((table) =>\r\n                    table.id === tableId ? { ...table, is_available: true, is_needs_service: false, customer_id: null } : table\r\n                )\r\n            );\r\n        } catch (error) {\r\n            setError('An unexpected error occurred while freeing the table');\r\n        }\r\n    };\r\n\r\n    const handleUpdateNeedsService = async (tableId, isNeedsService) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/vendor/${id}/table/${tableId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                    ...getAuthHeaders(),\r\n                },\r\n                body: new URLSearchParams({ is_needs_service: isNeedsService }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorMessage = await handleFetchError(response);\r\n                setError(errorMessage);\r\n                return;\r\n            }\r\n\r\n            // Update the local state\r\n            setTables((prevTables) =>\r\n                prevTables.map((table) =>\r\n                    table.id === tableId ? { ...table, is_needs_service: isNeedsService } : table\r\n                )\r\n            );\r\n        } catch (error) {\r\n            setError('An unexpected error occurred while updating the needs service status');\r\n        }\r\n    };\r\n\r\n    const handleAddTable = async () => {\r\n        if (!newTableName) return;\r\n\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/vendor/${id}/tables`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                    ...getAuthHeaders(),\r\n                },\r\n                body: new URLSearchParams({ name: newTableName }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorMessage = await handleFetchError(response);\r\n                setError(errorMessage);\r\n                return;\r\n            }\r\n\r\n            setNewTableName('');\r\n            fetchVendorTables(); // Refresh table list\r\n        } catch (error) {\r\n            setError('An unexpected error occurred while adding the table');\r\n        }\r\n    };\r\n\r\n    const handleEditTable = (table) => {\r\n        setEditingTableId(table.id);\r\n        setEditTableName(table.name);\r\n        setIsEditingTable(true);\r\n    };\r\n\r\n    const handleUpdateTable = async () => {\r\n        if (editTableName === undefined) return;\r\n\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/vendor/${id}/table/${editingTableId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                    ...getAuthHeaders(),\r\n                },\r\n                body: new URLSearchParams({ name: editTableName }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorMessage = await handleFetchError(response);\r\n                setError(errorMessage);\r\n                return;\r\n            }\r\n\r\n            // Refresh the table list\r\n            fetchVendorTables();\r\n            setIsEditingTable(false);\r\n            setEditTableName('');\r\n        } catch (error) {\r\n            setError('An unexpected error occurred while updating the table');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchVendorTables();\r\n\r\n        return () => {\r\n            clearTimeout(setErrorTimeout);\r\n        };\r\n    }, [fetchVendorTables]);\r\n\r\n    return (\r\n        <div>\r\n          {/* Tables Section */}\r\n          <div className=\"tables-section card\">\r\n            {(userRole === '1' || (userRole === '2' && isCurrentUserAdmin)) && (\r\n              <div className=\"add-buttons\">\r\n                <button onClick={() => setShowAddTableInput(true)}>Add Table</button>\r\n              </div>\r\n            )}\r\n    \r\n            {showAddTableInput && (\r\n              <div className=\"edit-table-modal\">\r\n                <div className=\"modal-overlay\" onClick={() => setShowAddTableInput(false)}></div>\r\n                <div className=\"edit-table-form\">\r\n                  <h3>Add Table</h3>\r\n                  <form onSubmit={(e) => { e.preventDefault(); handleAddTable(); }}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"new-table-name\">Table Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"new-table-name\"\r\n                        value={newTableName}\r\n                        onChange={(e) => setNewTableName(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <button type=\"submit\">Add Table</button>\r\n                    <button type=\"button\" onClick={() => setShowAddTableInput(false)}>Cancel</button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            )}\r\n    \r\n            <h2 className=\"section-title\">Tables</h2>\r\n            <div className=\"tables-list\">\r\n              {tables.map((table) => (\r\n                <div key={table.id} className=\"table-card\">\r\n                  <h3 className=\"table-name\">{table.name}</h3>\r\n                  <p>Available: {table.is_available ? 'Yes' : 'No'}</p>\r\n                  <p>Needs Service: {table.is_needs_service ? 'Yes' : 'No'}</p>\r\n    \r\n                  <div className=\"table-actions\">\r\n                    {table.customer_id === currentUserId && !table.is_available && (\r\n                      <button onClick={() => handleFreeTable(table.id)}>Free Table</button>\r\n                    )}\r\n    \r\n                    <div className=\"action-row\">\r\n                      {table.is_available && (table.customer_id !== currentUserId) && userRole === '3' && (\r\n                        <button onClick={() => handleOccupyTable(table.id)} className=\"occupy-button\">Occupy Table</button>\r\n                      )}\r\n                    </div>\r\n    \r\n                    <div className=\"service-actions\">\r\n                      {!table.is_available && (userRole === '1' || (userRole === '2' && isCurrentUserAdmin)) && (\r\n                        <>\r\n                          <button onClick={() => handleUpdateNeedsService(table.id, !table.is_needs_service)}>\r\n                            {table.is_needs_service ? 'Mark as No Needs Service' : 'Mark as Needs Service'}\r\n                          </button>\r\n                          <button onClick={() => handleVendorFreeTable(table.id)}>Vendor Free Table</button>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n    \r\n                  {table.customer_id === currentUserId && !table.is_available && (\r\n                    <div className=\"orders-list\">\r\n                      {orders.length > 0 ? (\r\n                        orders\r\n                          .filter(order => order.table_id === table.id) // Filter orders for the specific table\r\n                          .map((order) => (\r\n                            <div key={order.id} className=\"order-card\">\r\n                              <h3 className=\"order-id\">Order ID: {order.id}</h3>\r\n                              {order.item_names.map((itemName, index) => (\r\n                                <p key={index}>\r\n                                  {itemName}: {order.item_quantities[index]}\r\n                                </p>\r\n                              ))}\r\n                              <p>Total Price: {order.total_order_cost}</p>\r\n                              <p>Status: {order.status}</p>\r\n                            </div>\r\n                          ))\r\n                      ) : (\r\n                        <p>No orders available.</p>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n    \r\n                  <div className=\"edit-remove-row\">\r\n                    {(userRole === '1' || (userRole === '2' && isCurrentUserAdmin)) && (\r\n                      <>\r\n                        <button onClick={() => { setEditTableName(table.name); setIsEditingTable(true); }}>Edit</button>\r\n                        <button onClick={() => handleRemoveTable(table.id)}>Remove</button>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n    \r\n            {/* Full-Screen Edit Form for Tables */}\r\n            {isEditingTable && (\r\n              <div className=\"edit-table-modal\">\r\n                <div className=\"modal-overlay\" onClick={() => setIsEditingTable(false)}></div>\r\n                <div className=\"edit-table-form\">\r\n                  <h3>Edit Table</h3>\r\n                  <form onSubmit={(e) => { e.preventDefault(); handleUpdateTable(); }}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"table-name\">Table Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"table-name\"\r\n                        value={editTableName}\r\n                        onChange={(e) => setEditTableName(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <button type=\"submit\">Save Changes</button>\r\n                    <button type=\"button\" onClick={() => setIsEditingTable(false)}>Cancel</button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            )}\r\n    \r\n            {error && error.includes('table') && (\r\n              <div className=\"error-message\">{error}</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n    \r\n    export default VendorTables;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}