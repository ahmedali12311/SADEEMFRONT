{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oG_Ju\\\\OneDrive\\\\Desktop\\\\SadeemVendors-master\\\\frontend\\\\src\\\\components\\\\vendordetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport '../css/vendordetails.css';\nimport defaultimage from './vendor.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VendorDetails() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [vendor, setVendor] = useState(null);\n  const [admins, setAdmins] = useState([]);\n  const [tables, setTables] = useState([]);\n  const [items, setItems] = useState([]); // Add this line\n  const [newAdminEmail, setNewAdminEmail] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [userRole, setUserRole] = useState(null);\n  const imageRef = useRef(null);\n  const [userOccupiedTables, setUserOccupiedTables] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [errorTimeout, setErrorTimeout] = useState(null);\n  const [currentUserId, setCurrentUserId] = useState(null);\n  const handleErrorMessageTimeout = () => {\n    setErrorMessage(null);\n    setError(null); // Clear the error state as well\n  };\n  const fetchVendorDetails = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/vendors/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        const errorMessage = errorData.error || 'An error occurred while fetching vendor details';\n        setError(errorMessage);\n        return;\n      }\n      const data = await response.json();\n      if (data && data.vendor) {\n        setVendor(data.vendor);\n      } else {\n        setError('Vendor data is undefined or null');\n      }\n    } catch (error) {\n      setError('An unexpected error occurred while fetching vendor details');\n    } finally {\n      setLoading(false);\n    }\n  }, [id]);\n  const fetchUserRole = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (token) {\n        const response = await fetch('http://localhost:8080/me', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          const errorMessage = errorData.error || 'Failed to fetch user role';\n          setError(errorMessage);\n          return;\n        }\n        const data = await response.json();\n        console.log(`Fetched user data: ${JSON.stringify(data.me)}`);\n        setUserRole(data.me.user_role);\n        setCurrentUserId(data.me.user_info.id); // Update the currentUserId state correctly\n      }\n    } catch (error) {\n      setError('An unexpected error occurred while fetching user role');\n    }\n  }, []);\n  const fetchVendorAdmins = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/vendors/${id}/admins`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        const errorMessage = errorData.error || 'Failed to fetch vendor admins';\n        setError(errorMessage);\n        return;\n      }\n      const data = await response.json();\n      setAdmins(data.vendor_admin || []);\n    } catch (error) {\n      setError('An unexpected error occurred while fetching vendor admins');\n    }\n  }, [id]);\n  const fetchVendorTables = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/vendor/${id}/tables`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        const errorMessage = errorData.error || 'Failed to fetch vendor tables';\n        setError(errorMessage);\n        return;\n      }\n      const data = await response.json();\n      setTables(data.tables || []);\n    } catch (error) {\n      setError('An unexpected error occurred while fetching vendor tables');\n    }\n  }, [id]);\n  const fetchUserTables = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:8080/usertable', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        const errorMessage = errorData.error;\n        if (errorMessage === 'User already have a table') {\n          setErrorMessage('You already have a table!'); // Updated message\n        } else if (errorMessage !== 'User has no table') {\n          setError(errorMessage);\n        }\n        return []; // Return an empty array\n      }\n      const data = await response.json();\n      return data.tables || []; // Return the user tables or an empty array\n    } catch (error) {\n      setErrorMessage('An unexpected error occurred while fetching user tables');\n      setErrorTimeout(setTimeout(() => {\n        setErrorMessage(null);\n      }, 3000));\n    }\n  }, []);\n  useEffect(() => {\n    if (errorMessage) {\n      const timeoutId = setTimeout(handleErrorMessageTimeout, 3000); // 3000ms = 3 seconds\n      return () => clearTimeout(timeoutId);\n    }\n    if (error) {\n      const timeoutId = setTimeout(handleErrorMessageTimeout, 3000); // 3000ms = 3 seconds\n      return () => clearTimeout(timeoutId);\n    }\n  }, [error, errorMessage]);\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetchVendorDetails();\n      await fetchUserRole();\n      await fetchVendorAdmins();\n      await fetchVendorTables();\n      await fetchUserTables();\n      const occupiedTables = await fetchUserTables();\n      setUserOccupiedTables(occupiedTables);\n      if (Array.isArray(occupiedTables)) {\n        setTables(prevTables => prevTables.map(table => occupiedTables.includes(table.id) ? {\n          ...table,\n          customer_id: currentUserId\n        } : table));\n      }\n\n      // Call fetchVendorItems here\n      await fetchVendorItems(); // <--- Add this line\n    };\n    fetchData();\n  }, [fetchVendorDetails, fetchUserRole, fetchVendorAdmins, fetchVendorTables, fetchUserTables, currentUserId]);\n  const handleImageHover = () => {\n    if (imageRef.current) {\n      imageRef.current.style.cursor = 'pointer';\n    }\n  };\n  const handleImageLeave = () => {\n    if (imageRef.current) {\n      imageRef.current.style.cursor = 'default';\n    }\n  };\n  const handleImageError = e => {\n    e.target.src = defaultimage;\n  };\n  const handleAddAdmin = async () => {\n    if (!newAdminEmail) return;\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/vendors/${id}/admins`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          Authorization: `Bearer ${token}`\n        },\n        body: new URLSearchParams({\n          Email: newAdminEmail\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        const errorMessage = errorData.error || 'Failed to add admin';\n        setError(errorMessage);\n        return;\n      }\n      setNewAdminEmail('');\n      fetchVendorAdmins(); // Refresh admin list\n    } catch (error) {\n      setError('An unexpected error occurred while adding admin');\n    }\n  };\n  const handleRemoveAdmin = async adminId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/vendors/${id}/admins/${adminId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        const errorMessage = errorData.error || 'Failed to remove admin';\n        setError(errorMessage);\n        return;\n      }\n\n      // Remove the admin from the list\n      setAdmins(prevAdmins => prevAdmins.filter(admin => admin.user_id !== adminId));\n    } catch (error) {\n      setError('An unexpected error occurred while removing admin');\n    }\n  };\n  const handleRemoveTable = async tableId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/vendor/${id}/tables/${tableId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        const errorMessage = errorData.error || 'Failed to remove table';\n        setError(errorMessage);\n        return;\n      }\n\n      // Remove the table from the list\n      setTables(prevTables => prevTables.filter(table => table.id !== tableId));\n    } catch (error) {\n      setError('An unexpected error occurred while removing table');\n    }\n  };\n  const handleEditTable = tableId => {\n    navigate(`/vendor/${id}/tables/${tableId}/edit`); // Updated usage\n  };\n  const handleAddTable = () => {\n    navigate(`/vendor/${id}/tables/new`); // Navigates to Add Table page\n  };\n  const handleAddItem = () => {\n    navigate(`/vendor/${id}/items/new`); // Navigates to Add Item page\n  };\n  const handleOccupyTable = async tableId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/usertable`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          Authorization: `Bearer ${token}`\n        },\n        body: new URLSearchParams({\n          table_id: tableId\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        const errorMessage = errorData.error;\n        if (errorMessage === 'User already have a table') {\n          setErrorMessage('You already have a table!'); // Updated message\n        } else {\n          setError(errorMessage);\n        }\n        return;\n      }\n      setUserOccupiedTables(prevOccupiedTables => [...prevOccupiedTables, tableId]);\n      setTables(prevTables => prevTables.map(table => table.id === tableId ? {\n        ...table,\n        customer_id: currentUserId\n      } : table));\n    } catch (error) {\n      setError('An unexpected error occurred while occupying table');\n    }\n  };\n  const handleReleaseTable = async tableId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/usertable`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        const errorMessage = errorData.error;\n        setError(errorMessage);\n        return;\n      }\n      setUserOccupiedTables(prevOccupiedTables => prevOccupiedTables.filter(occupiedTableId => occupiedTableId !== tableId));\n      setTables(prevTables => prevTables.map(table => table.id === tableId ? {\n        ...table,\n        customer_id: null\n      } : table));\n    } catch (error) {\n      setError('An unexpected error occurred while releasing table');\n    }\n  };\n  const fetchVendorItems = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/vendor/${id}/items`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        const errorMessage = errorData.error || 'Failed to fetch vendor items';\n        setError(errorMessage);\n        return;\n      }\n      const data = await response.json();\n      setItems(data.items || []);\n    } catch (error) {\n      setError('An unexpected error occurred while fetching vendor items');\n    }\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 391,\n    columnNumber: 7\n  }, this);\n}\n_s(VendorDetails, \"caa/noF7o2ZKfpTO5KQTUkKxEsk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = VendorDetails;\nexport default VendorDetails;\nvar _c;\n$RefreshReg$(_c, \"VendorDetails\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","useParams","useNavigate","defaultimage","jsxDEV","_jsxDEV","VendorDetails","_s","id","navigate","vendor","setVendor","admins","setAdmins","tables","setTables","items","setItems","newAdminEmail","setNewAdminEmail","error","setError","loading","setLoading","userRole","setUserRole","imageRef","userOccupiedTables","setUserOccupiedTables","errorMessage","setErrorMessage","errorTimeout","setErrorTimeout","currentUserId","setCurrentUserId","handleErrorMessageTimeout","fetchVendorDetails","token","localStorage","getItem","response","fetch","headers","Authorization","ok","errorData","json","data","fetchUserRole","console","log","JSON","stringify","me","user_role","user_info","fetchVendorAdmins","vendor_admin","fetchVendorTables","fetchUserTables","setTimeout","timeoutId","clearTimeout","fetchData","occupiedTables","Array","isArray","prevTables","map","table","includes","customer_id","fetchVendorItems","handleImageHover","current","style","cursor","handleImageLeave","handleImageError","e","target","src","handleAddAdmin","method","body","URLSearchParams","Email","handleRemoveAdmin","adminId","prevAdmins","filter","admin","user_id","handleRemoveTable","tableId","handleEditTable","handleAddTable","handleAddItem","handleOccupyTable","table_id","prevOccupiedTables","handleReleaseTable","occupiedTableId","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/oG_Ju/OneDrive/Desktop/SadeemVendors-master/frontend/src/components/vendordetails.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport '../css/vendordetails.css';\nimport defaultimage from './vendor.jpg';\n\nfunction VendorDetails() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [vendor, setVendor] = useState(null);\n  const [admins, setAdmins] = useState([]);\n  const [tables, setTables] = useState([]);\n  const [items, setItems] = useState([]); // Add this line\n  const [newAdminEmail, setNewAdminEmail] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [userRole, setUserRole] = useState(null);\n  const imageRef = useRef(null);\n  const [userOccupiedTables, setUserOccupiedTables] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [errorTimeout, setErrorTimeout] = useState(null);\n  const [currentUserId, setCurrentUserId] = useState(null);\n  const handleErrorMessageTimeout = () => {\n    setErrorMessage(null);\n    setError(null); // Clear the error state as well\n  };\n\n  const fetchVendorDetails = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/vendors/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        const errorMessage = errorData.error || 'An error occurred while fetching vendor details';\n        setError(errorMessage);\n        return;\n      }\n\n      const data = await response.json();\n      if (data && data.vendor) {\n        setVendor(data.vendor);\n      } else {\n        setError('Vendor data is undefined or null');\n      }\n    } catch (error) {\n      setError('An unexpected error occurred while fetching vendor details');\n    } finally {\n      setLoading(false);\n    }\n  }, [id]);\n\n  const fetchUserRole = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (token) {\n        const response = await fetch('http://localhost:8080/me', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          const errorMessage = errorData.error || 'Failed to fetch user role';\n          setError(errorMessage);\n          return;\n        }\n\n        const data = await response.json();\n        console.log(`Fetched user data: ${JSON.stringify(data.me)}`);\n        setUserRole(data.me.user_role);\n        setCurrentUserId(data.me.user_info.id); // Update the currentUserId state correctly\n      }\n    } catch (error) {\n      setError('An unexpected error occurred while fetching user role');\n    }\n  }, []);\n\n  const fetchVendorAdmins = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/vendors/${id}/admins`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        const errorMessage = errorData.error || 'Failed to fetch vendor admins';\n        setError(errorMessage);\n        return;\n      }\n\n      const data = await response.json();\n      setAdmins(data.vendor_admin || []);\n    } catch (error) {\n      setError('An unexpected error occurred while fetching vendor admins');\n    }\n  }, [id]);\n\n  const fetchVendorTables = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/vendor/${id}/tables`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        const errorMessage = errorData.error || 'Failed to fetch vendor tables';\n        setError(errorMessage);\n        return;\n      }\n\n      const data = await response.json();\n      setTables(data.tables || []);\n    } catch (error) {\n      setError('An unexpected error occurred while fetching vendor tables');\n    }\n  }, [id]);\n\n  const fetchUserTables = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:8080/usertable', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n  \n      if (!response.ok) {\n        const errorData = await response.json();\n        const errorMessage = errorData.error;\n        if (errorMessage === 'User already have a table') {\n          setErrorMessage('You already have a table!'); // Updated message\n        } else if (errorMessage !== 'User has no table') {\n          setError(errorMessage);\n        }\n        return []; // Return an empty array\n      }\n  \n      const data = await response.json();\n      return data.tables || []; // Return the user tables or an empty array\n    } catch (error) {\n      setErrorMessage('An unexpected error occurred while fetching user tables');\n      setErrorTimeout(\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 3000)\n      );\n    }\n  }, []);\n\n    useEffect(() => {\n      if (errorMessage) {\n        const timeoutId = setTimeout(handleErrorMessageTimeout, 3000); // 3000ms = 3 seconds\n        return () => clearTimeout(timeoutId);\n      }\n\n      if (error) {\n        const timeoutId = setTimeout(handleErrorMessageTimeout, 3000); // 3000ms = 3 seconds\n        return () => clearTimeout(timeoutId);\n      }\n    }, [error, errorMessage]);\n\n    useEffect(() => {\n      const fetchData = async () => {\n        await fetchVendorDetails();\n        await fetchUserRole();\n        await fetchVendorAdmins();\n        await fetchVendorTables();\n        await fetchUserTables();\n\n        const occupiedTables = await fetchUserTables();\n        setUserOccupiedTables(occupiedTables);\n\n        if (Array.isArray(occupiedTables)) {\n          setTables((prevTables) =>\n            prevTables.map((table) =>\n              occupiedTables.includes(table.id) ? { ...table, customer_id: currentUserId } : table\n            )\n          );\n        }\n\n        // Call fetchVendorItems here\n        await fetchVendorItems(); // <--- Add this line\n      };\n\n      fetchData();\n    }, [fetchVendorDetails, fetchUserRole, fetchVendorAdmins, fetchVendorTables, fetchUserTables, currentUserId]);\n\n    const handleImageHover = () => {\n      if (imageRef.current) {\n        imageRef.current.style.cursor = 'pointer';\n      }\n    };\n\n    const handleImageLeave = () => {\n      if (imageRef.current) {\n        imageRef.current.style.cursor = 'default';\n      }\n    };\n\n    const handleImageError = (e) => {\n      e.target.src = defaultimage;\n    };\n\n    const handleAddAdmin = async () => {\n      if (!newAdminEmail) return;\n\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`http://localhost:8080/vendors/${id}/admins`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            Authorization: `Bearer ${token}`,\n          },\n          body: new URLSearchParams({ Email: newAdminEmail }),\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          const errorMessage = errorData.error || 'Failed to add admin';\n          setError(errorMessage);\n          return;\n        }\n\n        setNewAdminEmail('');\n        fetchVendorAdmins(); // Refresh admin list\n      } catch (error) {\n        setError('An unexpected error occurred while adding admin');\n      }\n    };\n\n    const handleRemoveAdmin = async (adminId) => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`http://localhost:8080/vendors/${id}/admins/${adminId}`, {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          const errorMessage = errorData.error || 'Failed to remove admin';\n          setError(errorMessage);\n          return;\n        }\n\n        // Remove the admin from the list\n        setAdmins((prevAdmins) => prevAdmins.filter((admin) => admin.user_id !== adminId));\n      } catch (error) {\n        setError('An unexpected error occurred while removing admin');\n      }\n    };\n\n    const handleRemoveTable = async (tableId) => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`http://localhost:8080/vendor/${id}/tables/${tableId}`, {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          const errorMessage = errorData.error || 'Failed to remove table';\n          setError(errorMessage);\n          return;\n        }\n\n        // Remove the table from the list\n        setTables((prevTables) => prevTables.filter((table) => table.id !== tableId));\n      } catch (error) {\n        setError('An unexpected error occurred while removing table');\n      }\n    };\n\n    const handleEditTable = (tableId) => {\n      navigate(`/vendor/${id}/tables/${tableId}/edit`); // Updated usage\n    };\n\n    const handleAddTable = () => {\n      navigate(`/vendor/${id}/tables/new`); // Navigates to Add Table page\n    };\n\n    const handleAddItem = () => {\n      navigate(`/vendor/${id}/items/new`); // Navigates to Add Item page\n    };\n\n    const handleOccupyTable = async (tableId) => {\n      try {\n        const token = localStorage.getItem('token');\n                const response = await fetch(`http://localhost:8080/usertable`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            Authorization: `Bearer ${token}`,\n          },\n          body: new URLSearchParams({ table_id: tableId }),\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          const errorMessage = errorData.error;\n          if (errorMessage === 'User already have a table') {\n            setErrorMessage('You already have a table!'); // Updated message\n          } else {\n            setError(errorMessage);\n          }\n          return;\n        }\n\n        setUserOccupiedTables((prevOccupiedTables) => [...prevOccupiedTables, tableId]);\n        setTables((prevTables) =>\n          prevTables.map((table) =>\n            table.id === tableId ? { ...table, customer_id: currentUserId } : table\n          )\n        );\n      } catch (error) {\n        setError('An unexpected error occurred while occupying table');\n      }\n    };\n\n    const handleReleaseTable = async (tableId) => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`http://localhost:8080/usertable`, {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          const errorMessage = errorData.error;\n          setError(errorMessage);\n          return;\n        }\n\n        setUserOccupiedTables((prevOccupiedTables) =>\n          prevOccupiedTables.filter((occupiedTableId) => occupiedTableId !== tableId)\n        );\n        setTables((prevTables) =>\n          prevTables.map((table) =>\n            table.id === tableId ? { ...table, customer_id: null } : table\n          )\n        );\n      } catch (error) {\n        setError('An unexpected error occurred while releasing table');\n      }\n    };\n\n    const fetchVendorItems = useCallback(async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`http://localhost:8080/vendor/${id}/items`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          const errorMessage = errorData.error || 'Failed to fetch vendor items';\n          setError(errorMessage);\n          return;\n        }\n\n        const data = await response.json();\n        setItems(data.items || []);\n      } catch (error) {\n        setError('An unexpected error occurred while fetching vendor items');\n      }\n    }, [id]);\n\n    return (\n      <div>\n        {/* Render vendor details, admins, tables, and items here */}\n      </div>\n    );\n  }\n\n  export default VendorDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}