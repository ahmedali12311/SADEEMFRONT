{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oG_Ju\\\\OneDrive\\\\Desktop\\\\SadeemVendorapp\\\\frontend\\\\src\\\\components\\\\navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode'; // Correct import for jwt-decode\nimport '../css/Navbar.css';\nimport logo from '../css/vendor.jpg';\nimport defaultImage from '../css/vendor.jpg';\nimport { useOrderUpdate } from './OrderUpdateContext'; // Import the custom hook\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Navbar = ({\n  initialCartItems,\n  onCartItemsChange,\n  refreshCart\n}) => {\n  _s();\n  const [userRole, setUserRole] = useState(null);\n  const [isTransparent, setIsTransparent] = useState(false);\n  const [cartDropdownVisible, setCartDropdownVisible] = useState(false);\n  const [cartItems, setCartItems] = useState(initialCartItems || []);\n  const [cart, setCart] = useState(initialCartItems || []);\n  const [cartDescription, setCartDescription] = useState('');\n  const [initialCartDescription, setInitialCartDescription] = useState(''); // State to store the initial description\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [removalErrorMessage, setRemovalErrorMessage] = useState(null);\n  const [setSuccessMessage] = useState(null); // Success message state\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [totalQuantity, setTotalQuantity] = useState(0);\n  const [loadingCartItems, setLoadingCartItems] = useState(false);\n  const [loadingCheckout, setLoadingCheckout] = useState(false);\n  const navigate = useNavigate();\n  const dropdownRef = useRef(null);\n  const {\n    setShouldUpdateOrders\n  } = useOrderUpdate(); // Use the context\n  const [isSavedAndNotChanged, setIsSavedAndNotChanged] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [initialCartsItems, setInitialCartItems] = useState(initialCartItems || []); // State to store the initial cart items\n  const [isQuantitySaved, setIsQuantitySaved] = useState(true); // Flag to track whether the quantity has been saved\n  const [isSavingQuantity, setIsSavingQuantity] = useState(false); // Flag to track whether the quantity is being saved\n  const [quantityErrorMessage, setQuantityErrorMessage] = useState(null);\n  const [itemQuantities, setItemQuantities] = useState({});\n  useEffect(() => {\n    fetchCartItems();\n  }, [refreshCart]);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decodedToken = jwtDecode(token);\n        const currentTime = Date.now() / 1000;\n        if (decodedToken.exp < currentTime) {\n          localStorage.removeItem('token');\n          setUserRole(null);\n        } else {\n          setUserRole(decodedToken.userRole);\n          fetchCartItems();\n        }\n      } catch (error) {\n        console.error('Error decoding token:', error);\n        localStorage.removeItem('token');\n        setUserRole(null);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsTransparent(window.scrollY > 50);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setCartDropdownVisible(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  const fetchCartItems = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) return;\n    try {\n      var _cartData$cart, _cartData$cart2, _cartData$cart3, _cartData$cart4;\n      const [itemsResponse, cartResponse] = await Promise.all([fetch('http://localhost:8080/cartitems', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }), fetch('http://localhost:8080/carts', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      })]);\n      if (!itemsResponse.ok || !cartResponse.ok) {\n        throw new Error('You must have a table to checkout!');\n      }\n      const itemsData = await itemsResponse.json();\n      setCartItems(itemsData.cart || []);\n      const cartData = await cartResponse.json();\n      setCart(cartData);\n      setCartDescription(((_cartData$cart = cartData.cart) === null || _cartData$cart === void 0 ? void 0 : _cartData$cart.description) || ''); // Update cart description\n      setInitialCartDescription(((_cartData$cart2 = cartData.cart) === null || _cartData$cart2 === void 0 ? void 0 : _cartData$cart2.description) || ''); // Set the initial description\n      setTotalPrice(((_cartData$cart3 = cartData.cart) === null || _cartData$cart3 === void 0 ? void 0 : _cartData$cart3.total_price) || 0); // Update total price\n      setTotalQuantity(((_cartData$cart4 = cartData.cart) === null || _cartData$cart4 === void 0 ? void 0 : _cartData$cart4.quantity) || 0); // Update total quantity\n      setCartItems(itemsData.cart || []);\n      setInitialCartItems(itemsData.cart || []);\n    } catch (error) {\n      console.error('Error fetching cart items:', error);\n    } finally {\n      setLoadingCartItems(false);\n    }\n  };\n  const deleteCart = async id => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Token is missing');\n      }\n      const cartResponse = await fetch(`http://localhost:8080/carts/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!cartResponse.ok) {\n        const errorData = await cartResponse.json();\n        console.error('Error response from server:', errorData);\n        throw new Error(`Failed to delete cart: ${errorData.error.role || 'Unknown error'}`);\n      }\n      console.log('Cart deleted successfully');\n      setCartItems([]);\n      setTotalPrice(0);\n      setTotalQuantity(0);\n    } catch (error) {\n      console.error('Error deleting cart:', error);\n      setErrorMessage('Error deleting cart. Please try again.');\n    } finally {\n      setLoadingCartItems(false);\n    }\n  };\n  const handleSignOut = () => {\n    localStorage.removeItem('token');\n    setUserRole(null);\n    navigate('/signin');\n  };\n  const toggleCartDropdown = () => {\n    setCartDropdownVisible(prev => !prev);\n  };\n  const handleCartDescriptionChange = e => {\n    const value = e.target.value;\n    if (value.length <= 100) {\n      setCartDescription(value);\n      setIsSavedAndNotChanged(false); // Reset isSavedAndNotChanged to false when description changes\n      setErrorMessage(null); // Clear error if it's within the limit\n    } else {\n      setErrorMessage('Description cannot exceed 100 characters.');\n    }\n  };\n  const updateCartDescription = async () => {\n    if (cartDescription.length > 100) {\n      setErrorMessage('Description cannot exceed 100 characters.');\n      return; // Prevent updating if the description is too long\n    }\n    setIsSaving(true); // Set isSaving to true when save operation starts\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/carts/${cart.cart.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Authorization': `Bearer ${token}`\n        },\n        body: new URLSearchParams({\n          description: cartDescription // Update only description\n        }).toString()\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      await fetchCartItems(); // Refresh cart items after updating description\n      setSuccessMessage('Cart updated successfully!'); // Set success message\n      setIsSavedAndNotChanged(true); // Set isSavedAndNotChanged to true when changes are saved\n      setInitialCartDescription(cartDescription); // Update the initial description to the new one\n      setTimeout(() => {\n        setSuccessMessage(null);\n        setIsSavedAndNotChanged(false); // Reset isSavedAndNotChanged to false after 3 seconds\n      }, 3000);\n    } catch (error) {\n      setErrorMessage('Error updating description. Please try again.');\n      console.error('Error updating cart description:', error);\n    } finally {\n      setIsSaving(false); // Reset isSaving to false when save operation completes\n    }\n  };\n  const updateCartItemQuantity = async (itemId, newQuantity) => {\n    if (newQuantity < 1) return;\n\n    // Check if the quantity is valid (less than or equal to the available quantity)\n    const item = cartItems.find(item => item.item_id === itemId);\n    if (newQuantity > item.available_quantity) {\n      setQuantityErrorMessage(`Invalid quantity. Available quantity is ${item.available_quantity}.`);\n      return;\n    }\n    setQuantityErrorMessage(null);\n    setIsQuantitySaved(false);\n    const updatedCartItems = cartItems.map(item => {\n      if (item.item_id === itemId) {\n        return {\n          ...item,\n          quantity: newQuantity\n        };\n      }\n      return item;\n    });\n    setCartItems(updatedCartItems);\n  };\n  const saveCartItemQuantity = async () => {\n    setIsSavingQuantity(true);\n    try {\n      const token = localStorage.getItem('token');\n      const updatedItems = Object.keys(itemQuantities).map(itemId => {\n        const item = cartItems.find(item => item.item_id === itemId);\n        return {\n          item_id: itemId,\n          quantity: itemQuantities[itemId]\n        };\n      });\n      const promises = updatedItems.map(item => {\n        return fetch(`http://localhost:8080/cartitems`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': `Bearer ${token}`\n          },\n          body: new URLSearchParams({\n            quantity: item.quantity\n          }).toString()\n        });\n      });\n      await Promise.all(promises);\n      await fetchCartItems();\n      setIsQuantitySaved(true);\n    } catch (error) {\n      setQuantityErrorMessage('Error saving quantity. Please try again.');\n      console.error('Error saving cart item:', error);\n    } finally {\n      setIsSavingQuantity(false);\n    }\n  };\n  const unsaveCartItemQuantity = () => {\n    setCartItems(initialCartsItems);\n    setIsQuantitySaved(true);\n  };\n  const deleteCartItem = async itemId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/cartitems/${itemId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      console.log('Item deleted successfully');\n      await fetchCartItems();\n    } catch (error) {\n      setRemovalErrorMessage('Error removing item. Please try again.');\n      console.error('Error deleting cart item:', error);\n    }\n  };\n  const handleCheckout = async () => {\n    setLoadingCheckout(true);\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:8080/checkout', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.errors ? JSON.stringify(errorData.errors) : 'Network response was not ok');\n      }\n      console.log('Checkout successful');\n      setCartItems([]);\n      setShouldUpdateOrders(true); // Notify context that orders need to be updated\n      window.location.reload(); // Refresh the page\n    } catch (error) {\n      console.error('Error during checkout:', error);\n      setErrorMessage(error.message);\n    } finally {\n      setLoadingCheckout(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: `navbar ${isTransparent ? 'transparent' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"center-links\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"end-links\",\n      children: [userRole === \"1\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/add-vendor\",\n            children: \"Add Vendor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/users\",\n            children: \"Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), userRole ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/profile\",\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/orders\",\n            children: \"Orders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleCartDropdown,\n            disabled: loadingCartItems,\n            children: loadingCartItems ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 58\n            }, this) : 'Cart'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 29\n          }, this), cartDropdownVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-dropdown\",\n            ref: dropdownRef,\n            children: [loadingCartItems ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading cart items...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 41\n            }, this) : cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No items in cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"cart-list\",\n                children: cartItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"cart-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"cart-item-img\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: item.img || defaultImage,\n                      alt: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 350,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"cart-item-name\",\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"cart-item-quantity\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => updateCartItemQuantity(item.item_id, itemQuantities[item.item_id] - 1 || item.quantity - 1),\n                      children: \"-\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 9\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: itemQuantities[item.item_id] || item.quantity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 9\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => updateCartItemQuantity(item.item_id, itemQuantities[item.item_id] + 1 || item.quantity + 1),\n                      children: \"+\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 356,\n                      columnNumber: 9\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => deleteCartItem(item.item_id),\n                    className: \"removebutton\",\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 57\n                  }, this)]\n                }, item.item_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 7\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cart-summary\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Total Quantity: \", totalQuantity]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Total Price: $\", totalPrice.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true), totalQuantity > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-description\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: cartDescription,\n                onChange: handleCartDescriptionChange,\n                placeholder: \"Write a description for your cart...\",\n                rows: \"3\",\n                maxLength: \"100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [cartDescription.length, \"/100\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 7\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 5\n            }, this), (cartDescription === initialCartDescription || isSavedAndNotChanged) && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCheckout,\n              disabled: loadingCheckout,\n              children: loadingCheckout ? 'Processing Checkout...' : 'Checkout'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 3\n            }, this), cartDescription !== initialCartDescription && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: updateCartDescription,\n              disabled: cartDescription.length > 100 || isSaving || loadingCartItems,\n              children: isSaving ? 'Saving...' : 'Save'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 3\n            }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'red'\n              },\n              children: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 3\n            }, this), isQuantitySaved ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCheckout,\n              disabled: loadingCheckout,\n              children: loadingCheckout ? 'Processing Checkout...' : 'Checkout'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 5\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: saveCartItemQuantity,\n                disabled: isSavingQuantity,\n                children: isSavingQuantity ? 'Saving...' : 'Save'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: unsaveCartItemQuantity,\n                children: \"Unsave\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteCart(cart.cart.id),\n              disabled: loadingCartItems,\n              className: \"removebutton\",\n              children: \"Delete Cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 37\n            }, this), removalErrorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'red'\n              },\n              children: removalErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSignOut,\n            children: \"Sign Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signin\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 9\n  }, this);\n};\n_s(Navbar, \"Rbt7h5M36MKAoO0TCn8qJdENXcY=\", false, function () {\n  return [useNavigate, useOrderUpdate];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Link","useNavigate","jwtDecode","logo","defaultImage","useOrderUpdate","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","initialCartItems","onCartItemsChange","refreshCart","_s","userRole","setUserRole","isTransparent","setIsTransparent","cartDropdownVisible","setCartDropdownVisible","cartItems","setCartItems","cart","setCart","cartDescription","setCartDescription","initialCartDescription","setInitialCartDescription","errorMessage","setErrorMessage","removalErrorMessage","setRemovalErrorMessage","setSuccessMessage","totalPrice","setTotalPrice","totalQuantity","setTotalQuantity","loadingCartItems","setLoadingCartItems","loadingCheckout","setLoadingCheckout","navigate","dropdownRef","setShouldUpdateOrders","isSavedAndNotChanged","setIsSavedAndNotChanged","isSaving","setIsSaving","initialCartsItems","setInitialCartItems","isQuantitySaved","setIsQuantitySaved","isSavingQuantity","setIsSavingQuantity","quantityErrorMessage","setQuantityErrorMessage","itemQuantities","setItemQuantities","fetchCartItems","token","localStorage","getItem","decodedToken","currentTime","Date","now","exp","removeItem","error","console","handleScroll","window","scrollY","addEventListener","removeEventListener","handleClickOutside","event","current","contains","target","document","_cartData$cart","_cartData$cart2","_cartData$cart3","_cartData$cart4","itemsResponse","cartResponse","Promise","all","fetch","headers","ok","Error","itemsData","json","cartData","description","total_price","quantity","deleteCart","id","method","errorData","role","log","handleSignOut","toggleCartDropdown","prev","handleCartDescriptionChange","e","value","length","updateCartDescription","response","body","URLSearchParams","toString","setTimeout","updateCartItemQuantity","itemId","newQuantity","item","find","item_id","available_quantity","updatedCartItems","map","saveCartItemQuantity","updatedItems","Object","keys","promises","unsaveCartItemQuantity","deleteCartItem","handleCheckout","errors","JSON","stringify","location","reload","message","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","disabled","ref","img","name","toFixed","onChange","placeholder","rows","maxLength","style","color","_c","$RefreshReg$"],"sources":["C:/Users/oG_Ju/OneDrive/Desktop/SadeemVendorapp/frontend/src/components/navbar.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode'; // Correct import for jwt-decode\r\nimport '../css/Navbar.css';\r\nimport logo from '../css/vendor.jpg';\r\nimport defaultImage from '../css/vendor.jpg';\r\nimport { useOrderUpdate } from './OrderUpdateContext'; // Import the custom hook\r\n\r\nconst Navbar = ({ initialCartItems, onCartItemsChange, refreshCart }) => {\r\n    const [userRole, setUserRole] = useState(null);\r\n    const [isTransparent, setIsTransparent] = useState(false);\r\n    const [cartDropdownVisible, setCartDropdownVisible] = useState(false);\r\n    const [cartItems, setCartItems] = useState(initialCartItems || []);\r\n    const [cart, setCart] = useState(initialCartItems || []);\r\n    const [cartDescription, setCartDescription] = useState('');\r\n    const [initialCartDescription, setInitialCartDescription] = useState(''); // State to store the initial description\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n    const [removalErrorMessage, setRemovalErrorMessage] = useState(null);\r\n    const [setSuccessMessage] = useState(null); // Success message state\r\n    const [totalPrice, setTotalPrice] = useState(0);\r\n    const [totalQuantity, setTotalQuantity] = useState(0);\r\n    const [loadingCartItems, setLoadingCartItems] = useState(false);\r\n    const [loadingCheckout, setLoadingCheckout] = useState(false);\r\n    const navigate = useNavigate();\r\n    const dropdownRef = useRef(null);\r\n    const { setShouldUpdateOrders } = useOrderUpdate(); // Use the context\r\n    const [isSavedAndNotChanged, setIsSavedAndNotChanged] = useState(false);\r\n    const [isSaving, setIsSaving] = useState(false);\r\n    const [initialCartsItems, setInitialCartItems] = useState(initialCartItems || []); // State to store the initial cart items\r\n    const [isQuantitySaved, setIsQuantitySaved] = useState(true); // Flag to track whether the quantity has been saved\r\n    const [isSavingQuantity, setIsSavingQuantity] = useState(false); // Flag to track whether the quantity is being saved\r\n    const [quantityErrorMessage, setQuantityErrorMessage] = useState(null);\r\n    const [itemQuantities, setItemQuantities] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetchCartItems();\r\n    }, [refreshCart]);\r\n\r\n    useEffect(() => {\r\n        \r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            try {\r\n                const decodedToken = jwtDecode(token);\r\n                const currentTime = Date.now() / 1000;\r\n                if (decodedToken.exp < currentTime) {\r\n                    localStorage.removeItem('token');\r\n                    setUserRole(null);\r\n                } else {\r\n                    setUserRole(decodedToken.userRole);\r\n                    fetchCartItems();\r\n                }\r\n            } catch (error) {\r\n                console.error('Error decoding token:', error);\r\n                localStorage.removeItem('token');\r\n                setUserRole(null);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            setIsTransparent(window.scrollY > 50);\r\n        };\r\n\r\n        window.addEventListener('scroll', handleScroll);\r\n        return () => window.removeEventListener('scroll', handleScroll);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n                setCartDropdownVisible(false);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    }, []);\r\n\r\n    const fetchCartItems = async () => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) return;\r\n\r\n        try {\r\n            const [itemsResponse, cartResponse] = await Promise.all([\r\n                fetch('http://localhost:8080/cartitems', {\r\n                    headers: { 'Authorization': `Bearer ${token}` }\r\n                }),\r\n                fetch('http://localhost:8080/carts', {\r\n                    headers: { 'Authorization': `Bearer ${token}` }\r\n                })\r\n            ]);\r\n\r\n            if (!itemsResponse.ok || !cartResponse.ok) {\r\n                throw new Error('You must have a table to checkout!');\r\n            }\r\n\r\n            const itemsData = await itemsResponse.json();\r\n            setCartItems(itemsData.cart || []);\r\n\r\n            const cartData = await cartResponse.json();\r\n            setCart(cartData);\r\n            setCartDescription(cartData.cart?.description || ''); // Update cart description\r\n            setInitialCartDescription(cartData.cart?.description || ''); // Set the initial description\r\n            setTotalPrice(cartData.cart?.total_price || 0); // Update total price\r\n            setTotalQuantity(cartData.cart?.quantity || 0); // Update total quantity\r\n            setCartItems(itemsData.cart || []);\r\n  setInitialCartItems(itemsData.cart || []); \r\n\r\n        } catch (error) {\r\n            console.error('Error fetching cart items:', error);\r\n        } finally {\r\n            setLoadingCartItems(false);\r\n        }\r\n    };\r\n\r\n    const deleteCart = async (id) => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                throw new Error('Token is missing');\r\n            }\r\n\r\n            const cartResponse = await fetch(`http://localhost:8080/carts/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n\r\n            if (!cartResponse.ok) {\r\n                const errorData = await cartResponse.json();\r\n                console.error('Error response from server:', errorData);\r\n                throw new Error(`Failed to delete cart: ${errorData.error.role || 'Unknown error'}`);\r\n            }\r\n\r\n            console.log('Cart deleted successfully');\r\n            setCartItems([]);\r\n            setTotalPrice(0);\r\n            setTotalQuantity(0);\r\n\r\n        } catch (error) {\r\n            console.error('Error deleting cart:', error);\r\n            setErrorMessage('Error deleting cart. Please try again.');\r\n        } finally {\r\n            setLoadingCartItems(false);\r\n        }\r\n    };\r\n\r\n    const handleSignOut = () => {\r\n        localStorage.removeItem('token');\r\n        setUserRole(null);\r\n        navigate('/signin');\r\n    };\r\n\r\n    const toggleCartDropdown = () => {\r\n        setCartDropdownVisible(prev => !prev);\r\n    \r\n    };\r\n    const handleCartDescriptionChange = (e) => {\r\n        const value = e.target.value;\r\n        if (value.length <= 100) {\r\n          setCartDescription(value);\r\n          setIsSavedAndNotChanged(false); // Reset isSavedAndNotChanged to false when description changes\r\n          setErrorMessage(null); // Clear error if it's within the limit\r\n        } else {\r\n          setErrorMessage('Description cannot exceed 100 characters.');\r\n        }\r\n      };\r\n      const updateCartDescription = async () => {\r\n        if (cartDescription.length > 100) {\r\n          setErrorMessage('Description cannot exceed 100 characters.');\r\n          return; // Prevent updating if the description is too long\r\n        }\r\n      \r\n        setIsSaving(true); // Set isSaving to true when save operation starts\r\n        try {\r\n          const token = localStorage.getItem('token');\r\n          const response = await fetch(`http://localhost:8080/carts/${cart.cart.id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n              'Content-Type': 'application/x-www-form-urlencoded',\r\n              'Authorization': `Bearer ${token}`\r\n            },\r\n            body: new URLSearchParams({\r\n              description: cartDescription // Update only description\r\n            }).toString()\r\n          });\r\n      \r\n          if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n          }\r\n      \r\n          await fetchCartItems(); // Refresh cart items after updating description\r\n          setSuccessMessage('Cart updated successfully!'); // Set success message\r\n          setIsSavedAndNotChanged(true); // Set isSavedAndNotChanged to true when changes are saved\r\n          setInitialCartDescription(cartDescription); // Update the initial description to the new one\r\n          setTimeout(() => {\r\n            setSuccessMessage(null);\r\n            setIsSavedAndNotChanged(false); // Reset isSavedAndNotChanged to false after 3 seconds\r\n          }, 3000);\r\n      \r\n        } catch (error) {\r\n          setErrorMessage('Error updating description. Please try again.');\r\n          console.error('Error updating cart description:', error);\r\n        } finally {\r\n          setIsSaving(false); // Reset isSaving to false when save operation completes\r\n        }\r\n      };\r\n      const updateCartItemQuantity = async (itemId, newQuantity) => {\r\n        if (newQuantity < 1) return;\r\n      \r\n        // Check if the quantity is valid (less than or equal to the available quantity)\r\n        const item = cartItems.find((item) => item.item_id === itemId);\r\n        if (newQuantity > item.available_quantity) {\r\n          setQuantityErrorMessage(`Invalid quantity. Available quantity is ${item.available_quantity}.`);\r\n          return;\r\n        }\r\n      \r\n        setQuantityErrorMessage(null);\r\n        setIsQuantitySaved(false);\r\n      \r\n        const updatedCartItems = cartItems.map((item) => {\r\n          if (item.item_id === itemId) {\r\n            return { ...item, quantity: newQuantity };\r\n          }\r\n          return item;\r\n        });\r\n      \r\n        setCartItems(updatedCartItems);\r\n      };\r\n      const saveCartItemQuantity = async () => {\r\n        setIsSavingQuantity(true);\r\n        try {\r\n          const token = localStorage.getItem('token');\r\n          const updatedItems = Object.keys(itemQuantities).map((itemId) => {\r\n            const item = cartItems.find((item) => item.item_id === itemId);\r\n            return { item_id: itemId, quantity: itemQuantities[itemId] };\r\n          });\r\n          const promises = updatedItems.map((item) => {\r\n            return fetch(`http://localhost:8080/cartitems`, {\r\n              method: 'PUT',\r\n              headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Authorization': `Bearer ${token}`\r\n              },\r\n              body: new URLSearchParams({ quantity: item.quantity }).toString()\r\n            });\r\n          });\r\n          await Promise.all(promises);\r\n          await fetchCartItems();\r\n          setIsQuantitySaved(true);\r\n        } catch (error) {\r\n          setQuantityErrorMessage('Error saving quantity. Please try again.');\r\n          console.error('Error saving cart item:', error);\r\n        } finally {\r\n          setIsSavingQuantity(false);\r\n        }\r\n      };\r\n  const unsaveCartItemQuantity = () => {\r\n    setCartItems(initialCartsItems);\r\n    setIsQuantitySaved(true);\r\n  };\r\n  const deleteCartItem = async (itemId) => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await fetch(`http://localhost:8080/cartitems/${itemId}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n\r\n            console.log('Item deleted successfully');\r\n            await fetchCartItems();\r\n        } catch (error) {\r\n            setRemovalErrorMessage('Error removing item. Please try again.');\r\n            console.error('Error deleting cart item:', error);\r\n        }\r\n    };\r\n\r\n    const handleCheckout = async () => {\r\n        setLoadingCheckout(true);\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await fetch('http://localhost:8080/checkout', {\r\n                method: 'POST',\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.errors ? JSON.stringify(errorData.errors) : 'Network response was not ok');\r\n            }\r\n\r\n            console.log('Checkout successful');\r\n            setCartItems([]);\r\n            setShouldUpdateOrders(true); // Notify context that orders need to be updated\r\n            window.location.reload(); // Refresh the page\r\n        } catch (error) {\r\n            console.error('Error during checkout:', error);\r\n            setErrorMessage(error.message);\r\n        } finally {\r\n            setLoadingCheckout(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <nav className={`navbar ${isTransparent ? 'transparent' : ''}`}>\r\n            <div className=\"logo\">\r\n                <img src={logo} alt=\"Logo\" />\r\n            </div>\r\n            <ul className=\"center-links\">\r\n                <li><Link to=\"/\">Home</Link></li>\r\n            </ul>\r\n            <ul className=\"end-links\">\r\n                {userRole === \"1\" && (\r\n                    <>\r\n                        <li><Link to=\"/add-vendor\">Add Vendor</Link></li>\r\n                        <li><Link to=\"/users\">Users</Link></li>\r\n                    </>\r\n                )}\r\n                {userRole ? (\r\n                    <>\r\n                        <li><Link to=\"/profile\">Profile</Link></li>\r\n                        <li><Link to=\"/orders\">Orders</Link></li>\r\n                        <li>\r\n                            <button onClick={toggleCartDropdown} disabled={loadingCartItems}>\r\n                                {loadingCartItems ?      <div className=\"spinner\"></div> : 'Cart'}\r\n                            </button>\r\n                            {cartDropdownVisible && (\r\n                                <div className=\"cart-dropdown\" ref={dropdownRef}>\r\n                                    {loadingCartItems ? (\r\n                                        <p>Loading cart items...</p>\r\n                                    ) : cartItems.length === 0 ? (\r\n                                        <p>No items in cart</p>\r\n                                    ) : (\r\n                                        <>\r\n                                             <ul className=\"cart-list\">\r\n    {cartItems.map((item) => (\r\n      <li key={item.item_id} className=\"cart-item\">\r\n                                                        <div className=\"cart-item-img\">\r\n                                                            <img src={item.img || defaultImage} alt={item.name} />\r\n                                                        </div>\r\n                                                        <div className=\"cart-item-name\">{item.name}</div>\r\n                                                        <div className=\"cart-item-quantity\">\r\n        <button onClick={() => updateCartItemQuantity(item.item_id, itemQuantities[item.item_id] - 1 || item.quantity - 1)}>-</button>\r\n        <span>{itemQuantities[item.item_id] || item.quantity}</span>\r\n        <button onClick={() => updateCartItemQuantity(item.item_id, itemQuantities[item.item_id] + 1 || item.quantity + 1)}>+</button>\r\n      </div>\r\n                                                        <button onClick={() => deleteCartItem(item.item_id)} className='removebutton'>Remove</button>\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                            <div className=\"cart-summary\">\r\n                                                <p>Total Quantity: {totalQuantity}</p>\r\n                                                <p>Total Price: ${totalPrice.toFixed(2)}</p>\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n\r\n\r\n{totalQuantity > 0 && (\r\n    <div className=\"cart-description\">\r\n      <textarea\r\n        value={cartDescription}\r\n        onChange={handleCartDescriptionChange}\r\n        placeholder=\"Write a description for your cart...\"\r\n        rows=\"3\"\r\n        maxLength=\"100\"\r\n      />\r\n      <p>{cartDescription.length}/100</p> {/* Character count */}\r\n    </div>\r\n  )}\r\n\r\n  {(cartDescription === initialCartDescription || isSavedAndNotChanged) && (\r\n  <button onClick={handleCheckout} disabled={loadingCheckout}>\r\n    {loadingCheckout ? 'Processing Checkout...' : 'Checkout'}\r\n  </button>\r\n)}\r\n                                 {cartDescription !== initialCartDescription && (\r\n  <button onClick={updateCartDescription} disabled={cartDescription.length > 100 || isSaving || loadingCartItems}>\r\n    {isSaving ? 'Saving...' : 'Save'}\r\n  </button>\r\n)}\r\n   {errorMessage && (\r\n  <p style={{ color: 'red' }}>{errorMessage}</p>\r\n)}\r\n\r\n{isQuantitySaved ? (\r\n    <button onClick={handleCheckout} disabled={loadingCheckout}>\r\n      {loadingCheckout ? 'Processing Checkout...' : 'Checkout'}\r\n    </button>\r\n  ) : (\r\n    <div>\r\n      <button onClick={saveCartItemQuantity} disabled={isSavingQuantity}>\r\n        {isSavingQuantity ? 'Saving...' : 'Save'}\r\n      </button>\r\n      <button onClick={unsaveCartItemQuantity}>Unsave</button>\r\n    </div>\r\n  )}\r\n                                    <button onClick={() => deleteCart(cart.cart.id)} disabled={loadingCartItems} className='removebutton'>\r\n                                        Delete Cart\r\n                                    </button>\r\n                                 \r\n{removalErrorMessage && (\r\n  <p style={{ color: 'red' }}>{removalErrorMessage}</p>\r\n)}\r\n                                </div>\r\n                            )}\r\n                        </li>\r\n                        <li><button onClick={handleSignOut}>Sign Out</button></li>\r\n                    </>\r\n                ) : (\r\n                    <li><Link to=\"/signin\">Sign In</Link></li>\r\n                )}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}