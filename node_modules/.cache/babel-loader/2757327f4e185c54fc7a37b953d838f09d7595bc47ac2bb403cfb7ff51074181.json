{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oG_Ju\\\\OneDrive\\\\Desktop\\\\SadeemVendors-master\\\\frontend\\\\src\\\\components\\\\edituser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport '../css/editprofile.css';\nimport defaultImage from '../css/vendor.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditUser() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n  const [image, setImage] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [phone, setPhone] = useState('');\n  const [vendorId, setVendorId] = useState(''); // New state for vendor ID\n  const [role, setRole] = useState(''); // State for role ID\n  const [errorMessages, setErrorMessages] = useState({\n    name: '',\n    email: '',\n    password: '',\n    phone: '',\n    image: '',\n    general: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [success, setSuccess] = useState(null);\n  const [successColor, setSuccessColor] = useState(''); // Add state for success message color\n  const imageRef = useRef(null);\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      setLoading(true);\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          throw new Error('No token found');\n        }\n        const [userResponse, roleResponse] = await Promise.all([fetch(`http://localhost:8080/users/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), fetch(`http://localhost:8080/userroles/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        })]);\n        if (!userResponse.ok || !roleResponse.ok) {\n          var _errorData$error, _errorData$error2, _errorData$error3, _errorData$error4;\n          const errorData = (await userResponse.json()) || {};\n          console.error('Backend errors:', errorData);\n          const newErrors = {\n            name: ((_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.name) || '',\n            email: ((_errorData$error2 = errorData.error) === null || _errorData$error2 === void 0 ? void 0 : _errorData$error2.email) || '',\n            password: ((_errorData$error3 = errorData.error) === null || _errorData$error3 === void 0 ? void 0 : _errorData$error3.password) || '',\n            phone: ((_errorData$error4 = errorData.error) === null || _errorData$error4 === void 0 ? void 0 : _errorData$error4.phone) || '',\n            image: '',\n            general: ''\n          };\n          if (userResponse.status === 409 && errorData.error === 'Email already exists, try something else') {\n            newErrors.email = 'Email already exists, try something else.';\n          }\n          setErrorMessages(newErrors);\n          throw new Error('Failed to fetch user details or role information');\n        }\n        const userData = await userResponse.json();\n        const roleData = await roleResponse.json(); // Role fetched from /userroles/{userId}\n        console.log('Fetched user data:', userData);\n        console.log('Fetched role data:', roleData);\n        if (userData.user && roleData.user_roles) {\n          const {\n            name,\n            email,\n            phone,\n            img\n          } = userData.user;\n          const {\n            roleID\n          } = roleData.user_roles;\n          setName(name || '');\n          setEmail(email || '');\n          setPhone(phone || '');\n          setPreview(img || defaultImage);\n          setRole(roleID); // Set the role based on the roleID from the /userroles/{userId} endpoint\n\n          // Optionally, pre-fill vendorId if it's part of the user data or role data\n        } else {\n          console.error('No user or role data in response');\n          setErrorMessages(prev => ({\n            ...prev,\n            general: 'User or role data is missing in response'\n          }));\n        }\n      } catch (error) {\n        console.error('Error fetching user details:', error);\n        setErrorMessages(prev => ({\n          ...prev,\n          general: 'Failed to load user details'\n        }));\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserDetails();\n  }, [userId]);\n  const handleImageClick = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\n      if (!validTypes.includes(file.type)) {\n        setErrorMessages(prev => ({\n          ...prev,\n          image: 'Invalid image type. Please upload a JPEG, PNG, GIF, or WEBP image.'\n        }));\n        setImage(null);\n        setPreview(prev => prev || defaultImage);\n        setTimeout(() => {\n          setErrorMessages(prev => ({\n            ...prev,\n            image: ''\n          }));\n        }, 10000);\n        return;\n      }\n      if (file.size > 2000000) {\n        // 2MB\n        setErrorMessages(prev => ({\n          ...prev,\n          image: 'Image size must be less than 2MB.'\n        }));\n        setImage(null);\n        setPreview(prev => prev || defaultImage);\n        setTimeout(() => {\n          setErrorMessages(prev => ({\n            ...prev,\n            image: ''\n          }));\n        }, 3000);\n        return;\n      }\n      setErrorMessages(prev => ({\n        ...prev,\n        image: ''\n      }));\n      setImage(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSave = async event => {\n    event.preventDefault();\n    setErrorMessages({\n      name: '',\n      email: '',\n      password: '',\n      phone: '',\n      image: '',\n      general: ''\n    });\n    let hasErrors = false;\n\n    // Validate Name\n    if (!name.trim()) {\n      setErrorMessages(prev => ({\n        ...prev,\n        name: 'Name is required.'\n      }));\n      hasErrors = true;\n    }\n\n    // Validate Email\n    if (!email.trim()) {\n      setErrorMessages(prev => ({\n        ...prev,\n        email: 'Email is required.'\n      }));\n      hasErrors = true;\n    }\n\n    // Validate Phone\n    if (!phone.trim()) {\n      setErrorMessages(prev => ({\n        ...prev,\n        phone: 'Phone number is required.'\n      }));\n      hasErrors = true;\n    }\n\n    // Validate if image has errors\n    if (errorMessages.image) {\n      hasErrors = true;\n    }\n    if (hasErrors) {\n      setSuccess(null);\n      return;\n    }\n\n    // Create FormData object\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('phone', phone);\n\n    // Only append password if it's not empty\n    if (password.trim()) {\n      formData.append('password', password);\n    }\n\n    // Append image if the user selected one\n    if (image) {\n      formData.append('img', image);\n    }\n    event.preventDefault();\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n\n      // Create URLSearchParams object\n      const formData = new URLSearchParams();\n      formData.append('role', role);\n      formData.append('vendorID', vendorId);\n      const response = await fetch(`http://localhost:8080/grantrole/${userId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          Authorization: `Bearer ${token}`\n        },\n        body: formData.toString() // Convert URLSearchParams to a URL-encoded string\n      });\n      if (!response.ok) {\n        const errorResponse = await response.json(); // Get detailed error message\n        throw new Error(`Failed to update user role: ${errorResponse.error}`);\n      }\n      setSuccess('Profile updated successfully');\n      setSuccessColor('green'); // Set success color to green\n      setTimeout(() => setSuccess(null), 2000); // Hide success message after 2 seconds\n      setTimeout(() => navigate('/users'), 2000); // Optional: redirect after a short delay\n    } catch (error) {\n      console.error('Error updating profile or role:', error);\n      setErrorMessages(prev => ({\n        ...prev,\n        general: 'Failed to update profile or role'\n      }));\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDelete = async () => {\n    if (window.confirm('Are you sure you want to delete this user?')) {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`http://localhost:8080/users/${userId}`, {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          console.error('Backend errors:', errorData);\n          setErrorMessages(prev => ({\n            ...prev,\n            general: 'Failed to delete user'\n          }));\n          return;\n        }\n        setSuccess('User deleted successfully');\n        setSuccessColor('red'); // Set success color to red\n        setTimeout(() => {\n          setSuccess(null);\n          navigate('/users'); // Redirect to users list after deletion\n        }, 2000); // Optional: redirect after a short delay\n      } catch (error) {\n        console.error('Error deleting user:', error);\n        setErrorMessages(prev => ({\n          ...prev,\n          general: 'Failed to delete user'\n        }));\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 12\n    }, this);\n  }\n  const handleImageError = e => {\n    e.target.src = defaultImage;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-image-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: imageRef,\n        onChange: handleImageClick,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: preview,\n        alt: name,\n        className: `profile-image ${!preview ? 'no-image' : ''}`,\n        onError: handleImageError,\n        onClick: () => {\n          var _imageRef$current;\n          return (_imageRef$current = imageRef.current) === null || _imageRef$current === void 0 ? void 0 : _imageRef$current.click();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), errorMessages.image && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessages.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSave,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group ${errorMessages.name ? 'error' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errorMessages.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group ${errorMessages.email ? 'error' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), errorMessages.email && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errorMessages.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group ${errorMessages.password ? 'error' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), errorMessages.password && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errorMessages.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group ${errorMessages.phone ? 'error' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"phone\",\n            value: phone,\n            onChange: e => setPhone(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), errorMessages.phone && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errorMessages.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group ${errorMessages.role ? 'error' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"role\",\n            children: \"Role:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"role\",\n            value: role,\n            onChange: e => setRole(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), errorMessages.role && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errorMessages.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), role === '2' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group ${errorMessages.vendorId ? 'error' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"vendorId\",\n            children: \"Vendor ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"vendorId\",\n            value: vendorId,\n            onChange: e => setVendorId(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), errorMessages.vendorId && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errorMessages.vendorId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"save-button\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), errorMessages.general && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessages.general\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        style: {\n          color: successColor\n        },\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        className: \"delete-button\",\n        children: \"Delete User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n}\n_s(EditUser, \"eiZhDGTQYoenXxfjUoVWcCrVLco=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditUser;\nexport default EditUser;\nvar _c;\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useParams","defaultImage","jsxDEV","_jsxDEV","EditUser","_s","userId","navigate","image","setImage","preview","setPreview","name","setName","email","setEmail","password","setPassword","phone","setPhone","vendorId","setVendorId","role","setRole","errorMessages","setErrorMessages","general","loading","setLoading","success","setSuccess","successColor","setSuccessColor","imageRef","fetchUserDetails","token","localStorage","getItem","Error","userResponse","roleResponse","Promise","all","fetch","headers","Authorization","ok","_errorData$error","_errorData$error2","_errorData$error3","_errorData$error4","errorData","json","console","error","newErrors","status","userData","roleData","log","user","user_roles","img","roleID","prev","handleImageClick","event","file","target","files","validTypes","includes","type","setTimeout","size","reader","FileReader","onloadend","result","readAsDataURL","handleSave","preventDefault","hasErrors","trim","formData","FormData","append","URLSearchParams","response","method","body","toString","errorResponse","handleDelete","window","confirm","children","className","fileName","_jsxFileName","lineNumber","columnNumber","handleImageError","e","src","ref","onChange","style","display","alt","onError","onClick","_imageRef$current","current","click","onSubmit","htmlFor","id","value","color","_c","$RefreshReg$"],"sources":["C:/Users/oG_Ju/OneDrive/Desktop/SadeemVendors-master/frontend/src/components/edituser.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport '../css/editprofile.css';\nimport defaultImage from '../css/vendor.jpg';\n\nfunction EditUser() {\n  const { userId } = useParams();\n  const navigate = useNavigate();\n  const [image, setImage] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [phone, setPhone] = useState('');\n  const [vendorId, setVendorId] = useState(''); // New state for vendor ID\n  const [role, setRole] = useState(''); // State for role ID\n  const [errorMessages, setErrorMessages] = useState({\n    name: '',\n    email: '',\n    password: '',\n    phone: '',\n    image: '',\n    general: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [success, setSuccess] = useState(null);\n  const [successColor, setSuccessColor] = useState(''); // Add state for success message color\n  const imageRef = useRef(null);\n\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      setLoading(true);\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          throw new Error('No token found');\n        }\n\n        const [userResponse, roleResponse] = await Promise.all([\n          fetch(`http://localhost:8080/users/${userId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }),\n          fetch(`http://localhost:8080/userroles/${userId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          })\n        ]);\n\n        if (!userResponse.ok || !roleResponse.ok) {\n          const errorData = await userResponse.json() || {};\n          console.error('Backend errors:', errorData);\n\n          const newErrors = {\n            name: errorData.error?.name || '',\n            email: errorData.error?.email || '',\n            password: errorData.error?.password || '',\n            phone: errorData.error?.phone || '',\n            image: '',\n            general: '',\n          };\n\n          if (userResponse.status === 409 && errorData.error === 'Email already exists, try something else') {\n            newErrors.email = 'Email already exists, try something else.';\n          }\n\n          setErrorMessages(newErrors);\n          throw new Error('Failed to fetch user details or role information');\n        }\n\n        const userData = await userResponse.json();\n        const roleData = await roleResponse.json(); // Role fetched from /userroles/{userId}\n        console.log('Fetched user data:', userData);\n        console.log('Fetched role data:', roleData);\n\n        if (userData.user && roleData.user_roles) {\n          const { name, email, phone, img } = userData.user;\n          const { roleID } = roleData.user_roles;\n\n          setName(name || '');\n          setEmail(email || '');\n          setPhone(phone || '');\n          setPreview(img || defaultImage);\n          setRole(roleID); // Set the role based on the roleID from the /userroles/{userId} endpoint\n\n          // Optionally, pre-fill vendorId if it's part of the user data or role data\n        } else {\n          console.error('No user or role data in response');\n          setErrorMessages(prev => ({ ...prev, general: 'User or role data is missing in response' }));\n        }\n      } catch (error) {\n        console.error('Error fetching user details:', error);\n        setErrorMessages(prev => ({ ...prev, general: 'Failed to load user details' }));\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUserDetails();\n  }, [userId]);\n\n  const handleImageClick = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\n      if (!validTypes.includes(file.type)) {\n        setErrorMessages(prev => ({\n          ...prev,\n          image: 'Invalid image type. Please upload a JPEG, PNG, GIF, or WEBP image.'\n        }));\n        \n        setImage(null);\n        setPreview(prev => prev || defaultImage);\n\n        setTimeout(() => {\n          setErrorMessages(prev => ({ ...prev, image: '' }));\n        }, 10000);\n\n        return;\n      }\n\n      if (file.size > 2000000) { // 2MB\n        setErrorMessages(prev => ({\n          ...prev,\n          image: 'Image size must be less than 2MB.'\n        }));\n\n        setImage(null);\n        setPreview(prev => prev || defaultImage);\n\n        setTimeout(() => {\n          setErrorMessages(prev => ({ ...prev, image: '' }));\n        }, 3000);\n\n        return;\n      }\n\n      setErrorMessages(prev => ({ ...prev, image: '' }));\n      setImage(file);\n\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSave = async (event) => {\n    event.preventDefault();\n    \n    setErrorMessages({\n      name: '',\n      email: '',\n      password: '',\n      phone: '',\n      image: '',\n      general: '',\n    });\n    \n    let hasErrors = false;\n    \n    // Validate Name\n    if (!name.trim()) {\n      setErrorMessages(prev => ({ ...prev, name: 'Name is required.' }));\n      hasErrors = true;\n    }\n    \n    // Validate Email\n    if (!email.trim()) {\n      setErrorMessages(prev => ({ ...prev, email: 'Email is required.' }));\n      hasErrors = true;\n    }\n    \n    // Validate Phone\n    if (!phone.trim()) {\n      setErrorMessages(prev => ({ ...prev, phone: 'Phone number is required.' }));\n      hasErrors = true;\n    }\n    \n    // Validate if image has errors\n    if (errorMessages.image) {\n      hasErrors = true;\n    }\n    \n    if (hasErrors) {\n      setSuccess(null);\n      return;\n    }\n    \n    // Create FormData object\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('phone', phone);\n    \n    // Only append password if it's not empty\n    if (password.trim()) {\n      formData.append('password', password);\n    }\n    \n    // Append image if the user selected one\n    if (image) {\n      formData.append('img', image);\n    } event.preventDefault();\n    setLoading(true);\n  \n    try {\n      const token = localStorage.getItem('token');\n      \n      // Create URLSearchParams object\n      const formData = new URLSearchParams();\n      formData.append('role', role);\n      formData.append('vendorID', vendorId);\n  \n      const response = await fetch(`http://localhost:8080/grantrole/${userId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          Authorization: `Bearer ${token}`,\n        },\n        body: formData.toString(), // Convert URLSearchParams to a URL-encoded string\n      });\n  \n      if (!response.ok) {\n        const errorResponse = await response.json(); // Get detailed error message\n        throw new Error(`Failed to update user role: ${errorResponse.error}`);\n      }\n  \n      setSuccess('Profile updated successfully');\n      setSuccessColor('green'); // Set success color to green\n      setTimeout(() => setSuccess(null), 2000); // Hide success message after 2 seconds\n      setTimeout(() => navigate('/users'), 2000); // Optional: redirect after a short delay\n    } catch (error) {\n      console.error('Error updating profile or role:', error);\n      setErrorMessages(prev => ({ ...prev, general: 'Failed to update profile or role' }));\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  \n  const handleDelete = async () => {\n    if (window.confirm('Are you sure you want to delete this user?')) {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`http://localhost:8080/users/${userId}`, {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          console.error('Backend errors:', errorData);\n          setErrorMessages(prev => ({ ...prev, general: 'Failed to delete user' }));\n          return;\n        }\n\n        setSuccess('User deleted successfully');\n        setSuccessColor('red'); // Set success color to red\n        setTimeout(() => {\n          setSuccess(null);\n          navigate('/users'); // Redirect to users list after deletion\n        }, 2000); // Optional: redirect after a short delay\n      } catch (error) {\n        console.error('Error deleting user:', error);\n        setErrorMessages(prev => ({ ...prev, general: 'Failed to delete user' }));\n      }\n    }\n  };\n\n  if (loading) {\n    return <div>{loading && <div className=\"spinner\"></div>}</div>;\n  }\n\n  const handleImageError = (e) => {\n    e.target.src = defaultImage;\n  };\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-image-container\">\n        <input\n          type=\"file\"\n          ref={imageRef}\n          onChange={handleImageClick}\n          style={{ display: 'none' }}\n        />\n        <img\n          src={preview}\n          alt={name}\n          className={`profile-image ${!preview ? 'no-image' : ''}`}\n          onError={handleImageError}\n          onClick={() => imageRef.current?.click()}\n        />\n        {errorMessages.image && (\n          <div className=\"error-message\">{errorMessages.image}</div>\n        )}\n      </div>\n      <div className=\"profile-info-container\">\n        <form onSubmit={handleSave}>\n          <div className={`form-group ${errorMessages.name ? 'error' : ''}`}>\n            <label htmlFor=\"name\">Name:</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n            {errorMessages.name && (\n              <div className=\"error-message\">{errorMessages.name}</div>\n            )}\n          </div>\n          <div className={`form-group ${errorMessages.email ? 'error' : ''}`}>\n            <label htmlFor=\"email\">Email:</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            {errorMessages.email && (\n              <div className=\"error-message\">{errorMessages.email}</div>\n            )}\n          </div>\n          <div className={`form-group ${errorMessages.password ? 'error' : ''}`}>\n            <label htmlFor=\"password\">Password:</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            {errorMessages.password && (\n              <div className=\"error-message\">{errorMessages.password}</div>\n            )}\n          </div>\n          <div className={`form-group ${errorMessages.phone ? 'error' : ''}`}>\n            <label htmlFor=\"phone\">Phone:</label>\n            <input\n              type=\"text\"\n              id=\"phone\"\n              value={phone}\n              onChange={(e) => setPhone(e.target.value)}\n            />\n            {errorMessages.phone && (\n              <div className=\"error-message\">{errorMessages.phone}</div>\n            )}\n          </div>\n\n          {/* Conditionally render the Vendor ID field if role is 2 */}\n       \n\n          <div className={`form-group ${errorMessages.role ? 'error' : ''}`}>\n            <label htmlFor=\"role\">Role:</label>\n            <input\n              type=\"text\"\n              id=\"role\"\n              value={role}\n              onChange={(e) => setRole(e.target.value)}\n            />\n            {errorMessages.role && (\n              <div className=\"error-message\">{errorMessages.role}</div>\n            )}\n          </div>\n          {role === '2' && (\n            <div className={`form-group ${errorMessages.vendorId ? 'error' : ''}`}>\n              <label htmlFor=\"vendorId\">Vendor ID:</label>\n              <input\n                type=\"text\"\n                id=\"vendorId\"\n                value={vendorId}\n                onChange={(e) => setVendorId(e.target.value)}\n              />\n              {errorMessages.vendorId && (\n                <div className=\"error-message\">{errorMessages.vendorId}</div>\n              )}\n            </div>\n          )}\n          <button type=\"submit\" className=\"save-button\">Save Changes</button>\n        </form>\n        {errorMessages.general && (\n          <div className=\"error-message\">{errorMessages.general}</div>\n        )}\n        {success && (\n          <div className=\"success-message\" style={{ color: successColor }}>{success}</div>\n        )}\n        <button onClick={handleDelete} className=\"delete-button\">Delete User</button>\n      </div>\n    </div>\n  );\n}\n\nexport default EditUser;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}