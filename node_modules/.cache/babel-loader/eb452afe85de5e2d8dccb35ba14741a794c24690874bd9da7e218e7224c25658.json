{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oG_Ju\\\\OneDrive\\\\Desktop\\\\SadeemVendors-master\\\\frontend\\\\src\\\\components\\\\edituser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport '../css/editprofile.css';\nimport defaultImage from '../css/vendor.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditUser() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n  const [image, setImage] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [phone, setPhone] = useState('');\n  const [role, setRole] = useState(''); // Add state for role\n  const [vendorId, setVendorId] = useState(''); // Add state for vendor ID\n  const [errorMessages, setErrorMessages] = useState({\n    name: '',\n    email: '',\n    password: '',\n    phone: '',\n    role: '',\n    vendorId: '',\n    image: '',\n    general: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [success, setSuccess] = useState(null);\n  const [successColor, setSuccessColor] = useState(''); // Add state for success message color\n  const [isVendorIdRequired, setIsVendorIdRequired] = useState(false); // Add state for vendor ID requirement\n  const imageRef = useRef(null);\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      setLoading(true);\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          throw new Error('No token found');\n        }\n\n        // Fetch user details\n        const userResponse = await fetch(`http://localhost:8080/users/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!userResponse.ok) {\n          var _errorData$error, _errorData$error2, _errorData$error3, _errorData$error4;\n          const errorData = await userResponse.json();\n          console.error('Backend errors:', errorData);\n          const newErrors = {\n            name: ((_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.name) || '',\n            email: ((_errorData$error2 = errorData.error) === null || _errorData$error2 === void 0 ? void 0 : _errorData$error2.email) || '',\n            password: ((_errorData$error3 = errorData.error) === null || _errorData$error3 === void 0 ? void 0 : _errorData$error3.password) || '',\n            phone: ((_errorData$error4 = errorData.error) === null || _errorData$error4 === void 0 ? void 0 : _errorData$error4.phone) || '',\n            image: '',\n            general: ''\n          };\n          if (userResponse.status === 409 && errorData.error === 'Email already exists, try something else') {\n            newErrors.email = 'Email already exists, try something else.';\n          }\n          setErrorMessages(newErrors);\n          throw new Error('Failed to update profile');\n        }\n        const userData = await userResponse.json();\n        console.log('Fetched user data:', userData);\n        if (userData.user) {\n          const {\n            name,\n            email,\n            phone,\n            img\n          } = userData.user;\n          setName(name || '');\n          setEmail(email || '');\n          setPhone(phone || '');\n          setPreview(img || defaultImage);\n        } else {\n          console.error('No user data in response:', userData);\n          setErrorMessages(prev => ({\n            ...prev,\n            general: 'User data is missing in response'\n          }));\n        }\n      } catch (error) {\n        console.error('Error fetching user details:', error);\n        setErrorMessages(prev => ({\n          ...prev,\n          general: 'Failed to load user details'\n        }));\n      }\n    };\n    const fetchUserRole = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const roleResponse = await fetch(`http://localhost:8080/userroles/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!roleResponse.ok) {\n          const errorData = await roleResponse.json();\n          console.error('Backend errors:', errorData);\n          setErrorMessages(prev => ({\n            ...prev,\n            general: 'Failed to fetch user role'\n          }));\n          return;\n        }\n        const roleData = await roleResponse.json();\n        console.log('Fetched user role data:', roleData);\n        if (roleData.user_roles) {\n          const {\n            roleID\n          } = roleData.user_roles;\n          setRole(roleID);\n          if (roleID === 2) {\n            // Example condition: show vendor ID field if roleID is 2\n            setIsVendorIdRequired(true);\n          }\n        } else {\n          console.error('No user role data in response:', roleData);\n        }\n      } catch (error) {\n        console.error('Error fetching user role:', error);\n        setErrorMessages(prev => ({\n          ...prev,\n          general: 'Failed to load user role'\n        }));\n      }\n    };\n    fetchUserDetails();\n    fetchUserRole();\n  }, [userId]);\n  const handleImageClick = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\n      if (!validTypes.includes(file.type)) {\n        setErrorMessages(prev => ({\n          ...prev,\n          image: 'Invalid image type. Please upload a JPEG, PNG, GIF, or WEBP image.'\n        }));\n        setImage(null);\n        setPreview(prev => prev || defaultImage);\n        setTimeout(() => {\n          setErrorMessages(prev => ({\n            ...prev,\n            image: ''\n          }));\n        }, 10000);\n        return;\n      }\n      if (file.size > 2000000) {\n        // 2MB\n        setErrorMessages(prev => ({\n          ...prev,\n          image: 'Image size must be less than 2MB.'\n        }));\n        setImage(null);\n        setPreview(prev => prev || defaultImage);\n        setTimeout(() => {\n          setErrorMessages(prev => ({\n            ...prev,\n            image: ''\n          }));\n        }, 3000);\n        return;\n      }\n      setErrorMessages(prev => ({\n        ...prev,\n        image: ''\n      }));\n      setImage(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSave = async event => {\n    event.preventDefault();\n    setErrorMessages({\n      name: '',\n      email: '',\n      password: '',\n      phone: '',\n      role: '',\n      vendorId: '',\n      image: '',\n      general: ''\n    });\n    let hasErrors = false;\n\n    // Validate Name\n    if (!name.trim()) {\n      setErrorMessages(prev => ({\n        ...prev,\n        name: 'Name is required.'\n      }));\n      hasErrors = true;\n    }\n\n    // Validate Email\n    if (!email.trim()) {\n      setErrorMessages(prev => ({\n        ...prev,\n        email: 'Email is required.'\n      }));\n      hasErrors = true;\n    }\n\n    // Validate Phone\n    if (!phone.trim()) {\n      setErrorMessages(prev => ({\n        ...prev,\n        phone: 'Phone number is required.'\n      }));\n      hasErrors = true;\n    }\n\n    // Validate Role if required\n    if (isVendorIdRequired && !vendorId.trim()) {\n      setErrorMessages(prev => ({\n        ...prev,\n        vendorId: 'Vendor ID is required.'\n      }));\n      hasErrors = true;\n    }\n\n    // Validate if image has errors\n    if (errorMessages.image) {\n      hasErrors = true;\n    }\n    if (hasErrors) {\n      setSuccess(null);\n      return;\n    }\n\n    // Create FormData object\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('phone', phone);\n\n    // Only append password if it's not empty\n    if (password.trim()) {\n      formData.append('password', password);\n    }\n\n    // Append image if the user selected one\n    if (image) {\n      formData.append('img', image);\n    }\n\n    // Append vendor ID if required\n    if (isVendorIdRequired && vendorId.trim()) {\n      formData.append('vendorId', vendorId);\n    }\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/users/${userId}`, {\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        body: formData\n      });\n      if (!response.ok) {\n        var _errorData$error5, _errorData$error6, _errorData$error7, _errorData$error8;\n        const errorData = await response.json();\n        console.error('Backend errors:', errorData);\n        const newErrors = {\n          name: ((_errorData$error5 = errorData.error) === null || _errorData$error5 === void 0 ? void 0 : _errorData$error5.name) || '',\n          email: ((_errorData$error6 = errorData.error) === null || _errorData$error6 === void 0 ? void 0 : _errorData$error6.email) || '',\n          password: ((_errorData$error7 = errorData.error) === null || _errorData$error7 === void 0 ? void 0 : _errorData$error7.password) || '',\n          phone: ((_errorData$error8 = errorData.error) === null || _errorData$error8 === void 0 ? void 0 : _errorData$error8.phone) || '',\n          role: '',\n          vendorId: '',\n          image: '',\n          general: ''\n        };\n        if (response.status === 409 && errorData.error === 'Email already exists, try something else') {\n          newErrors.email = 'Email already exists, try something else.';\n        }\n        setErrorMessages(newErrors);\n        throw new Error('Failed to update profile');\n      }\n      setSuccess('Profile updated successfully');\n      setSuccessColor('green'); // Set success color to green\n      setTimeout(() => setSuccess(null), 2000); // Hide success message after 2 seconds\n      setTimeout(() => navigate('/users'), 1000);\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      setSuccess(null);\n      setErrorMessages(prev => ({\n        ...prev,\n        general: 'Failed to update profile'\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"edit-profile-form\",\n      onSubmit: handleSave,\n      children: [errorMessages.general && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessages.general\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 13\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `success-message ${successColor}`,\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: preview || defaultImage,\n            alt: \"Preview\",\n            className: \"profile-preview\",\n            onClick: () => {\n              var _imageRef$current;\n              return (_imageRef$current = imageRef.current) === null || _imageRef$current === void 0 ? void 0 : _imageRef$current.click();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"image\",\n          ref: imageRef,\n          style: {\n            display: 'none'\n          },\n          onChange: handleImageClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this), errorMessages.image && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errorMessages.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errorMessages.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), errorMessages.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errorMessages.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phone\",\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          id: \"phone\",\n          value: phone,\n          onChange: e => setPhone(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this), errorMessages.phone && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errorMessages.phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this), errorMessages.password && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errorMessages.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this), isVendorIdRequired && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"vendorId\",\n          children: \"Vendor ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"vendorId\",\n          value: vendorId,\n          onChange: e => setVendorId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 15\n        }, this), errorMessages.vendorId && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errorMessages.vendorId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 5\n  }, this);\n}\n_s(EditUser, \"8jFsrz61KgMW3zyYV+NibKkv3pI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditUser;\nexport default EditUser;\nvar _c;\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useParams","defaultImage","jsxDEV","_jsxDEV","EditUser","_s","userId","navigate","image","setImage","preview","setPreview","name","setName","email","setEmail","password","setPassword","phone","setPhone","role","setRole","vendorId","setVendorId","errorMessages","setErrorMessages","general","loading","setLoading","success","setSuccess","successColor","setSuccessColor","isVendorIdRequired","setIsVendorIdRequired","imageRef","fetchUserDetails","token","localStorage","getItem","Error","userResponse","fetch","headers","Authorization","ok","_errorData$error","_errorData$error2","_errorData$error3","_errorData$error4","errorData","json","console","error","newErrors","status","userData","log","user","img","prev","fetchUserRole","roleResponse","roleData","user_roles","roleID","handleImageClick","event","file","target","files","validTypes","includes","type","setTimeout","size","reader","FileReader","onloadend","result","readAsDataURL","handleSave","preventDefault","hasErrors","trim","formData","FormData","append","response","method","body","_errorData$error5","_errorData$error6","_errorData$error7","_errorData$error8","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","src","alt","onClick","_imageRef$current","current","click","id","ref","style","display","onChange","value","e","_c","$RefreshReg$"],"sources":["C:/Users/oG_Ju/OneDrive/Desktop/SadeemVendors-master/frontend/src/components/edituser.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport '../css/editprofile.css';\nimport defaultImage from '../css/vendor.jpg';\n\nfunction EditUser() {\n  const { userId } = useParams();\n  const navigate = useNavigate();\n  const [image, setImage] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [phone, setPhone] = useState('');\n  const [role, setRole] = useState(''); // Add state for role\n  const [vendorId, setVendorId] = useState(''); // Add state for vendor ID\n  const [errorMessages, setErrorMessages] = useState({\n    name: '',\n    email: '',\n    password: '',\n    phone: '',\n    role: '',\n    vendorId: '',\n    image: '',\n    general: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [success, setSuccess] = useState(null);\n  const [successColor, setSuccessColor] = useState(''); // Add state for success message color\n  const [isVendorIdRequired, setIsVendorIdRequired] = useState(false); // Add state for vendor ID requirement\n  const imageRef = useRef(null);\n\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      setLoading(true);\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          throw new Error('No token found');\n        }\n\n        // Fetch user details\n        const userResponse = await fetch(`http://localhost:8080/users/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!userResponse.ok) {\n          const errorData = await userResponse.json();\n          console.error('Backend errors:', errorData);\n      \n          const newErrors = {\n            name: errorData.error?.name || '',\n            email: errorData.error?.email || '',\n            password: errorData.error?.password || '',\n            phone: errorData.error?.phone || '',\n            image: '',\n            general: '',\n          };\n      \n          if (userResponse.status === 409 && errorData.error === 'Email already exists, try something else') {\n            newErrors.email = 'Email already exists, try something else.';\n          }\n      \n          setErrorMessages(newErrors);\n      \n          throw new Error('Failed to update profile');\n        }\n\n        const userData = await userResponse.json();\n        console.log('Fetched user data:', userData);\n\n        if (userData.user) {\n          const { name, email, phone, img } = userData.user;\n          setName(name || '');\n          setEmail(email || '');\n          setPhone(phone || '');\n          setPreview(img || defaultImage);\n        } else {\n          console.error('No user data in response:', userData);\n          setErrorMessages(prev => ({ ...prev, general: 'User data is missing in response' }));\n        }\n      } catch (error) {\n        console.error('Error fetching user details:', error);\n        setErrorMessages(prev => ({ ...prev, general: 'Failed to load user details' }));\n      }\n    };\n\n    const fetchUserRole = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const roleResponse = await fetch(`http://localhost:8080/userroles/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!roleResponse.ok) {\n          const errorData = await roleResponse.json();\n          console.error('Backend errors:', errorData);\n          setErrorMessages(prev => ({ ...prev, general: 'Failed to fetch user role' }));\n          return;\n        }\n\n        const roleData = await roleResponse.json();\n        console.log('Fetched user role data:', roleData);\n\n        if (roleData.user_roles) {\n          const { roleID } = roleData.user_roles;\n          setRole(roleID);\n          if (roleID === 2) { // Example condition: show vendor ID field if roleID is 2\n            setIsVendorIdRequired(true);\n          }\n        } else {\n          console.error('No user role data in response:', roleData);\n        }\n      } catch (error) {\n        console.error('Error fetching user role:', error);\n        setErrorMessages(prev => ({ ...prev, general: 'Failed to load user role' }));\n      }\n    };\n\n    fetchUserDetails();\n    fetchUserRole();\n  }, [userId]);\n\n  const handleImageClick = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\n      if (!validTypes.includes(file.type)) {\n        setErrorMessages(prev => ({\n          ...prev,\n          image: 'Invalid image type. Please upload a JPEG, PNG, GIF, or WEBP image.'\n        }));\n        \n        setImage(null);\n        setPreview(prev => prev || defaultImage);\n\n        setTimeout(() => {\n          setErrorMessages(prev => ({ ...prev, image: '' }));\n        }, 10000);\n\n        return;\n      }\n\n      if (file.size > 2000000) { // 2MB\n        setErrorMessages(prev => ({\n          ...prev,\n          image: 'Image size must be less than 2MB.'\n        }));\n\n        setImage(null);\n        setPreview(prev => prev || defaultImage);\n\n        setTimeout(() => {\n          setErrorMessages(prev => ({ ...prev, image: '' }));\n        }, 3000);\n\n        return;\n      }\n\n      setErrorMessages(prev => ({ ...prev, image: '' }));\n      setImage(file);\n\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleSave = async (event) => {\n    event.preventDefault();\n    \n    setErrorMessages({\n      name: '',\n      email: '',\n      password: '',\n      phone: '',\n      role: '',\n      vendorId: '',\n      image: '',\n      general: '',\n    });\n  \n    let hasErrors = false;\n  \n    // Validate Name\n    if (!name.trim()) {\n      setErrorMessages(prev => ({ ...prev, name: 'Name is required.' }));\n      hasErrors = true;\n    }\n  \n    // Validate Email\n    if (!email.trim()) {\n      setErrorMessages(prev => ({ ...prev, email: 'Email is required.' }));\n      hasErrors = true;\n    }\n  \n    // Validate Phone\n    if (!phone.trim()) {\n      setErrorMessages(prev => ({ ...prev, phone: 'Phone number is required.' }));\n      hasErrors = true;\n    }\n  \n    // Validate Role if required\n    if (isVendorIdRequired && !vendorId.trim()) {\n      setErrorMessages(prev => ({ ...prev, vendorId: 'Vendor ID is required.' }));\n      hasErrors = true;\n    }\n  \n    // Validate if image has errors\n    if (errorMessages.image) {\n      hasErrors = true;\n    }\n  \n    if (hasErrors) {\n      setSuccess(null);\n      return;\n    }\n  \n    // Create FormData object\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('phone', phone);\n  \n    // Only append password if it's not empty\n    if (password.trim()) {\n      formData.append('password', password);\n    }\n  \n    // Append image if the user selected one\n    if (image) {\n      formData.append('img', image);\n    }\n  \n    // Append vendor ID if required\n    if (isVendorIdRequired && vendorId.trim()) {\n      formData.append('vendorId', vendorId);\n    }\n  \n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/users/${userId}`, {\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        body: formData,\n      });\n  \n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Backend errors:', errorData);\n  \n        const newErrors = {\n          name: errorData.error?.name || '',\n          email: errorData.error?.email || '',\n          password: errorData.error?.password || '',\n          phone: errorData.error?.phone || '',\n          role: '',\n          vendorId: '',\n          image: '',\n          general: '',\n        };\n  \n        if (response.status === 409 && errorData.error === 'Email already exists, try something else') {\n          newErrors.email = 'Email already exists, try something else.';\n        }\n  \n        setErrorMessages(newErrors);\n        throw new Error('Failed to update profile');\n      }\n  \n      setSuccess('Profile updated successfully');\n      setSuccessColor('green'); // Set success color to green\n      setTimeout(() => setSuccess(null), 2000); // Hide success message after 2 seconds\n      setTimeout(() => navigate('/users'), 1000);\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      setSuccess(null);\n      setErrorMessages(prev => ({ ...prev, general: 'Failed to update profile' }));\n    }\n  };\n\n  return (\n    <div className=\"edit-profile-container\">\n      <h1>Edit User Profile</h1>\n      {loading ? (\n        <div>Loading...</div>\n      ) : (\n        <form className=\"edit-profile-form\" onSubmit={handleSave}>\n          {errorMessages.general && (\n            <div className=\"error-message\">{errorMessages.general}</div>\n          )}\n          {success && (\n            <div className={`success-message ${successColor}`}>\n              {success}\n            </div>\n          )}\n          <div className=\"form-group\">\n            <label htmlFor=\"image\">\n              <img\n                src={preview || defaultImage}\n                alt=\"Preview\"\n                className=\"profile-preview\"\n                onClick={() => imageRef.current?.click()}\n              />\n            </label>\n            <input\n              type=\"file\"\n              id=\"image\"\n              ref={imageRef}\n              style={{ display: 'none' }}\n              onChange={handleImageClick}\n            />\n            {errorMessages.image && (\n              <div className=\"error-message\">{errorMessages.image}</div>\n            )}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n            {errorMessages.name && (\n              <div className=\"error-message\">{errorMessages.name}</div>\n            )}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            {errorMessages.email && (\n              <div className=\"error-message\">{errorMessages.email}</div>\n            )}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"phone\">Phone</label>\n            <input\n              type=\"tel\"\n              id=\"phone\"\n              value={phone}\n              onChange={(e) => setPhone(e.target.value)}\n            />\n            {errorMessages.phone && (\n              <div className=\"error-message\">{errorMessages.phone}</div>\n            )}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            {errorMessages.password && (\n              <div className=\"error-message\">{errorMessages.password}</div>\n            )}\n          </div>\n          {isVendorIdRequired && (\n            <div className=\"form-group\">\n              <label htmlFor=\"vendorId\">Vendor ID</label>\n              <input\n                type=\"text\"\n                id=\"vendorId\"\n                value={vendorId}\n                onChange={(e) => setVendorId(e.target.value)}\n              />\n              {errorMessages.vendorId && (\n                <div className=\"error-message\">{errorMessages.vendorId}</div>\n              )}\n            </div>\n          )}\n          <button type=\"submit\">Save</button>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default EditUser;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}