{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oG_Ju\\\\OneDrive\\\\Desktop\\\\SadeemVendors-master\\\\frontend\\\\src\\\\components\\\\rolemanagment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport '../css/editprofile.css'; // Import the same CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoleManagementPage = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n  const [role, setRole] = useState('');\n  const [vendorId, setVendorId] = useState('');\n  const [isVendorIdRequired, setIsVendorIdRequired] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [successColor, setSuccessColor] = useState('');\n  useEffect(() => {\n    const fetchUserRole = async () => {\n      setLoading(true);\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`http://localhost:8080/users/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch user');\n        }\n        const data = await response.json();\n        setRole(data.user.role || '');\n        setVendorId(data.user.vendorId || '');\n        setIsVendorIdRequired(data.user.role === '2'); // Adjust based on role value\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserRole();\n  }, [userId]);\n  const handleRoleChange = event => {\n    const newRole = event.target.value;\n    setRole(newRole);\n    setIsVendorIdRequired(newRole === '2'); // Show vendor_id textbox if role is '2'\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/userrole`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          userId,\n          role,\n          vendorId\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update user role');\n      }\n      setSuccess('User role updated successfully');\n      setSuccessColor('green'); // Set success color to green\n      setTimeout(() => {\n        setSuccess(null);\n        navigate('/users'); // Redirect back to users page on success\n      }, 2000);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Manage User Role\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `form-group ${error ? 'error' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"role\",\n          children: \"Role:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"role\",\n          value: role,\n          onChange: handleRoleChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"Role 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"Role 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), isVendorIdRequired && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `form-group ${error ? 'error' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"vendorId\",\n          children: \"Vendor ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"vendorId\",\n          value: vendorId,\n          onChange: e => setVendorId(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        style: {\n          color: successColor\n        },\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(RoleManagementPage, \"WHYyLixXqC1WBI2ez3iIW7VYHRE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = RoleManagementPage;\nexport default RoleManagementPage;\nvar _c;\n$RefreshReg$(_c, \"RoleManagementPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","RoleManagementPage","_s","userId","navigate","role","setRole","vendorId","setVendorId","isVendorIdRequired","setIsVendorIdRequired","loading","setLoading","error","setError","success","setSuccess","successColor","setSuccessColor","fetchUserRole","token","localStorage","getItem","response","fetch","headers","Authorization","ok","Error","data","json","user","message","handleRoleChange","event","newRole","target","value","handleSubmit","preventDefault","method","body","JSON","stringify","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","id","onChange","required","type","e","style","color","_c","$RefreshReg$"],"sources":["C:/Users/oG_Ju/OneDrive/Desktop/SadeemVendors-master/frontend/src/components/rolemanagment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport '../css/editprofile.css'; // Import the same CSS file for styling\r\n\r\nconst RoleManagementPage = () => {\r\n  const { userId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [role, setRole] = useState('');\r\n  const [vendorId, setVendorId] = useState('');\r\n  const [isVendorIdRequired, setIsVendorIdRequired] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [successColor, setSuccessColor] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchUserRole = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await fetch(`http://localhost:8080/users/${userId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch user');\r\n        }\r\n        const data = await response.json();\r\n        setRole(data.user.role || '');\r\n        setVendorId(data.user.vendorId || '');\r\n        setIsVendorIdRequired(data.user.role === '2'); // Adjust based on role value\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserRole();\r\n  }, [userId]);\r\n\r\n  const handleRoleChange = (event) => {\r\n    const newRole = event.target.value;\r\n    setRole(newRole);\r\n    setIsVendorIdRequired(newRole === '2'); // Show vendor_id textbox if role is '2'\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`http://localhost:8080/userrole`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ userId, role, vendorId }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to update user role');\r\n      }\r\n      setSuccess('User role updated successfully');\r\n      setSuccessColor('green'); // Set success color to green\r\n      setTimeout(() => {\r\n        setSuccess(null);\r\n        navigate('/users'); // Redirect back to users page on success\r\n      }, 2000);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div className=\"error-message\">Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <h1 className=\"title\">Manage User Role</h1>\r\n      <form onSubmit={handleSubmit} className=\"form-container\">\r\n        <div className={`form-group ${error ? 'error' : ''}`}>\r\n          <label htmlFor=\"role\">Role:</label>\r\n          <select\r\n            id=\"role\"\r\n            value={role}\r\n            onChange={handleRoleChange}\r\n            required\r\n          >\r\n            <option value=\"\">Select Role</option>\r\n            <option value=\"1\">Role 1</option>\r\n            <option value=\"2\">Role 2</option>\r\n            {/* Add more roles as needed */}\r\n          </select>\r\n          {error && <div className=\"error-message\">{error}</div>}\r\n        </div>\r\n        {isVendorIdRequired && (\r\n          <div className={`form-group ${error ? 'error' : ''}`}>\r\n            <label htmlFor=\"vendorId\">Vendor ID:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"vendorId\"\r\n              value={vendorId}\r\n              onChange={(e) => setVendorId(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n        )}\r\n        {success && (\r\n          <div className=\"success-message\" style={{ color: successColor }}>\r\n            {success}\r\n          </div>\r\n        )}\r\n        <div className=\"form-buttons\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoleManagementPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}