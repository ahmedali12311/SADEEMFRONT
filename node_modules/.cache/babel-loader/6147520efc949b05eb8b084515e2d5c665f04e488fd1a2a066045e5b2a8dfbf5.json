{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oG_Ju\\\\OneDrive\\\\Desktop\\\\SadeemVendors-master\\\\frontend\\\\src\\\\components\\\\orders.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../css/orders.css'; // Import the updated CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Orders = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [error, setError] = useState(null);\n  const [userRole, setUserRole] = useState(null);\n  const [setUserId] = useState(null);\n  const fetchOrders = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const decodedToken = JSON.parse(atob(token.split('.')[1]));\n      const role = decodedToken.userRole;\n      const id = decodedToken.id;\n      setUserRole(role);\n      setUserId(id);\n      let url = `http://localhost:8080/uservendors/${id}`; // Default for non-vendor owners\n\n      if (role === '2') {\n        // Vendor owner: fetch all orders for their store\n        url = `http://localhost:8080/vendororders/${id}`;\n      }\n      const response = await fetch(url, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setOrders(data.orders || []);\n    } catch (error) {\n      setError('Error fetching orders. Please try again.');\n      console.error('Error fetching orders:', error);\n    }\n  };\n  useEffect(() => {\n    fetchOrders(); // Call fetchOrders on component mount\n  }, []);\n  const handleCompleteOrder = async orderId => {\n    try {\n      const response = await fetch(`http://localhost:8080/orderscompleted/${orderId}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      // Refresh the orders after updating\n      await fetchOrders();\n    } catch (error) {\n      setError('Error updating order status. Please try again.');\n      console.error('Error updating order status:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"orders-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"orders-header\",\n        children: \"Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"orders-list\",\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Total Cost:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this), \" $\", order.total_order_cost]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), \" \", order.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-vendor\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Vendor Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), \" \", order.vendor_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-items\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Items:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), order.item_names.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order-item-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", order.item_prices[index]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), userRole === '2' && order.status !== 'completed' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCompleteOrder(order.id),\n            children: \"Mark as Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 33\n          }, this)]\n        }, order.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(Orders, \"iVVtRVBvGjjmsSp9GhKNxCw4F2E=\");\n_c = Orders;\nexport default Orders;\nvar _c;\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Orders","_s","orders","setOrders","error","setError","userRole","setUserRole","setUserId","fetchOrders","token","localStorage","getItem","decodedToken","JSON","parse","atob","split","role","id","url","response","fetch","headers","ok","Error","data","json","console","handleCompleteOrder","orderId","method","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","order","total_order_cost","status","vendor_name","item_names","item","index","item_prices","onClick","_c","$RefreshReg$"],"sources":["C:/Users/oG_Ju/OneDrive/Desktop/SadeemVendors-master/frontend/src/components/orders.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../css/orders.css'; // Import the updated CSS\r\n\r\nconst Orders = () => {\r\n    const [orders, setOrders] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [userRole, setUserRole] = useState(null);\r\n    const [ setUserId] = useState(null);\r\n\r\n    const fetchOrders = async () => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const decodedToken = JSON.parse(atob(token.split('.')[1]));\r\n            const role = decodedToken.userRole;\r\n            const id = decodedToken.id;\r\n            \r\n            setUserRole(role);\r\n            setUserId(id);\r\n\r\n            let url = `http://localhost:8080/uservendors/${id}`; // Default for non-vendor owners\r\n\r\n            if (role === '2') {\r\n                // Vendor owner: fetch all orders for their store\r\n                url = `http://localhost:8080/vendororders/${id}`;\r\n            }\r\n\r\n            const response = await fetch(url, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n\r\n            const data = await response.json();\r\n            setOrders(data.orders || []);\r\n        } catch (error) {\r\n            setError('Error fetching orders. Please try again.');\r\n            console.error('Error fetching orders:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchOrders(); // Call fetchOrders on component mount\r\n    }, []);\r\n\r\n    const handleCompleteOrder = async (orderId) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/orderscompleted/${orderId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n\r\n            // Refresh the orders after updating\r\n            await fetchOrders();\r\n        } catch (error) {\r\n            setError('Error updating order status. Please try again.');\r\n            console.error('Error updating order status:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"orders-container\">\r\n            <div className=\"orders-card\">\r\n                <div className=\"orders-header\">Orders</div>\r\n                {error && <p className=\"error-message\">{error}</p>}\r\n                <div className=\"orders-list\">\r\n                    {orders.map(order => (\r\n                        <div key={order.id} className=\"order-item\">\r\n                            <div className=\"order-details\">\r\n                                <strong>Total Cost:</strong> ${order.total_order_cost}\r\n                            </div>\r\n                            <div className=\"order-details\">\r\n                                <strong>Status:</strong> {order.status}\r\n                            </div>\r\n                            <div className=\"order-vendor\">\r\n                                <strong>Vendor Name:</strong> {order.vendor_name}\r\n                            </div>\r\n                            <div className=\"order-items\">\r\n                                <strong>Items:</strong>\r\n                                {order.item_names.map((item, index) => (\r\n                                    <div key={index} className=\"order-item-details\">\r\n                                        <span>{item}</span>\r\n                                        <span>${order.item_prices[index]}</span>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            {userRole === '2' && order.status !== 'completed' && (\r\n                                <button onClick={() => handleCompleteOrder(order.id)}>Mark as Completed</button>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Orders;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}